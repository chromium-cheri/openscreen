{
  "comments": [
    {
      "key": {
        "uuid": "4ce8aa4d_25096a44",
        "filename": "platform/api/time.h",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-05-15T20:23:29Z",
      "side": 1,
      "message": "This is just a number with no units, could you please add units as well?",
      "range": {
        "startLine": 46,
        "startChar": 8,
        "endLine": 46,
        "endChar": 38
      },
      "revId": "9f9fea0758cbe1a29e77ff18d54bea4f79b7c4e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89f79504_60257d16",
        "filename": "platform/api/trace_logging.h",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-05-15T20:23:29Z",
      "side": 1,
      "message": "Could you please rename it to something else (maybe APPEND_LINE_NUMBER?)\nFirst thing I though of was std::make_unique when I saw this macro",
      "range": {
        "startLine": 21,
        "startChar": 8,
        "endLine": 21,
        "endChar": 19
      },
      "revId": "9f9fea0758cbe1a29e77ff18d54bea4f79b7c4e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e384de1a_ad78bba3",
        "filename": "platform/api/trace_logging.h",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-05-15T20:23:29Z",
      "side": 1,
      "message": "Nit: category",
      "range": {
        "startLine": 22,
        "startChar": 22,
        "endLine": 22,
        "endChar": 30
      },
      "revId": "9f9fea0758cbe1a29e77ff18d54bea4f79b7c4e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15dcc77e_ad4000f5",
        "filename": "platform/api/trace_logging.h",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-05-15T20:23:29Z",
      "side": 1,
      "message": "Nit: compile-time",
      "range": {
        "startLine": 25,
        "startChar": 7,
        "endLine": 25,
        "endChar": 20
      },
      "revId": "9f9fea0758cbe1a29e77ff18d54bea4f79b7c4e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0784f6b3_c3e4f519",
        "filename": "platform/api/trace_logging.h",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-05-15T20:23:29Z",
      "side": 1,
      "message": "Nit: could you please put it after TRACE_ASYNC_START, i.e. after the #if-elif-else-endif",
      "range": {
        "startLine": 54,
        "startChar": 8,
        "endLine": 54,
        "endChar": 23
      },
      "revId": "9f9fea0758cbe1a29e77ff18d54bea4f79b7c4e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "852f0324_45fc238c",
        "filename": "platform/api/trace_logging.h",
        "patchSetId": 2
      },
      "lineNbr": 118,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-05-15T20:23:29Z",
      "side": 1,
      "message": "Not sure it\u0027s necessarily better, but you can use binary literals for flags.",
      "range": {
        "startLine": 116,
        "startChar": 0,
        "endLine": 118,
        "endChar": 26
      },
      "revId": "9f9fea0758cbe1a29e77ff18d54bea4f79b7c4e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1340c18b_26399ca8",
        "filename": "platform/api/trace_logging.h",
        "patchSetId": 2
      },
      "lineNbr": 146,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-05-15T20:23:29Z",
      "side": 1,
      "message": "Having a virtual function call to check if logging is enabled is relatively expensive.",
      "range": {
        "startLine": 146,
        "startChar": 2,
        "endLine": 146,
        "endChar": 60
      },
      "revId": "9f9fea0758cbe1a29e77ff18d54bea4f79b7c4e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "072187e6_182b3b45",
        "filename": "platform/api/trace_logging.h",
        "patchSetId": 2
      },
      "lineNbr": 248,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-05-15T20:23:29Z",
      "side": 1,
      "message": "Add a constructor that accepts TraceIdHierarchy?",
      "range": {
        "startLine": 248,
        "startChar": 2,
        "endLine": 248,
        "endChar": 25
      },
      "revId": "9f9fea0758cbe1a29e77ff18d54bea4f79b7c4e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71ed3664_d2ce141a",
        "filename": "platform/api/trace_logging.h",
        "patchSetId": 2
      },
      "lineNbr": 255,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-05-15T20:23:29Z",
      "side": 1,
      "message": "TraceIdHierarchy?",
      "range": {
        "startLine": 252,
        "startChar": 2,
        "endLine": 255,
        "endChar": 21
      },
      "revId": "9f9fea0758cbe1a29e77ff18d54bea4f79b7c4e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee1dd254_269b4bd9",
        "filename": "platform/api/trace_logging.h",
        "patchSetId": 2
      },
      "lineNbr": 259,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-05-15T20:23:29Z",
      "side": 1,
      "message": "We could run into collisions between provided and generated IDs. Maybe something like top bit is always 1 for generated and 0 for provided IDs?",
      "range": {
        "startLine": 258,
        "startChar": 2,
        "endLine": 259,
        "endChar": 45
      },
      "revId": "9f9fea0758cbe1a29e77ff18d54bea4f79b7c4e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f04c7298_58c404e5",
        "filename": "platform/base/trace_logging.cc",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-05-15T20:23:29Z",
      "side": 1,
      "message": "If we want to save a virtual function call per trace call when we can make TraceLoggingPlatform a regular non-abstract class with no virtual methods, where TraceLoggingPlatform is defined in the header and then declared and implemented in platform here.",
      "range": {
        "startLine": 12,
        "startChar": 6,
        "endLine": 12,
        "endChar": 60
      },
      "revId": "9f9fea0758cbe1a29e77ff18d54bea4f79b7c4e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39e8a1d3_9460347f",
        "filename": "platform/base/trace_logging.cc",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-05-15T20:23:29Z",
      "side": 1,
      "message": "Maybe std::numeric_limits\u003cuint64_t\u003e::max()",
      "range": {
        "startLine": 21,
        "startChar": 12,
        "endLine": 21,
        "endChar": 47
      },
      "revId": "9f9fea0758cbe1a29e77ff18d54bea4f79b7c4e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "024558db_9eec18cb",
        "filename": "platform/base/trace_logging.cc",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-05-15T20:23:29Z",
      "side": 1,
      "message": "If logging is always disabled on non-debug builds, shouldn\u0027t this be OSP_DVLOG here and below?",
      "range": {
        "startLine": 38,
        "startChar": 4,
        "endLine": 38,
        "endChar": 12
      },
      "revId": "9f9fea0758cbe1a29e77ff18d54bea4f79b7c4e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}