{
  "comments": [
    {
      "key": {
        "uuid": "5e95d925_d0ea9982",
        "filename": "platform/impl/platform_client_posix.cc",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2020-02-07T22:34:25Z",
      "side": 1,
      "message": "Not necessarily in this change, but I think we should get rid of the Create() and Shutdown() functions; and just let C++ scoping handle things (RAII). In other words, make the two ctors public and let callers (like main()) just put PlatformClientPosix on the stack and auto-destruct at end-of-scope.",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 23,
        "endChar": 63
      },
      "revId": "3af9daabdf11e9bc1e788db771c0205d345237b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "faae1f75_993a9c4c",
        "filename": "platform/impl/platform_client_posix.cc",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2020-02-07T22:34:25Z",
      "side": 1,
      "message": "c++ style: These shouldn\u0027t use lowercase since they\u0027re not inlined trivial getters/setters. Suggestion: GetTlsDataRouter()",
      "range": {
        "startLine": 40,
        "startChar": 41,
        "endLine": 40,
        "endChar": 56
      },
      "revId": "3af9daabdf11e9bc1e788db771c0205d345237b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cdd94568_a674eb44",
        "filename": "platform/impl/platform_client_posix.cc",
        "patchSetId": 4
      },
      "lineNbr": 49,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2020-02-07T22:34:25Z",
      "side": 1,
      "message": "ditto (c++ style): Suggestion: GetUdpSocketReader()",
      "range": {
        "startLine": 49,
        "startChar": 43,
        "endLine": 49,
        "endChar": 61
      },
      "revId": "3af9daabdf11e9bc1e788db771c0205d345237b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2b887fe_5dc35ceb",
        "filename": "platform/impl/platform_client_posix.cc",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-02-07T22:00:52Z",
      "side": 1,
      "message": "IMHO it seems a bit weird for this class to call stop() if it didn\u0027t call start(). But not a big deal",
      "range": {
        "startLine": 64,
        "startChar": 2,
        "endLine": 64,
        "endChar": 34
      },
      "revId": "3af9daabdf11e9bc1e788db771c0205d345237b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea8d2be5_4487b43f",
        "filename": "platform/impl/platform_client_posix.cc",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2020-02-07T22:34:25Z",
      "side": 1,
      "message": "I think we have to, though, if the TaskRunner was started by the 2-arg ctor. Considerations:\n\n1. Put this LOC inside the then-clause below (just before calling join()).\n\n2. Leave this LOC here, and document in the header that, since PlatformClientPosix takes ownership of the TaskRunner (i.e., using the 3-arg ctor), it will ensure it is stopped before destruction.\n\n#2 seems more reasonable to me, since TaskRunner destruction has the prerequisite that the TaskRunner is already stopped.",
      "parentUuid": "b2b887fe_5dc35ceb",
      "range": {
        "startLine": 64,
        "startChar": 2,
        "endLine": 64,
        "endChar": 34
      },
      "revId": "3af9daabdf11e9bc1e788db771c0205d345237b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe259ffa_ab9c92eb",
        "filename": "platform/impl/platform_client_posix.h",
        "patchSetId": 4
      },
      "lineNbr": 119,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-02-07T22:00:52Z",
      "side": 1,
      "message": "nit: absl::optional over unique_ptr to avoid the heap allocation?",
      "range": {
        "startLine": 119,
        "startChar": 2,
        "endLine": 119,
        "endChar": 51
      },
      "revId": "3af9daabdf11e9bc1e788db771c0205d345237b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}