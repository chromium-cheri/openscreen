{
  "comments": [
    {
      "key": {
        "uuid": "eef7b937_109c9643",
        "filename": "discovery/mdns/domain_name.h",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-08-09T02:11:58Z",
      "side": 1,
      "message": "It seems like we would benefit greatly from returning a StatusOr/ErrorOr like this one: https://cs.chromium.org/chromium/src/third_party/webrtc/api/rtcerror.h?q\u003derroror\u0026l\u003d203\u0026dr\u003dCSs\n\n\nThen this would be ErrorOr\u003cDomainName\u003e Append(first, second)",
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa9236de_903b2a1b",
        "filename": "discovery/mdns/domain_name.h",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-08-22T22:34:16Z",
      "side": 1,
      "message": "Added to issues list.",
      "parentUuid": "eef7b937_109c9643",
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1a60e9b_4d322578",
        "filename": "discovery/mdns/domain_name.h",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-08-23T21:51:47Z",
      "side": 1,
      "message": "Now that we have an issue the tracker here, add a TODO(issues/2)",
      "parentUuid": "eef7b937_109c9643",
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a61cb7f_61a03233",
        "filename": "discovery/mdns/domain_name.h",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-08-09T02:11:58Z",
      "side": 1,
      "message": "Why? have this second version of append?",
      "range": {
        "startLine": 24,
        "startChar": 42,
        "endLine": 24,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7278ed50_990d5f75",
        "filename": "discovery/mdns/domain_name.h",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-08-22T22:34:16Z",
      "side": 1,
      "message": "This is to write the result directly into an mDNSResponder structure.",
      "parentUuid": "9a61cb7f_61a03233",
      "range": {
        "startLine": 24,
        "startChar": 42,
        "endLine": 24,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4317f4d5_53934369",
        "filename": "discovery/mdns/domain_name.h",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-08-23T21:51:47Z",
      "side": 1,
      "message": "Another way would be to have a method specifically for the mDNSResponder case, if it\u0027s done repeatedly. I don\u0027t feel strongly though.\n\nDomainName result;\nAppend(..., \u0026result);\nresult.ToBuffer(uint8_t[256] mdns_result);",
      "parentUuid": "9a61cb7f_61a03233",
      "range": {
        "startLine": 24,
        "startChar": 42,
        "endLine": 24,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4f29c8f_10430153",
        "filename": "discovery/mdns/domain_name.h",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-08-09T02:11:58Z",
      "side": 1,
      "message": "Same here with ErrorOr\u003cDomainName\u003e",
      "range": {
        "startLine": 26,
        "startChar": 65,
        "endLine": 26,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35040a44_3d392669",
        "filename": "discovery/mdns/domain_name.h",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-08-22T22:34:16Z",
      "side": 1,
      "message": "Added to issues list.",
      "parentUuid": "e4f29c8f_10430153",
      "range": {
        "startLine": 26,
        "startChar": 65,
        "endLine": 26,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ef6e44fe_fb030b37",
        "filename": "discovery/mdns/domain_name.h",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-08-09T02:11:58Z",
      "side": 1,
      "message": "When would we get something other than a vector?",
      "range": {
        "startLine": 27,
        "startChar": 28,
        "endLine": 27,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cccbaa21_dc8ad956",
        "filename": "discovery/mdns/domain_name.h",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-08-22T22:34:16Z",
      "side": 1,
      "message": "IMHO we probably wouldn\u0027t, but Mark suggested this for generality.  It\u0027s hard to say at this stage, though I could see an argument against including a template so early.",
      "parentUuid": "ef6e44fe_fb030b37",
      "range": {
        "startLine": 27,
        "startChar": 28,
        "endLine": 27,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f467565e_dd68a9d0",
        "filename": "discovery/mdns/domain_name.h",
        "patchSetId": 4
      },
      "lineNbr": 78,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-08-09T02:11:58Z",
      "side": 1,
      "message": "Does it make more sense to store the unparsed data and parse it every time we need it, or parse it once and store the parsed data?\n\nI\u0027m more inclined to storing the parsed data.",
      "range": {
        "startLine": 78,
        "startChar": 27,
        "endLine": 78,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85c752cc_30a2b6fe",
        "filename": "discovery/mdns/domain_name.h",
        "patchSetId": 4
      },
      "lineNbr": 78,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-08-22T22:34:16Z",
      "side": 1,
      "message": "So far, the common case is dealing with unparsed data by directly talking back-and-forth with mDNSResponder or simply comparing/sorting.",
      "parentUuid": "f467565e_dd68a9d0",
      "range": {
        "startLine": 78,
        "startChar": 27,
        "endLine": 78,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a405bea_a4869996",
        "filename": "discovery/mdns/domain_name.h",
        "patchSetId": 4
      },
      "lineNbr": 78,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-08-23T21:51:47Z",
      "side": 1,
      "message": "I would be inclined to store it as parsed, as in general as it\u0027s safer to store a std::string than a specially-formatted series of octets.  But it depends on the use case and it sounds like the common case is handling the unparsed data.",
      "parentUuid": "f467565e_dd68a9d0",
      "range": {
        "startLine": 78,
        "startChar": 27,
        "endLine": 78,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b39f7240_3601213a",
        "filename": "discovery/mdns/embedder_demo.cc",
        "patchSetId": 4
      },
      "lineNbr": 34,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-08-23T21:51:47Z",
      "side": 1,
      "message": "Maybe a std::map by service_instance to simply lookups below?",
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bd17890_6c1b2b0d",
        "filename": "discovery/mdns/embedder_demo.cc",
        "patchSetId": 4
      },
      "lineNbr": 135,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-08-23T21:51:47Z",
      "side": 1,
      "message": "I wonder if platform::InterfaceAddresses() should return a std::map of index -\u003e AddressInfo.\nThat would allow clients to iterate by index order, remove duplicates, and do lookups like the ones at L151-161.",
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa09325b_f3e5776a",
        "filename": "discovery/mdns/embedder_demo.cc",
        "patchSetId": 4
      },
      "lineNbr": 173,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-08-23T21:51:47Z",
      "side": 1,
      "message": "Does our platform/base have a utility function to pretty print a v4 address?",
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "350fb74f_bd06d6e9",
        "filename": "discovery/mdns/embedder_demo.cc",
        "patchSetId": 4
      },
      "lineNbr": 342,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-08-23T21:51:47Z",
      "side": 1,
      "message": "This is to allow browsing of existing mDNS records (if you don\u0027t have a daemon advertising _openscreen._udp)?\n\nMaybe add a brief comment on command line usage at the top of the file.",
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9a8b060_4ccc54b5",
        "filename": "discovery/mdns/mdns_responder_adapter.h",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-08-09T02:11:58Z",
      "side": 1,
      "message": "If we make an IpAddress and IpEndpoint class that represents either v4 or v6 (like Chromium does), then we could stop having v4 and v6 versions of everything, and this could just be one class.  I think that would be a good idea.",
      "range": {
        "startLine": 22,
        "startChar": 33,
        "endLine": 22,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "191b1845_f7928d5b",
        "filename": "discovery/mdns/mdns_responder_adapter.h",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-08-22T22:34:16Z",
      "side": 1,
      "message": "Added to issues list.",
      "parentUuid": "d9a8b060_4ccc54b5",
      "range": {
        "startLine": 22,
        "startChar": 33,
        "endLine": 22,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67208aaf_105e51a1",
        "filename": "discovery/mdns/mdns_responder_adapter.h",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-08-23T21:51:47Z",
      "side": 1,
      "message": "I would generally agree with this, now that we are adding more data types with V4 and V6 variations.\n\nHowever, I don\u0027t think it\u0027s the best use of time to do that now, and hold up this patch further, versus landing this and merging the address types everywhere soon after.",
      "parentUuid": "d9a8b060_4ccc54b5",
      "range": {
        "startLine": 22,
        "startChar": 33,
        "endLine": 22,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b97b2f8_b3d1f4da",
        "filename": "discovery/mdns/mdns_responder_adapter.h",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-08-09T02:11:58Z",
      "side": 1,
      "message": "A better name might be multicast_interface_index.  I know it\u0027s more verbose, but it\u0027s also more clear.",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 28
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19e4dd99_0282fcfe",
        "filename": "discovery/mdns/mdns_responder_adapter.h",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-08-22T22:34:16Z",
      "side": 1,
      "message": "Unused now, so removed.",
      "parentUuid": "6b97b2f8_b3d1f4da",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 28
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2c7e3975_5e47697f",
        "filename": "discovery/mdns/mdns_responder_adapter.h",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-08-23T21:51:47Z",
      "side": 1,
      "message": "I\u0027m okay with more cryptic names if they align with parameters directly to POSIX/UNIX APIs that have always used them for reasons.\n\nAt this layer, though, I agree we should use explicit names.",
      "parentUuid": "6b97b2f8_b3d1f4da",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 28
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "451c2611_fe7c064d",
        "filename": "discovery/mdns/mdns_responder_adapter.h",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-08-28T01:40:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2c7e3975_5e47697f",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 28
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f5ee067c_3e51c2cb",
        "filename": "discovery/mdns/mdns_responder_adapter.h",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-08-09T02:11:58Z",
      "side": 1,
      "message": "Again with v4 vs v6, this would just be a vector",
      "range": {
        "startLine": 36,
        "startChar": 56,
        "endLine": 36,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3469b62b_7961f01b",
        "filename": "discovery/mdns/mdns_responder_adapter.h",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-08-22T22:34:16Z",
      "side": 1,
      "message": "Added to issues list, but also removed.",
      "parentUuid": "f5ee067c_3e51c2cb",
      "range": {
        "startLine": 36,
        "startChar": 56,
        "endLine": 36,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb4a073f_35cdb9ae",
        "filename": "discovery/mdns/mdns_responder_adapter.h",
        "patchSetId": 4
      },
      "lineNbr": 39,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-08-09T02:11:58Z",
      "side": 1,
      "message": "Would QueryResponseType or QueryResponseEventHeader::Type be better?",
      "range": {
        "startLine": 39,
        "startChar": 25,
        "endLine": 39,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4964a6d9_34fcf4c2",
        "filename": "discovery/mdns/mdns_responder_adapter.h",
        "patchSetId": 4
      },
      "lineNbr": 39,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-08-22T22:34:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fb4a073f_35cdb9ae",
      "range": {
        "startLine": 39,
        "startChar": 25,
        "endLine": 39,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "efd50e69_a8b4e7bf",
        "filename": "discovery/mdns/mdns_responder_adapter.h",
        "patchSetId": 4
      },
      "lineNbr": 42,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-08-09T02:11:58Z",
      "side": 1,
      "message": "Would these be kAdded, kAddedNoCache, kRemoved?",
      "range": {
        "startLine": 42,
        "startChar": 10,
        "endLine": 42,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a415db7_68e52768",
        "filename": "discovery/mdns/mdns_responder_adapter.h",
        "patchSetId": 4
      },
      "lineNbr": 42,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-08-22T22:34:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "efd50e69_a8b4e7bf",
      "range": {
        "startLine": 42,
        "startChar": 10,
        "endLine": 42,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b80d685c_d0ed2b3b",
        "filename": "discovery/mdns/mdns_responder_adapter.h",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-08-09T02:11:58Z",
      "side": 1,
      "message": "Why are these XResponseEvent instead of just XResponse?  Seems like it would be a nicer name.",
      "range": {
        "startLine": 45,
        "startChar": 33,
        "endLine": 45,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9e8d7aa_0f6abed0",
        "filename": "discovery/mdns/mdns_responder_adapter.h",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-08-22T22:34:16Z",
      "side": 1,
      "message": "Yes, it seems slightly redundant.  Removed Response from all names.",
      "parentUuid": "b80d685c_d0ed2b3b",
      "range": {
        "startLine": 45,
        "startChar": 33,
        "endLine": 45,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d12af4e5_95379c4f",
        "filename": "discovery/mdns/mdns_responder_adapter.h",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-08-09T02:11:58Z",
      "side": 1,
      "message": "Another places where v4 vs v6 would be more simple with one class that rules them all.",
      "range": {
        "startLine": 55,
        "startChar": 65,
        "endLine": 55,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "954a0a4b_1a983fbb",
        "filename": "discovery/mdns/mdns_responder_adapter.h",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-08-22T22:34:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d12af4e5_95379c4f",
      "range": {
        "startLine": 55,
        "startChar": 65,
        "endLine": 55,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0909e28_8d4cdad6",
        "filename": "discovery/mdns/mdns_responder_adapter.h",
        "patchSetId": 4
      },
      "lineNbr": 62,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-08-09T02:11:58Z",
      "side": 1,
      "message": "Then why not call it receiving_socket or receiving_socket_type?",
      "range": {
        "startLine": 62,
        "startChar": 26,
        "endLine": 62,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac41493f_ce7ed79e",
        "filename": "discovery/mdns/mdns_responder_adapter.h",
        "patchSetId": 4
      },
      "lineNbr": 62,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-08-22T22:34:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d0909e28_8d4cdad6",
      "range": {
        "startLine": 62,
        "startChar": 26,
        "endLine": 62,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "147542fc_87008cb4",
        "filename": "discovery/mdns/mdns_responder_adapter.h",
        "patchSetId": 4
      },
      "lineNbr": 65,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-08-09T02:11:58Z",
      "side": 1,
      "message": "Add another example where not needing to know which it is would be cleaner.",
      "range": {
        "startLine": 65,
        "startChar": 41,
        "endLine": 65,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4eb8039_84b0f1c2",
        "filename": "discovery/mdns/mdns_responder_adapter.h",
        "patchSetId": 4
      },
      "lineNbr": 65,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-08-22T22:34:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "147542fc_87008cb4",
      "range": {
        "startLine": 65,
        "startChar": 41,
        "endLine": 65,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92268ff9_67867e75",
        "filename": "discovery/mdns/mdns_responder_adapter.h",
        "patchSetId": 4
      },
      "lineNbr": 139,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-08-09T02:11:58Z",
      "side": 1,
      "message": "Error \u003d\u003e ErrorCode?",
      "range": {
        "startLine": 139,
        "startChar": 31,
        "endLine": 139,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e5c7d84_bb244a37",
        "filename": "discovery/mdns/mdns_responder_adapter.h",
        "patchSetId": 4
      },
      "lineNbr": 139,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-08-22T22:34:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "92268ff9_67867e75",
      "range": {
        "startLine": 139,
        "startChar": 31,
        "endLine": 139,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce0b45d0_8ebe5d5a",
        "filename": "discovery/mdns/mdns_responder_adapter.h",
        "patchSetId": 4
      },
      "lineNbr": 146,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-08-09T02:11:58Z",
      "side": 1,
      "message": "Why is this called an Adapter?  Isn\u0027t it just a nice interface around mNDS responder?  Why not call it something like MdnsResponderClient?",
      "range": {
        "startLine": 146,
        "startChar": 28,
        "endLine": 146,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e8b144f_f766d2ee",
        "filename": "discovery/mdns/mdns_responder_adapter.h",
        "patchSetId": 4
      },
      "lineNbr": 146,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-08-22T22:34:16Z",
      "side": 1,
      "message": "Although it doesn\u0027t translate it to an \"existing interface\", I feel this translates mDNSResponder to a narrower interface, which qualifies it as an adapter.  I don\u0027t feel strongly about either naming though.",
      "parentUuid": "ce0b45d0_8ebe5d5a",
      "range": {
        "startLine": 146,
        "startChar": 28,
        "endLine": 146,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35255f97_04431374",
        "filename": "discovery/mdns/mdns_responder_adapter.h",
        "patchSetId": 4
      },
      "lineNbr": 147,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-08-09T02:11:58Z",
      "side": 1,
      "message": "Oh... this is an interface.  Have we considered naming interfaces XInterface and the impl just X?  I usually prefer that over the interface being X and the impl being XImpl.  Because otherwise it\u0027s easy to not realize the interface is an interface when reading it.\n\nAt least that\u0027s how WebRTC names things.",
      "range": {
        "startLine": 147,
        "startChar": 8,
        "endLine": 147,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "700c2e7e_8f198e29",
        "filename": "discovery/mdns/mdns_responder_adapter.h",
        "patchSetId": 4
      },
      "lineNbr": 147,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-08-22T22:34:16Z",
      "side": 1,
      "message": "Added to issues list.",
      "parentUuid": "35255f97_04431374",
      "range": {
        "startLine": 147,
        "startChar": 8,
        "endLine": 147,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5524f86_e86c3489",
        "filename": "discovery/mdns/mdns_responder_adapter.h",
        "patchSetId": 4
      },
      "lineNbr": 157,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-08-09T02:11:58Z",
      "side": 1,
      "message": "The three above should be commented on what they do, and when/if they need to be called.",
      "range": {
        "startLine": 157,
        "startChar": 63,
        "endLine": 157,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "544605e0_1add772e",
        "filename": "discovery/mdns/mdns_responder_adapter.h",
        "patchSetId": 4
      },
      "lineNbr": 157,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-08-22T22:34:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a5524f86_e86c3489",
      "range": {
        "startLine": 157,
        "startChar": 63,
        "endLine": 157,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f0bc0c3_584f595d",
        "filename": "discovery/mdns/mdns_responder_adapter.h",
        "patchSetId": 4
      },
      "lineNbr": 200,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-08-23T21:51:47Z",
      "side": 1,
      "message": "What does it mean to stop a query?  An mDNS query is generally fire-and-forget.  Or does this prevent this query type from being sent on the next recurring multicast?",
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bcf7151_0f5ef06e",
        "filename": "discovery/mdns/mdns_responder_adapter.h",
        "patchSetId": 4
      },
      "lineNbr": 208,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-08-23T21:51:47Z",
      "side": 1,
      "message": "Is this to manually register a service instance (that wasn\u0027t found by mDNS)?\nThis interface could generally use some per-method documentation and a short usage guide at the top.",
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "310c290f_bb2ef8c0",
        "filename": "discovery/mdns/mdns_responder_adapter_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 18,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-08-09T02:11:58Z",
      "side": 1,
      "message": "This is the kind of place where storing parsed data seems cleaner.",
      "range": {
        "startLine": 18,
        "startChar": 63,
        "endLine": 18,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0de04f1_6a54e6f6",
        "filename": "discovery/mdns/mdns_responder_adapter_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 18,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-08-22T22:34:16Z",
      "side": 1,
      "message": "I think this and \"_openscreen._udp\" would be the only constants, which doesn\u0027t seem like a strong argument either way for the storage format of DomainName.  Alternatively, we could provide a constructor similar to DomainName::FromLabels which could static_assert the label and total size restrictions.  That would allow us to construct from constant labels (i.e. avoid the out-param + error checking).",
      "parentUuid": "310c290f_bb2ef8c0",
      "range": {
        "startLine": 18,
        "startChar": 63,
        "endLine": 18,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab12c58d_bc675c72",
        "filename": "discovery/mdns/mdns_responder_adapter_impl.h",
        "patchSetId": 4
      },
      "lineNbr": 6,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-08-09T02:11:58Z",
      "side": 1,
      "message": "Why a separate .cc and _impl.cc?",
      "range": {
        "startLine": 6,
        "startChar": 53,
        "endLine": 6,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "791e4e80_a68feff5",
        "filename": "discovery/mdns/mdns_responder_adapter_impl.h",
        "patchSetId": 4
      },
      "lineNbr": 6,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-08-22T22:34:16Z",
      "side": 1,
      "message": "The plain .cc is for common event types.  This file (along with _impl.cc) actually defines the MdnsResponderAdapter sub-class.  The separation is to allow testing with a mock or fake MdnsResponderAdapter, without redefining all the event struct code.",
      "parentUuid": "ab12c58d_bc675c72",
      "range": {
        "startLine": 6,
        "startChar": 53,
        "endLine": 6,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6c94e84b_a868ce2a",
        "filename": "discovery/mdns/mdns_responder_adapter_impl.h",
        "patchSetId": 4
      },
      "lineNbr": 6,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-08-23T21:51:47Z",
      "side": 1,
      "message": "There should be a compilation unit for the non-virtual declarations in mdns_responder_adapter.h.  Or are you asking if there is a need for MdnsResponderAdapter and MdnsResponderAdapterImpl?",
      "parentUuid": "ab12c58d_bc675c72",
      "range": {
        "startLine": 6,
        "startChar": 53,
        "endLine": 6,
        "endChar": 0
      },
      "revId": "65f4f559876385b1fa2021dc1d8eddadadcce143",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}