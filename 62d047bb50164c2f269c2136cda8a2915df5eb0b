{
  "comments": [
    {
      "key": {
        "uuid": "4d1e24aa_37714d51",
        "filename": "cast/common/mdns/mdns_random_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 30,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-09-08T00:34:22Z",
      "side": 1,
      "message": "const?",
      "revId": "62d047bb50164c2f269c2136cda8a2915df5eb0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42c00fd8_b3707d58",
        "filename": "cast/common/mdns/mdns_random_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 30,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-09-08T20:01:40Z",
      "side": 1,
      "message": "constexpr",
      "parentUuid": "4d1e24aa_37714d51",
      "revId": "62d047bb50164c2f269c2136cda8a2915df5eb0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bda9a3c6_5f2b32ab",
        "filename": "cast/common/mdns/mdns_random_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 30,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-09-09T19:32:48Z",
      "side": 1,
      "message": "Done throughout the file",
      "parentUuid": "42c00fd8_b3707d58",
      "revId": "62d047bb50164c2f269c2136cda8a2915df5eb0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c82e8231_1b3c173c",
        "filename": "cast/common/mdns/mdns_trackers.cc",
        "patchSetId": 8
      },
      "lineNbr": 17,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-09-08T20:01:40Z",
      "side": 1,
      "message": "Can you just use a C-style array instead of adding lots of pragmas?\n\nI don\u0027t feel strongly, I it would be unfortunate to have to duplicate this everywhere we declare an array.",
      "revId": "62d047bb50164c2f269c2136cda8a2915df5eb0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cbd611b6_bb32ff0a",
        "filename": "cast/common/mdns/mdns_trackers.cc",
        "patchSetId": 8
      },
      "lineNbr": 17,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-09-09T19:32:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c82e8231_1b3c173c",
      "revId": "62d047bb50164c2f269c2136cda8a2915df5eb0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbd8981d_977ed518",
        "filename": "cast/common/mdns/mdns_trackers.cc",
        "patchSetId": 8
      },
      "lineNbr": 43,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-09-08T20:01:40Z",
      "side": 1,
      "message": "If we\u0027re querying in response to an interactive use, we want to send a query right away.   Is there a way to do that here, or would that be a different API?",
      "revId": "62d047bb50164c2f269c2136cda8a2915df5eb0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85b2fc7b_713d739d",
        "filename": "cast/common/mdns/mdns_trackers.cc",
        "patchSetId": 8
      },
      "lineNbr": 43,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-09-09T19:32:48Z",
      "side": 1,
      "message": "MdnsQuestionTracker in the same file from the previous CL does this. MdnsRecordTracker only refreshes previously received answers.",
      "parentUuid": "dbd8981d_977ed518",
      "revId": "62d047bb50164c2f269c2136cda8a2915df5eb0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "78ea45e1_bd693730",
        "filename": "cast/common/mdns/mdns_trackers.cc",
        "patchSetId": 8
      },
      "lineNbr": 64,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-09-08T00:34:22Z",
      "side": 1,
      "message": "consider parenthesis around (last_update_time + record.ttl())",
      "revId": "62d047bb50164c2f269c2136cda8a2915df5eb0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31247886_824bcaaa",
        "filename": "cast/common/mdns/mdns_trackers.cc",
        "patchSetId": 8
      },
      "lineNbr": 64,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-09-09T19:32:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "78ea45e1_bd693730",
      "revId": "62d047bb50164c2f269c2136cda8a2915df5eb0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d9780b24_085b6174",
        "filename": "cast/common/mdns/mdns_trackers.cc",
        "patchSetId": 8
      },
      "lineNbr": 83,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-09-08T00:34:22Z",
      "side": 1,
      "message": "wouldn\u0027t the last fraction be at send_index_ \u003d (kttlFractions.size() - 1)\n\n?",
      "revId": "62d047bb50164c2f269c2136cda8a2915df5eb0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90386fda_6360cc5e",
        "filename": "cast/common/mdns/mdns_trackers.cc",
        "patchSetId": 8
      },
      "lineNbr": 83,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-09-09T19:32:48Z",
      "side": 1,
      "message": "send_index_ is post-incremented just above this line, therefore comparing to size(), not size() - 1.\nNow comparing to countof.",
      "parentUuid": "d9780b24_085b6174",
      "revId": "62d047bb50164c2f269c2136cda8a2915df5eb0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e528bdc_2f7773cf",
        "filename": "cast/common/mdns/mdns_trackers.cc",
        "patchSetId": 8
      },
      "lineNbr": 87,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-09-08T00:34:22Z",
      "side": 1,
      "message": "nit: const?",
      "revId": "62d047bb50164c2f269c2136cda8a2915df5eb0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dab6010f_3683b807",
        "filename": "cast/common/mdns/mdns_trackers.cc",
        "patchSetId": 8
      },
      "lineNbr": 87,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-09-09T19:32:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1e528bdc_2f7773cf",
      "revId": "62d047bb50164c2f269c2136cda8a2915df5eb0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e4ff137_5fb43048",
        "filename": "cast/common/mdns/mdns_trackers.cc",
        "patchSetId": 8
      },
      "lineNbr": 93,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-09-08T00:34:22Z",
      "side": 1,
      "message": "Would prefer more explicit information. What is 6762 and why are we referencing it here?",
      "revId": "62d047bb50164c2f269c2136cda8a2915df5eb0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03917589_21175dd6",
        "filename": "cast/common/mdns/mdns_trackers.cc",
        "patchSetId": 8
      },
      "lineNbr": 93,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-09-09T19:32:48Z",
      "side": 1,
      "message": "6762 is mDNS RFC that this code is implementing.\nThe comment is not so much a pointer to the RFC itself as to the section where one can find the information.\nUnless you feel strongly about this, I would leave it as is given that there\u0027s a link right below.",
      "parentUuid": "2e4ff137_5fb43048",
      "revId": "62d047bb50164c2f269c2136cda8a2915df5eb0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8f6a99bb_9ca2979c",
        "filename": "cast/common/mdns/mdns_trackers.cc",
        "patchSetId": 8
      },
      "lineNbr": 134,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-09-08T20:01:40Z",
      "side": 1,
      "message": "As a rule of thumb, you want to send queries 2-3 times to improve reliability (I believe this is what Chrome does).  It\u0027s better to do that in response to interactive use (i.e. pulling up the dialog) or if the caller is requesting a cache refresh.  So we can probably add a Refresh() code path that handles that case, separately from background queries that use the RFC recommended cadence.",
      "revId": "62d047bb50164c2f269c2136cda8a2915df5eb0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3773d307_e6e4afa9",
        "filename": "cast/common/mdns/mdns_trackers.cc",
        "patchSetId": 8
      },
      "lineNbr": 134,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-09-09T20:01:27Z",
      "side": 1,
      "message": "MdnsQueryTracker does send a query immediately, and then again in 1 second, 2 seconds, 4 seconds and so on. To force refresh and reset the query intervals the calling code can always call Stop and Start again on the MdnsQueryTracker instance.",
      "parentUuid": "8f6a99bb_9ca2979c",
      "revId": "62d047bb50164c2f269c2136cda8a2915df5eb0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d4f838de_9560366e",
        "filename": "cast/common/mdns/mdns_trackers.h",
        "patchSetId": 8
      },
      "lineNbr": 36,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-09-08T00:34:22Z",
      "side": 1,
      "message": "Why noexcept?",
      "revId": "62d047bb50164c2f269c2136cda8a2915df5eb0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f87637b_e0e6efde",
        "filename": "cast/common/mdns/mdns_trackers.h",
        "patchSetId": 8
      },
      "lineNbr": 36,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-09-08T20:01:40Z",
      "side": 1,
      "message": "That allows move copy/construction to work with STL containers\n\nhttp://www.hlsl.co.uk/blog/2017/12/1/c-noexcept-and-move-constructors-effect-on-performance-in-stl-containers\n\nI recall there are some compiler specific issues with noexcept ... but we should go through and make sure our moveable types are STL friendly.",
      "parentUuid": "d4f838de_9560366e",
      "revId": "62d047bb50164c2f269c2136cda8a2915df5eb0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94396e00_898686e3",
        "filename": "cast/common/mdns/mdns_trackers.h",
        "patchSetId": 8
      },
      "lineNbr": 36,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-09-09T19:32:48Z",
      "side": 1,
      "message": "I\u0027ve added noexcept here even though the move constructor is marked as deleted for consistency.\nOur Open Screen style guide says to mark move constructors as noexcept when possible.\nhttps://chromium.googlesource.com/openscreen/+/HEAD/docs/style_guide.md",
      "parentUuid": "0f87637b_e0e6efde",
      "revId": "62d047bb50164c2f269c2136cda8a2915df5eb0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85633c27_de81a913",
        "filename": "cast/common/mdns/mdns_trackers.h",
        "patchSetId": 8
      },
      "lineNbr": 36,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-09-10T18:22:11Z",
      "side": 1,
      "message": "I suspect any modifiers like noexcept are ignored for deleted constructors.",
      "parentUuid": "94396e00_898686e3",
      "revId": "62d047bb50164c2f269c2136cda8a2915df5eb0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e39121e8_6e55e38c",
        "filename": "cast/common/mdns/mdns_trackers.h",
        "patchSetId": 8
      },
      "lineNbr": 53,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-09-08T00:34:22Z",
      "side": 1,
      "message": "Why have using in the header?",
      "revId": "62d047bb50164c2f269c2136cda8a2915df5eb0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8ac566c_14ce71f3",
        "filename": "cast/common/mdns/mdns_trackers.h",
        "patchSetId": 8
      },
      "lineNbr": 53,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-09-08T20:01:40Z",
      "side": 1,
      "message": "using-declarations are generally discouraged in headers.",
      "revId": "62d047bb50164c2f269c2136cda8a2915df5eb0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97726a44_b032c67a",
        "filename": "cast/common/mdns/mdns_trackers.h",
        "patchSetId": 8
      },
      "lineNbr": 53,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-09-09T19:32:48Z",
      "side": 1,
      "message": "See below in the reply to Mark\u0027s comment",
      "parentUuid": "e39121e8_6e55e38c",
      "revId": "62d047bb50164c2f269c2136cda8a2915df5eb0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a536e371_4bdc177a",
        "filename": "cast/common/mdns/mdns_trackers.h",
        "patchSetId": 8
      },
      "lineNbr": 53,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-09-09T19:32:48Z",
      "side": 1,
      "message": "It\u0027s not possible to not specify any constructors in MdnsRecordTracker because the base type does not have a default constructor.\n\nThis using directive makes MdnsRecordTracker have the same constructor signatures as MdnsTracker, i.e. it allows for avoiding boilerplate pass-through constructors like this:\n\nMdnsRecordTracker(MdnsSender* sender,\n              TaskRunner* task_runner,\n              ClockNowFunctionPtr now_function,\n              MdnsRandom* random_delay) : MdnsTracker(sender, task_runner, now_function, random_delay) {}",
      "parentUuid": "d8ac566c_14ce71f3",
      "revId": "62d047bb50164c2f269c2136cda8a2915df5eb0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10ee401c_ae959abf",
        "filename": "cast/common/mdns/mdns_trackers.h",
        "patchSetId": 8
      },
      "lineNbr": 53,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-09-10T18:22:11Z",
      "side": 1,
      "message": "The style guide is pretty clear that aliases in the public sections of headers are generally disallowed and doesn\u0027t make any exception for constructors.\n\nhttps://google.github.io/styleguide/cppguide.html#Aliases\n\nIf you\u0027d like argue for an exception for this case and make this change in a followup patch, feel free to email cxx@chromium.org to see what folks think.",
      "parentUuid": "a536e371_4bdc177a",
      "revId": "62d047bb50164c2f269c2136cda8a2915df5eb0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27b73bd9_1405fe47",
        "filename": "cast/common/mdns/mdns_trackers.h",
        "patchSetId": 8
      },
      "lineNbr": 53,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-09-10T19:53:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "10ee401c_ae959abf",
      "revId": "62d047bb50164c2f269c2136cda8a2915df5eb0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd5a3ff8_1f6e4cdb",
        "filename": "cast/common/mdns/mdns_trackers_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 26,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-09-08T00:34:22Z",
      "side": 1,
      "message": "const?",
      "revId": "62d047bb50164c2f269c2136cda8a2915df5eb0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a21ecbb5_af1d3ade",
        "filename": "cast/common/mdns/mdns_trackers_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 26,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-09-09T19:32:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cd5a3ff8_1f6e4cdb",
      "revId": "62d047bb50164c2f269c2136cda8a2915df5eb0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c22d2e1_cf60277a",
        "filename": "cast/common/mdns/mdns_trackers_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 174,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-09-08T00:34:22Z",
      "side": 1,
      "message": "We have 14, right? Doesn\u0027t clang + C++14 support brace elision? V confused why we need this, it\u0027s pretty ugly.",
      "revId": "62d047bb50164c2f269c2136cda8a2915df5eb0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dde67a63_a9f1f531",
        "filename": "cast/common/mdns/mdns_trackers_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 174,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-09-09T19:32:48Z",
      "side": 1,
      "message": "Didn\u0027t build on Mac due to an old compiler bug in the oldish Xcode we are using. C-style array it is.",
      "parentUuid": "3c22d2e1_cf60277a",
      "revId": "62d047bb50164c2f269c2136cda8a2915df5eb0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}