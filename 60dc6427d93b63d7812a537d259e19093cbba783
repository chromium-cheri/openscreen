{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fdcbe000_285426cc",
        "filename": "platform/base/bytes_view.h",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2022-10-21T17:48:51Z",
      "side": 1,
      "message": "do we not have utility for a templated span class? this definitely solves my api conundrum though.",
      "revId": "60dc6427d93b63d7812a537d259e19093cbba783",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43911f65_9df60970",
        "filename": "platform/base/bytes_view.h",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2022-10-21T17:53:14Z",
      "side": 1,
      "message": "Why call it `byte_view`?\n\nIf it\u0027s a replacement for `std::span` and `absl::span` it might make more sense to call it `span`. Not a strong opinion though",
      "range": {
        "startLine": 31,
        "startChar": 6,
        "endLine": 31,
        "endChar": 16
      },
      "revId": "60dc6427d93b63d7812a537d259e19093cbba783",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c12f3266_47c8a47e",
        "filename": "platform/base/bytes_view.h",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2022-10-21T17:48:51Z",
      "side": 1,
      "message": "remove commented out code",
      "revId": "60dc6427d93b63d7812a537d259e19093cbba783",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5241d0c8_92e83045",
        "filename": "platform/base/bytes_view.h",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2022-10-21T17:53:14Z",
      "side": 1,
      "message": "Did you mean to remove this?",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 37,
        "endChar": 22
      },
      "revId": "60dc6427d93b63d7812a537d259e19093cbba783",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4a7d770_f6b8542e",
        "filename": "platform/base/bytes_view.h",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2022-10-21T17:48:51Z",
      "side": 1,
      "message": "absl::Span can hold mutable data, which we do need for encoded frame on the receiver side?",
      "revId": "60dc6427d93b63d7812a537d259e19093cbba783",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec580611_9a4e7994",
        "filename": "platform/base/bytes_view.h",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2022-10-21T17:48:51Z",
      "side": 1,
      "message": "if this isn\u0027t a template class shouldn\u0027t these be in an implementation file?",
      "revId": "60dc6427d93b63d7812a537d259e19093cbba783",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}