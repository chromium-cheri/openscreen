{
  "comments": [
    {
      "key": {
        "uuid": "8b7c5a16_756fde2d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1190572
      },
      "writtenOn": "2019-12-09T22:47:20Z",
      "side": 1,
      "message": "Please associate the CL with a crbug :)",
      "revId": "212dd2bd8f7d2fb214997990a17974e3af1201ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "567c8327_9be1626e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-12-10T18:38:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8b7c5a16_756fde2d",
      "revId": "212dd2bd8f7d2fb214997990a17974e3af1201ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51e708f3_98c99ed8",
        "filename": "discovery/mdns/mdns_publisher.cc",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1190572
      },
      "writtenOn": "2019-12-09T22:47:20Z",
      "side": 1,
      "message": "It\u0027d be good to note what the unit is. Seconds?",
      "revId": "212dd2bd8f7d2fb214997990a17974e3af1201ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3eaf25a1_5a5239f1",
        "filename": "discovery/mdns/mdns_publisher.cc",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-12-10T18:38:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "51e708f3_98c99ed8",
      "revId": "212dd2bd8f7d2fb214997990a17974e3af1201ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd039a5f_1b716999",
        "filename": "discovery/mdns/mdns_publisher.cc",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1190572
      },
      "writtenOn": "2019-12-09T22:47:20Z",
      "side": 1,
      "message": "What does a 0 TTL signify?",
      "revId": "212dd2bd8f7d2fb214997990a17974e3af1201ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d906f6c3_05a8decc",
        "filename": "discovery/mdns/mdns_publisher.cc",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-12-10T18:38:58Z",
      "side": 1,
      "message": "This is actually called out as a constant in the RFC 6762 section 10.1 (adding comment about this)\n\nThe idea is that if we set the TTL for a record to 0, we will replace the old record on the receiver side, and then it will be erased because the TTL is 0",
      "parentUuid": "cd039a5f_1b716999",
      "revId": "212dd2bd8f7d2fb214997990a17974e3af1201ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0d54d66_a80c99b5",
        "filename": "discovery/mdns/mdns_publisher.cc",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 1190572
      },
      "writtenOn": "2019-12-09T22:47:20Z",
      "side": 1,
      "message": "Note: each attempt has a different message ID. Just making sure that\u0027s what we want.",
      "range": {
        "startLine": 310,
        "startChar": 22,
        "endLine": 310,
        "endChar": 39
      },
      "revId": "212dd2bd8f7d2fb214997990a17974e3af1201ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d7bc62f_8eedf504",
        "filename": "discovery/mdns/mdns_publisher.cc",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-12-10T18:38:58Z",
      "side": 1,
      "message": "This is intended :)",
      "parentUuid": "d0d54d66_a80c99b5",
      "range": {
        "startLine": 310,
        "startChar": 22,
        "endLine": 310,
        "endChar": 39
      },
      "revId": "212dd2bd8f7d2fb214997990a17974e3af1201ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56567832_233a7fac",
        "filename": "discovery/mdns/mdns_publisher_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1190572
      },
      "writtenOn": "2019-12-09T22:47:20Z",
      "side": 1,
      "message": "Nit: You should be able to omit Invoke() within WillOnce().",
      "range": {
        "startLine": 137,
        "startChar": 18,
        "endLine": 137,
        "endChar": 24
      },
      "revId": "212dd2bd8f7d2fb214997990a17974e3af1201ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08aa73c8_a0684bb4",
        "filename": "discovery/mdns/mdns_publisher_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-12-10T18:38:58Z",
      "side": 1,
      "message": "This actually gives a build error",
      "parentUuid": "56567832_233a7fac",
      "range": {
        "startLine": 137,
        "startChar": 18,
        "endLine": 137,
        "endChar": 24
      },
      "revId": "212dd2bd8f7d2fb214997990a17974e3af1201ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90705401_532f3d43",
        "filename": "discovery/mdns/mdns_publisher_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1190572
      },
      "writtenOn": "2019-12-10T18:58:06Z",
      "side": 1,
      "message": "It compiles for me:\n\n    EXPECT_CALL(sender_, SendMulticast(_))\n        .WillOnce([this, \u0026record](const MdnsMessage\u0026 message) -\u003e Error {\n          return IsAnnounced(record, message);\n        });",
      "parentUuid": "08aa73c8_a0684bb4",
      "range": {
        "startLine": 137,
        "startChar": 18,
        "endLine": 137,
        "endChar": 24
      },
      "revId": "212dd2bd8f7d2fb214997990a17974e3af1201ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa9a529e_e9dbbc20",
        "filename": "discovery/mdns/mdns_publisher_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 330,
      "author": {
        "id": 1190572
      },
      "writtenOn": "2019-12-09T22:47:20Z",
      "side": 1,
      "message": "To verify that the EXPECT_CALL() on line 326 is fulfilled by this point, you need to call \n testing::Mock::VerifyAndClearExpectations(\u0026sender_).",
      "revId": "212dd2bd8f7d2fb214997990a17974e3af1201ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a81827c_3dd1529c",
        "filename": "discovery/mdns/mdns_publisher_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 330,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-12-10T18:38:58Z",
      "side": 1,
      "message": "Done\n\nThis is a strict mock, so it shouldn\u0027t be an issue. But updated for clarity.",
      "parentUuid": "aa9a529e_e9dbbc20",
      "revId": "212dd2bd8f7d2fb214997990a17974e3af1201ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "80301f63_6c87d19a",
        "filename": "discovery/mdns/mdns_publisher_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 330,
      "author": {
        "id": 1190572
      },
      "writtenOn": "2019-12-10T18:58:06Z",
      "side": 1,
      "message": "I don\u0027t think StrictMock cares when the mock call happens. For example if line 330 doesn\u0027t call SendMulticast() but line 338 calls it twice, I think this test would still pass if we didn\u0027t use VerifyAndClearExpectations().",
      "parentUuid": "7a81827c_3dd1529c",
      "revId": "212dd2bd8f7d2fb214997990a17974e3af1201ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}