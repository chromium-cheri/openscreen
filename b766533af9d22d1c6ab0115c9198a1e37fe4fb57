{
  "comments": [
    {
      "key": {
        "uuid": "31381825_d031ccf6",
        "filename": "platform/impl/socket_address_posix.cc",
        "patchSetId": 6
      },
      "lineNbr": 18,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-08-19T18:09:06Z",
      "side": 1,
      "message": "Can this copy be avoided (since internal_address_.v4 is already allocated)?  You\u0027ll need to make a cast to populate its members.\n\nSimilar comment applies below for .v6",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9032f8e5_6801b35b",
        "filename": "platform/impl/socket_address_posix.cc",
        "patchSetId": 6
      },
      "lineNbr": 18,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-08-21T20:55:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "31381825_d031ccf6",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4de95ebb_bc2ff6e2",
        "filename": "platform/impl/socket_address_posix.cc",
        "patchSetId": 6
      },
      "lineNbr": 21,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-08-19T18:09:06Z",
      "side": 1,
      "message": "OSP_DCHECK(endpoint.address.IsV6()) in the else?",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75fc26a7_77f288dd",
        "filename": "platform/impl/socket_address_posix.cc",
        "patchSetId": 6
      },
      "lineNbr": 21,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-08-21T20:55:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4de95ebb_bc2ff6e2",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cde1f8d0_add99e1b",
        "filename": "platform/impl/socket_address_posix.cc",
        "patchSetId": 6
      },
      "lineNbr": 30,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-08-19T18:09:06Z",
      "side": 1,
      "message": "Seems like we don\u0027t need a size_ member as the sizeof() values can be computed at compile time (at least on Linux, the sockaddr structs appear to be fixed length)",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "297c9f0c_b8585927",
        "filename": "platform/impl/socket_address_posix.cc",
        "patchSetId": 6
      },
      "lineNbr": 30,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-08-21T01:42:41Z",
      "side": 1,
      "message": "+1.  At the very least, it can always be computed from is_v4_.",
      "parentUuid": "cde1f8d0_add99e1b",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7af51614_2200ad87",
        "filename": "platform/impl/socket_address_posix.cc",
        "patchSetId": 6
      },
      "lineNbr": 30,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-08-21T20:55:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "297c9f0c_b8585927",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0aad99b8_760c7702",
        "filename": "platform/impl/socket_address_posix.h",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-08-19T18:09:06Z",
      "side": 1,
      "message": "This seems like an implementation detail. Declare private?",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef08d20e_27ec2ff3",
        "filename": "platform/impl/socket_address_posix.h",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-08-21T20:55:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0aad99b8_760c7702",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "efb326b7_9cb6dd64",
        "filename": "platform/impl/socket_address_posix.h",
        "patchSetId": 6
      },
      "lineNbr": 34,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-08-21T01:42:41Z",
      "side": 1,
      "message": "nit: move operators don\u0027t behave differently than copy here, so I\u0027d prefer to just omit them.",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7d1b1e8_028d02a6",
        "filename": "platform/impl/socket_address_posix.h",
        "patchSetId": 6
      },
      "lineNbr": 34,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-08-21T20:55:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "efb326b7_9cb6dd64",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "914d3f81_2bc1e098",
        "filename": "platform/impl/socket_address_posix_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-08-19T18:09:06Z",
      "side": 1,
      "message": "What is sa_len?  I don\u0027t see it in the sockaddr_in definitions for Posix or Linux.",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0db3775f_800838b6",
        "filename": "platform/impl/socket_address_posix_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-08-21T20:55:16Z",
      "side": 1,
      "message": "Removing. It\u0027s a mac extension.",
      "parentUuid": "914d3f81_2bc1e098",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae19eb5f_c2f9e5a6",
        "filename": "platform/impl/socket_address_posix_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 19,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-08-19T18:09:06Z",
      "side": 1,
      "message": "Nit: Can you use hex or oct literals instead of chars",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e98c736_696523ec",
        "filename": "platform/impl/socket_address_posix_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 19,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-08-21T20:55:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ae19eb5f_c2f9e5a6",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a1a26331_c9a34638",
        "filename": "platform/impl/socket_address_posix_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-08-19T18:09:06Z",
      "side": 1,
      "message": "Can you test that other sockaddr members are set properly?  (Same goes for IPv6.)",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "429236e7_e68c5ce5",
        "filename": "platform/impl/socket_address_posix_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-08-21T20:55:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a1a26331_c9a34638",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f008e39_06090bb0",
        "filename": "platform/impl/stream_socket_posix.cc",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-08-19T18:09:06Z",
      "side": 1,
      "message": "Can this be a settable through the API or the Accept call?",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "170e2d5a_92c67c25",
        "filename": "platform/impl/stream_socket_posix.cc",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-08-21T20:55:16Z",
      "side": 1,
      "message": "Done. Added to Listen since that\u0027s where it is used.",
      "parentUuid": "0f008e39_06090bb0",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5767b108_012c4683",
        "filename": "platform/impl/stream_socket_posix.cc",
        "patchSetId": 6
      },
      "lineNbr": 26,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-08-19T18:09:06Z",
      "side": 1,
      "message": "Style: I am OK using an inline ternary expression for this sort of thing.",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11bd6f54_a65fae63",
        "filename": "platform/impl/stream_socket_posix.cc",
        "patchSetId": 6
      },
      "lineNbr": 26,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-08-21T20:55:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5767b108_012c4683",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee4e1d8e_20f4e675",
        "filename": "platform/impl/stream_socket_posix.cc",
        "patchSetId": 6
      },
      "lineNbr": 32,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-08-19T18:09:06Z",
      "side": 1,
      "message": "Design: if we moved this call to an Initialize() method, we could return a proper Error::Code here.",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac0e72ad_ff00d710",
        "filename": "platform/impl/stream_socket_posix.cc",
        "patchSetId": 6
      },
      "lineNbr": 32,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-08-21T20:55:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ee4e1d8e_20f4e675",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5cb3d119_a41b3c20",
        "filename": "platform/impl/stream_socket_posix.cc",
        "patchSetId": 6
      },
      "lineNbr": 34,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-08-19T18:09:06Z",
      "side": 1,
      "message": "Instead, you could have a last_error_ member (and a getter) so the caller can retrieve the last error returned by the socket.",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ffa68d7_ff25128f",
        "filename": "platform/impl/stream_socket_posix.cc",
        "patchSetId": 6
      },
      "lineNbr": 34,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-08-21T20:55:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5cb3d119_a41b3c20",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e8d3c17d_720a1bce",
        "filename": "platform/impl/stream_socket_posix.cc",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-08-19T18:09:06Z",
      "side": 1,
      "message": "I believe all the errors you would encounter in this API are terminal, i.e. the socket is not going to be useful after an error occurs.\n\nCan we consistently close() the socket on an error throughout?\n\nThe error code for this state could just be kSocketClosed.",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c99a8001_d5ac2494",
        "filename": "platform/impl/stream_socket_posix.cc",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-08-21T20:55:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e8d3c17d_720a1bce",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a0b86c8_35e238d8",
        "filename": "platform/impl/stream_socket_posix.cc",
        "patchSetId": 6
      },
      "lineNbr": 47,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-08-21T01:42:41Z",
      "side": 1,
      "message": "This parameter doesn\u0027t do anything.",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0419b347_c1ba7412",
        "filename": "platform/impl/stream_socket_posix.cc",
        "patchSetId": 6
      },
      "lineNbr": 47,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-08-21T20:55:16Z",
      "side": 1,
      "message": "peer_endpoint? We use it to initialize peer_address, which we use throughout.",
      "parentUuid": "0a0b86c8_35e238d8",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e8cbbd98_2debe4e6",
        "filename": "platform/impl/stream_socket_posix.cc",
        "patchSetId": 6
      },
      "lineNbr": 120,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-08-19T18:09:06Z",
      "side": 1,
      "message": "Slightly prefer declaring two ctors versus having an optional parameter (just nicer from the caller\u0027s POV not to have to pass nullopt).",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8cda2b1c_97f8dfeb",
        "filename": "platform/impl/stream_socket_posix.cc",
        "patchSetId": 6
      },
      "lineNbr": 120,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-08-21T20:55:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e8cbbd98_2debe4e6",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b2bd9ee_d08c8ab2",
        "filename": "platform/impl/stream_socket_posix.cc",
        "patchSetId": 6
      },
      "lineNbr": 123,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-08-19T18:09:06Z",
      "side": 1,
      "message": "The socket dtor should call Close() if the socket is not closed (avoids leaks)",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fed4048d_7997cf1f",
        "filename": "platform/impl/stream_socket_posix.cc",
        "patchSetId": 6
      },
      "lineNbr": 123,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-08-21T20:55:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5b2bd9ee_d08c8ab2",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b343ac51_67319c89",
        "filename": "platform/impl/stream_socket_posix.h",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-08-21T01:42:41Z",
      "side": 1,
      "message": "explicit",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d2eadb3_1b02f0be",
        "filename": "platform/impl/stream_socket_posix.h",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-08-21T20:55:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b343ac51_67319c89",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8bd01e59_72dfc6c0",
        "filename": "platform/impl/stream_socket_posix.h",
        "patchSetId": 6
      },
      "lineNbr": 25,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-08-19T18:09:06Z",
      "side": 1,
      "message": "Will this API be compatible with the Chrome Network Service?\nWe\u0027ll have to design it to work asynchronously in that case.",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec9a19aa_964e1083",
        "filename": "platform/impl/stream_socket_posix.h",
        "patchSetId": 6
      },
      "lineNbr": 25,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-08-21T01:42:41Z",
      "side": 1,
      "message": "This will likely have to take a callback: https://cs.chromium.org/chromium/src/services/network/public/mojom/tcp_socket.mojom?g\u003d0\u0026l\u003d131\n\nThat being said, do we even need to the server side to be compatible with Chromium?  I wasn\u0027t thinking so...",
      "parentUuid": "8bd01e59_72dfc6c0",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9c796f4_15811b1b",
        "filename": "platform/impl/stream_socket_posix.h",
        "patchSetId": 6
      },
      "lineNbr": 25,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-08-21T20:55:16Z",
      "side": 1,
      "message": "This will only be consumed by our platform code, so does not need to be compatible with chromium.",
      "parentUuid": "ec9a19aa_964e1083",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9482ccb1_6b2133a3",
        "filename": "platform/impl/stream_socket_posix.h",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-08-19T18:09:06Z",
      "side": 1,
      "message": "Chrome\u0027s net/socket/stream_socket.h doesn\u0027t have Bind().\nIt doesn\u0027t seem to have have a way at all to bind a local address.\nHmm...",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7fb5064_86eb316e",
        "filename": "platform/impl/stream_socket_posix.h",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-08-21T01:42:41Z",
      "side": 1,
      "message": "I think we want the network service versions: https://cs.chromium.org/chromium/src/services/network/public/mojom/network_context.mojom?l\u003d941",
      "parentUuid": "9482ccb1_6b2133a3",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44d5cac6_75d3739c",
        "filename": "platform/impl/stream_socket_posix.h",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-08-21T20:55:16Z",
      "side": 1,
      "message": "This will only be consumed by our platform code, so does not need to be compatible with chromium.",
      "parentUuid": "e7fb5064_86eb316e",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9bce186f_04935374",
        "filename": "platform/impl/stream_socket_posix.h",
        "patchSetId": 6
      },
      "lineNbr": 37,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-08-19T18:09:06Z",
      "side": 1,
      "message": "Side comment: usually TCP sockets fall into two code paths:\n\nbind()/listen()/accept() (server)\n\nbind()/connect() (client)\n\nI think it\u0027s fine to support both uses through the same interface, if the client holds it wrong the implementation will bubble up errors if it\u0027s in the wrong state.  (Versus splitting this into ClientStreamSocket and ServerStreamSocket.)",
      "revId": "b766533af9d22d1c6ab0115c9198a1e37fe4fb57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}