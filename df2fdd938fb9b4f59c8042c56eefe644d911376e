{
  "comments": [
    {
      "key": {
        "uuid": "b5c5fd90_f9c3f78b",
        "filename": "api/impl/mdns_responder_service.cc",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-01-16T20:50:24Z",
      "side": 1,
      "message": "Could you make a separate CL that runs the formatter and land that first so this diff is smaller?  And so we can argue about style separate from this CL?",
      "revId": "df2fdd938fb9b4f59c8042c56eefe644d911376e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1232ddba_2a5e33f8",
        "filename": "api/impl/mdns_responder_service.cc",
        "patchSetId": 4
      },
      "lineNbr": 190,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-01-16T06:29:23Z",
      "side": 1,
      "message": "Per the prior comment, what I mean is that this could be:\n\n  if (!host || IsServiceReady(*service, *host)) {",
      "range": {
        "startLine": 190,
        "startChar": 8,
        "endLine": 190,
        "endChar": 39
      },
      "revId": "df2fdd938fb9b4f59c8042c56eefe644d911376e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df1ea13e_a03fa660",
        "filename": "api/impl/mdns_responder_service.cc",
        "patchSetId": 4
      },
      "lineNbr": 190,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-01-16T20:50:24Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "1232ddba_2a5e33f8",
      "range": {
        "startLine": 190,
        "startChar": 8,
        "endLine": 190,
        "endChar": 39
      },
      "revId": "df2fdd938fb9b4f59c8042c56eefe644d911376e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21505914_d1fb5ac8",
        "filename": "api/impl/mdns_responder_service.cc",
        "patchSetId": 4
      },
      "lineNbr": 329,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-01-16T20:50:24Z",
      "side": 1,
      "message": "Ugh.... did the formatter really do that?  No we need to have a discussion about formatter settings and style :).",
      "revId": "df2fdd938fb9b4f59c8042c56eefe644d911376e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae962cb9_d41fc885",
        "filename": "api/impl/mdns_responder_service.cc",
        "patchSetId": 4
      },
      "lineNbr": 342,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-01-16T20:50:24Z",
      "side": 1,
      "message": "Here too.  I\u0027m not a fan of this style.\n\nAnd more below!  Ahhh!",
      "revId": "df2fdd938fb9b4f59c8042c56eefe644d911376e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c366da02_62b5cb27",
        "filename": "api/impl/mdns_responder_service.cc",
        "patchSetId": 4
      },
      "lineNbr": 383,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-01-16T20:50:24Z",
      "side": 1,
      "message": "ðŸ¤¯",
      "revId": "df2fdd938fb9b4f59c8042c56eefe644d911376e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "822208f4_5e48f1ba",
        "filename": "api/impl/mdns_responder_service.cc",
        "patchSetId": 4
      },
      "lineNbr": 486,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-01-16T20:50:24Z",
      "side": 1,
      "message": "Might as well stick in a \"if (!host) break\" for release builds, just in case.",
      "range": {
        "startLine": 486,
        "startChar": 0,
        "endLine": 486,
        "endChar": 35
      },
      "revId": "df2fdd938fb9b4f59c8042c56eefe644d911376e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5596bbfc_35184844",
        "filename": "api/impl/mdns_responder_service.cc",
        "patchSetId": 4
      },
      "lineNbr": 529,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-01-16T06:29:23Z",
      "side": 1,
      "message": "Suggestion:\n\n  return {kv-\u003esecond};",
      "revId": "df2fdd938fb9b4f59c8042c56eefe644d911376e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b99ed7c0_85d9c4da",
        "filename": "api/impl/mdns_responder_service.cc",
        "patchSetId": 4
      },
      "lineNbr": 529,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-01-16T20:50:24Z",
      "side": 1,
      "message": "That works?  My feelings for C++ just incremented.",
      "parentUuid": "5596bbfc_35184844",
      "revId": "df2fdd938fb9b4f59c8042c56eefe644d911376e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "181f23e0_46c76e8f",
        "filename": "api/impl/mdns_responder_service.h",
        "patchSetId": 4
      },
      "lineNbr": 125,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-01-16T06:29:23Z",
      "side": 1,
      "message": "Per C++ style rules, only const references can be returned. It looks like that would work here?",
      "range": {
        "startLine": 125,
        "startChar": 2,
        "endLine": 125,
        "endChar": 11
      },
      "revId": "df2fdd938fb9b4f59c8042c56eefe644d911376e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6dead76b_2e529970",
        "filename": "api/impl/mdns_responder_service.h",
        "patchSetId": 4
      },
      "lineNbr": 125,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-01-16T20:50:24Z",
      "side": 1,
      "message": "It\u0027s used to modify the host.  But I think we could make the modification private (in which case I think we should stick with a raw pointer).  If we need this to be public, I agree having a const\u0026 would be good (or just copy it).",
      "parentUuid": "181f23e0_46c76e8f",
      "range": {
        "startLine": 125,
        "startChar": 2,
        "endLine": 125,
        "endChar": 11
      },
      "revId": "df2fdd938fb9b4f59c8042c56eefe644d911376e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07d20460_47e329fa",
        "filename": "api/impl/mdns_responder_service.h",
        "patchSetId": 4
      },
      "lineNbr": 130,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-01-16T06:29:23Z",
      "side": 1,
      "message": "C++ style: If using references, only const references can be used in function arguments.\n\nThinking aloud here: While optional\u003cHostInfo\u003e does add some structure to the idea of what this argument is, it also adds some runtime+space overhead. I\u0027m wondering if the existing \"raw ptr or null\" scheme is a suitably reasonable representation of an \"optional argument?\" It could be improved as \"const HostInfo*\" to make it clearer that the value is intended to be read-only.\n\nLooking deeper, an alternative comes to mind: We don\u0027t need an optional argument here at all. The caller shouldn\u0027t call this method without a HostInfo. Meaning, the 2nd argument should be good \u0027ol \"const HostInfo\u0026 host\".",
      "range": {
        "startLine": 130,
        "startChar": 22,
        "endLine": 130,
        "endChar": 47
      },
      "revId": "df2fdd938fb9b4f59c8042c56eefe644d911376e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8792c7e6_9247ec46",
        "filename": "api/impl/mdns_responder_service.h",
        "patchSetId": 4
      },
      "lineNbr": 130,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-01-16T18:24:28Z",
      "side": 1,
      "message": "Sounds good to me. I\u0027ll just tighten it up instead of having an optional.",
      "parentUuid": "07d20460_47e329fa",
      "range": {
        "startLine": 130,
        "startChar": 22,
        "endLine": 130,
        "endChar": 47
      },
      "revId": "df2fdd938fb9b4f59c8042c56eefe644d911376e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f77a299f_d249d60a",
        "filename": "api/impl/mdns_responder_service.h",
        "patchSetId": 4
      },
      "lineNbr": 130,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-01-16T20:50:24Z",
      "side": 1,
      "message": "I like Yuri\u0027s idea of using \"const HostInfo\u0026\" and having the caller check to make sure it has a host first.",
      "parentUuid": "8792c7e6_9247ec46",
      "range": {
        "startLine": 130,
        "startChar": 22,
        "endLine": 130,
        "endChar": 47
      },
      "revId": "df2fdd938fb9b4f59c8042c56eefe644d911376e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bbbea8d6_b26b1ad8",
        "filename": "api/impl/quic/quic_connection_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-01-16T06:29:23Z",
      "side": 1,
      "message": "Suggestion:\n\n  const ... packet_size \u003d platform::SendUdp(socket_...);\n  return packet_size.value_or(0);\n\nOr, even just one statement (up to you, this is more a \"personal taste\" thing):\n\n  return platform::SendUdp(socket_...).value_or(0);",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 27,
        "endChar": 47
      },
      "revId": "df2fdd938fb9b4f59c8042c56eefe644d911376e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d75eb5b_fc029b12",
        "filename": "api/impl/quic/quic_connection_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-01-16T20:50:24Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "bbbea8d6_b26b1ad8",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 27,
        "endChar": 47
      },
      "revId": "df2fdd938fb9b4f59c8042c56eefe644d911376e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8061a45_9cdd2edf",
        "filename": "base/ip_address.cc",
        "patchSetId": 4
      },
      "lineNbr": 87,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-01-16T20:50:24Z",
      "side": 1,
      "message": "ðŸ¤¯ðŸ¤¯",
      "revId": "df2fdd938fb9b4f59c8042c56eefe644d911376e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ecfdeba_ae95e552",
        "filename": "base/ip_address.cc",
        "patchSetId": 4
      },
      "lineNbr": 110,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-01-16T20:50:24Z",
      "side": 1,
      "message": "ðŸ¤¯ðŸ¤¯ðŸ¤¯",
      "revId": "df2fdd938fb9b4f59c8042c56eefe644d911376e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "621766f8_d4858490",
        "filename": "base/ip_address.cc",
        "patchSetId": 4
      },
      "lineNbr": 132,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-01-16T20:50:24Z",
      "side": 1,
      "message": "Doesn\u0027t this work?\n\nif (double_colon_index)\n\nIf so, seems nicer.",
      "revId": "df2fdd938fb9b4f59c8042c56eefe644d911376e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8fc1efd_1c401652",
        "filename": "base/ip_address.cc",
        "patchSetId": 4
      },
      "lineNbr": 135,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-01-16T20:50:24Z",
      "side": 1,
      "message": "Doesn\u0027t this work?\n\n*double_colon_index \u003d i\n\n\nIf so, seems nicer.",
      "revId": "df2fdd938fb9b4f59c8042c56eefe644d911376e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1a22b1c_d1399cca",
        "filename": "base/ip_address.cc",
        "patchSetId": 4
      },
      "lineNbr": 173,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-01-16T20:50:24Z",
      "side": 1,
      "message": "*double_colon_index works, right?\n\nIf so, seems nicer",
      "range": {
        "startLine": 173,
        "startChar": 0,
        "endLine": 173,
        "endChar": 66
      },
      "revId": "df2fdd938fb9b4f59c8042c56eefe644d911376e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6dfc0e63_3863b22c",
        "filename": "platform/linux/network_interface.cc",
        "patchSetId": 4
      },
      "lineNbr": 102,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-01-16T06:29:23Z",
      "side": 1,
      "message": "C++ style requires using pointers instead of references to objects that will be mutated.\n\nFWIW, I think the name of this function should indicate it may mutate |address_list|. Something like FindOrAddAddressesForIndex(). Though, maybe it\u0027d be even better if the caller were to mutate |address_list| instead of this function, whose primary purpose is \"searching.\"",
      "range": {
        "startLine": 102,
        "startChar": 35,
        "endLine": 102,
        "endChar": 36
      },
      "revId": "df2fdd938fb9b4f59c8042c56eefe644d911376e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d682d726_7e299e70",
        "filename": "platform/mac/network_interface.cc",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-01-16T06:29:23Z",
      "side": 1,
      "message": "FWIW, I did a Google search to find out whether a standard/POSIX library function already exists for this, but nothing came up. Most people seem to write it themselves, just like we did. :)",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 35,
        "endChar": 53
      },
      "revId": "df2fdd938fb9b4f59c8042c56eefe644d911376e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4b37c0f_e8e89ca5",
        "filename": "platform/mac/network_interface.cc",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-01-16T06:29:23Z",
      "side": 1,
      "message": "Note: It could be 0x00 (e.g., 255.255.0.0). I think the \"intermediate byte\" is only special because we have to count bits one at a time.",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 46,
        "endChar": 20
      },
      "revId": "df2fdd938fb9b4f59c8042c56eefe644d911376e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4cf17f2_790e24ba",
        "filename": "platform/posix/socket.cc",
        "patchSetId": 4
      },
      "lineNbr": 207,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-01-16T20:50:24Z",
      "side": 1,
      "message": "But now we lost the error.  This should perhaps be ErrorOr instead of optional.",
      "revId": "df2fdd938fb9b4f59c8042c56eefe644d911376e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2474c3cf_9381a0d6",
        "filename": "platform/posix/socket.cc",
        "patchSetId": 4
      },
      "lineNbr": 337,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-01-16T20:50:24Z",
      "side": 1,
      "message": "Same here with ErrorOr",
      "range": {
        "startLine": 336,
        "startChar": 66,
        "endLine": 337,
        "endChar": 0
      },
      "revId": "df2fdd938fb9b4f59c8042c56eefe644d911376e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}