{
  "comments": [
    {
      "key": {
        "uuid": "de3c989f_3613cb0a",
        "filename": "osp_base/macros.h",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-06-08T00:39:36Z",
      "side": 1,
      "message": "If we treat warnings as errors, we can use [[nodiscard]] attribute that\u0027s C++ standard",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 61,
        "endChar": 6
      },
      "revId": "0d747e14e18efbacf902a588d6495ffcf53ba90c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1e07b81_f70dd1db",
        "filename": "osp_crypto/openssl_util.cc",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-06-08T00:39:36Z",
      "side": 1,
      "message": "We have this already in boringssl_util",
      "range": {
        "startLine": 30,
        "startChar": 4,
        "endLine": 30,
        "endChar": 24
      },
      "revId": "0d747e14e18efbacf902a588d6495ffcf53ba90c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e8eb0cf_2353ef61",
        "filename": "osp_crypto/openssl_util.cc",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-06-08T00:39:36Z",
      "side": 1,
      "message": "My understanding is that this is using boringssl we have as a third_party dependency.\nThis does nothing if we don\u0027t build with BORINGSSL_NO_STATIC_INITIALIZER. Is there a reason we need to have it at all? Do we use BORINGSSL_NO_STATIC_INITIALIZER when building with chromium?",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 40,
        "endChar": 1
      },
      "revId": "0d747e14e18efbacf902a588d6495ffcf53ba90c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de7f6539_875d1d6d",
        "filename": "osp_crypto/openssl_util.cc",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-06-08T00:39:36Z",
      "side": 1,
      "message": "Have a similar one in boringssl_util",
      "range": {
        "startLine": 42,
        "startChar": 5,
        "endLine": 42,
        "endChar": 25
      },
      "revId": "0d747e14e18efbacf902a588d6495ffcf53ba90c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8ecbf78_656268e6",
        "filename": "osp_crypto/openssl_util.h",
        "patchSetId": 2
      },
      "lineNbr": 75,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-06-08T00:39:36Z",
      "side": 1,
      "message": "There\u0027s absl::SourceLocation, but I\u0027m not sure if we need to roll absl dependency to get it",
      "range": {
        "startLine": 75,
        "startChar": 33,
        "endLine": 75,
        "endChar": 57
      },
      "revId": "0d747e14e18efbacf902a588d6495ffcf53ba90c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd2f0645_30d89422",
        "filename": "osp_crypto/sha2.cc",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-06-08T00:39:36Z",
      "side": 1,
      "message": "This can be done with a single call to\nuint8_t *SHA256(const uint8_t *data, size_t len, uint8_t *out);\nin sha.h in boringssl.\n\nThis also looks like the sole reason for SecureHash existence. If we don\u0027t need it for anything else, i.e. if we don\u0027t need update functionality specifically, why have SecureHash class at all?",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 19,
        "endChar": 27
      },
      "revId": "0d747e14e18efbacf902a588d6495ffcf53ba90c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "843d64b6_1a7d0f5b",
        "filename": "osp_crypto/sha2.h",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-06-08T00:39:36Z",
      "side": 1,
      "message": "Is there a const we can use directly from boringssl?",
      "range": {
        "startLine": 20,
        "startChar": 20,
        "endLine": 20,
        "endChar": 33
      },
      "revId": "0d747e14e18efbacf902a588d6495ffcf53ba90c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}