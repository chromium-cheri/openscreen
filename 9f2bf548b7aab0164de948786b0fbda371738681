{
  "comments": [
    {
      "key": {
        "uuid": "d68bd91a_30e74336",
        "filename": "streaming/cast/packet_receive_stats_tracker.h",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-08-26T22:15:51Z",
      "side": 1,
      "message": "I don\u0027t see this operator defined anywhere",
      "range": {
        "startLine": 51,
        "startChar": 50,
        "endLine": 51,
        "endChar": 52
      },
      "revId": "9f2bf548b7aab0164de948786b0fbda371738681",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62615c18_2b518b4b",
        "filename": "streaming/cast/packet_receive_stats_tracker.h",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-08-28T01:21:24Z",
      "side": 1,
      "message": "It\u0027s defined the parent class, since it\u0027s shared among all the subclasses: https://cs.chromium.org/chromium/src/third_party/openscreen/src/streaming/cast/expanded_value_base.h?rcl\u003d4ca3339848cc889648ba6c70edfbef944cdf1ffb\u0026l\u003d127",
      "parentUuid": "d68bd91a_30e74336",
      "range": {
        "startLine": 51,
        "startChar": 50,
        "endLine": 51,
        "endChar": 52
      },
      "revId": "9f2bf548b7aab0164de948786b0fbda371738681",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "52b439d1_cbdef16c",
        "filename": "streaming/cast/packet_receive_stats_tracker.h",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-08-26T22:15:51Z",
      "side": 1,
      "message": "Guidelines say \"If you define an operator, also define any related operators that make sense\" - you may want to define `operator+` here too",
      "range": {
        "startLine": 58,
        "startChar": 22,
        "endLine": 58,
        "endChar": 31
      },
      "revId": "9f2bf548b7aab0164de948786b0fbda371738681",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d409b3e_6bd619cf",
        "filename": "streaming/cast/packet_receive_stats_tracker.h",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-08-28T01:21:24Z",
      "side": 1,
      "message": "For now, this is just a private data class for private impl (i.e., not for wide, general-purpose use). If the math is ever changed, and we need an operator+, it\u0027ll be trivial to add later.",
      "parentUuid": "52b439d1_cbdef16c",
      "range": {
        "startLine": 58,
        "startChar": 22,
        "endLine": 58,
        "endChar": 31
      },
      "revId": "9f2bf548b7aab0164de948786b0fbda371738681",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5be9633d_2c8d4000",
        "filename": "streaming/cast/rtcp_common.cc",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-08-28T22:08:53Z",
      "side": 1,
      "message": "Could you please add a sanity check that num_received is not greater than num_apparently_sent?",
      "range": {
        "startLine": 154,
        "startChar": 8,
        "endLine": 154,
        "endChar": 43
      },
      "revId": "9f2bf548b7aab0164de948786b0fbda371738681",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3fada996_3a6fa4e6",
        "filename": "streaming/cast/rtcp_common.cc",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-08-29T00:41:17Z",
      "side": 1,
      "message": "It can be (e.g., duplicate packets received), and that\u0027s acceptable and normal. The statement just after this will clamp it to the [0,255] range.\n\nAdded code comment.",
      "parentUuid": "5be9633d_2c8d4000",
      "range": {
        "startLine": 154,
        "startChar": 8,
        "endLine": 154,
        "endChar": 43
      },
      "revId": "9f2bf548b7aab0164de948786b0fbda371738681",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7645c4a_939c488d",
        "filename": "streaming/cast/rtcp_common.cc",
        "patchSetId": 1
      },
      "lineNbr": 155,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-08-28T20:32:30Z",
      "side": 1,
      "message": "It took me a minute to figure out that you\u0027re multiplying through to solve 2 equal fractions. I\u0027d recommend a comment saying something like that",
      "range": {
        "startLine": 153,
        "startChar": 0,
        "endLine": 155,
        "endChar": 26
      },
      "revId": "9f2bf548b7aab0164de948786b0fbda371738681",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d2ad662_a4723672",
        "filename": "streaming/cast/rtcp_common.cc",
        "patchSetId": 1
      },
      "lineNbr": 155,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-08-29T00:41:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7645c4a_939c488d",
      "range": {
        "startLine": 153,
        "startChar": 0,
        "endLine": 155,
        "endChar": 26
      },
      "revId": "9f2bf548b7aab0164de948786b0fbda371738681",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d30332d_ff077154",
        "filename": "streaming/cast/rtcp_common.cc",
        "patchSetId": 1
      },
      "lineNbr": 170,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-08-28T22:08:53Z",
      "side": 1,
      "message": "Why do you need to specify type here?",
      "range": {
        "startLine": 170,
        "startChar": 24,
        "endLine": 170,
        "endChar": 31
      },
      "revId": "9f2bf548b7aab0164de948786b0fbda371738681",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1412f515_18db74ac",
        "filename": "streaming/cast/rtcp_common.cc",
        "patchSetId": 1
      },
      "lineNbr": 170,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-08-29T00:41:17Z",
      "side": 1,
      "message": "When writing std::max(num_lost, 0), the compiler can\u0027t deduce the template arg because the literal \"0\" isn\u0027t an int64_t.\n\nI could have equivalently written this to fix it: std::max(num_lost, int64_t{0})",
      "parentUuid": "3d30332d_ff077154",
      "range": {
        "startLine": 170,
        "startChar": 24,
        "endLine": 170,
        "endChar": 31
      },
      "revId": "9f2bf548b7aab0164de948786b0fbda371738681",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83534354_bfdcffaa",
        "filename": "streaming/cast/rtcp_common.cc",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-08-28T22:08:53Z",
      "side": 1,
      "message": "Just an observation, this is a saturate_cast to an unsigned 24-bit integer.",
      "range": {
        "startLine": 169,
        "startChar": 2,
        "endLine": 172,
        "endChar": 1
      },
      "revId": "9f2bf548b7aab0164de948786b0fbda371738681",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94f09a89_2e021fc5",
        "filename": "streaming/cast/rtcp_common.cc",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-08-29T00:41:17Z",
      "side": 1,
      "message": "Ack. There\u0027s no saturate_cast\u003cuint24_t\u003e.",
      "parentUuid": "83534354_bfdcffaa",
      "range": {
        "startLine": 169,
        "startChar": 2,
        "endLine": 172,
        "endChar": 1
      },
      "revId": "9f2bf548b7aab0164de948786b0fbda371738681",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "543adbb2_0b91ec86",
        "filename": "streaming/cast/rtcp_common.cc",
        "patchSetId": 1
      },
      "lineNbr": 175,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-08-28T22:08:53Z",
      "side": 1,
      "message": "Maybe something like unrebased_delay, even though unrebased is not a word?",
      "range": {
        "startLine": 175,
        "startChar": 30,
        "endLine": 175,
        "endChar": 53
      },
      "revId": "9f2bf548b7aab0164de948786b0fbda371738681",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c72d4882_b3cbc90e",
        "filename": "streaming/cast/rtcp_common.cc",
        "patchSetId": 1
      },
      "lineNbr": 175,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-08-29T00:41:17Z",
      "side": 1,
      "message": "Hmm...\"rebase\" sounds like shifting/offsetting to me. It really is the number of ticks per second (a.k.a. timebase) that is being converted here.\n\nHow about \"local_clock_delay\" (and then I name the other thing \"reported_delay\")?",
      "parentUuid": "543adbb2_0b91ec86",
      "range": {
        "startLine": 175,
        "startChar": 30,
        "endLine": 175,
        "endChar": 53
      },
      "revId": "9f2bf548b7aab0164de948786b0fbda371738681",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}