{
  "comments": [
    {
      "key": {
        "uuid": "d35c54d3_4fee1a72",
        "filename": "base/ip_address.cc",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-06-04T19:20:21Z",
      "side": 1,
      "message": "Should we assign 0 to bytes[0] even if the address has a leading period?\n\ne.g. .1.2.3",
      "revId": "2e568ae1c600cd2c58c98d0ef652bf2a629c67fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54261e69_299249a0",
        "filename": "base/ip_address.cc",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-06-05T18:57:44Z",
      "side": 1,
      "message": "No, I don\u0027t think so.  Fixed.",
      "parentUuid": "d35c54d3_4fee1a72",
      "revId": "2e568ae1c600cd2c58c98d0ef652bf2a629c67fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f08444af_7af59ea9",
        "filename": "base/ip_address.cc",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-06-04T23:45:40Z",
      "side": 1,
      "message": "Would the following be the same way of expressing this logic?\n\nchar previous_char \u003d 0;\n...\nif (c \u003d\u003d \u0027:\u0027 \u0026\u0026 previous_char \u003d\u003d \u0027:) {\n}\n\nprevious_char \u003d c;",
      "revId": "2e568ae1c600cd2c58c98d0ef652bf2a629c67fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "604c7d14_9a4b302e",
        "filename": "base/ip_address.cc",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-06-05T18:57:44Z",
      "side": 1,
      "message": "Yes, although we\u0027d need 2-character look-back to allow trailing \u0027::\u0027, prevent \u0027:::\u0027, etc.",
      "parentUuid": "f08444af_7af59ea9",
      "revId": "2e568ae1c600cd2c58c98d0ef652bf2a629c67fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4dd8af0f_d3dabbfb",
        "filename": "base/ip_address.cc",
        "patchSetId": 3
      },
      "lineNbr": 76,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-06-04T23:45:40Z",
      "side": 1,
      "message": "I find it a little hard to follow setting some of the zero values here, and some at the end of the loop.  Can all the zero values be filled in at the end (see code suggestion below)?",
      "revId": "2e568ae1c600cd2c58c98d0ef652bf2a629c67fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ccf4377b_e6028163",
        "filename": "base/ip_address.cc",
        "patchSetId": 3
      },
      "lineNbr": 76,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-06-05T18:57:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4dd8af0f_d3dabbfb",
      "revId": "2e568ae1c600cd2c58c98d0ef652bf2a629c67fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "12d3f72f_5e4bc6d1",
        "filename": "base/ip_address.cc",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-06-04T23:45:40Z",
      "side": 1,
      "message": "I have a slight preference to use if {} else {} instead of continue inside the loop as it makes it easier to use the indentation and brackets to see which code is executed for which case.",
      "revId": "2e568ae1c600cd2c58c98d0ef652bf2a629c67fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4973cb6_606cf49f",
        "filename": "base/ip_address.cc",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-06-05T18:57:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "12d3f72f_5e4bc6d1",
      "revId": "2e568ae1c600cd2c58c98d0ef652bf2a629c67fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f30d2041_c32a4bbd",
        "filename": "base/ip_address.cc",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-06-04T23:45:40Z",
      "side": 1,
      "message": "Is there an overflow check for |i| inside the loop?",
      "revId": "2e568ae1c600cd2c58c98d0ef652bf2a629c67fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "451960e7_4e83e0dc",
        "filename": "base/ip_address.cc",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-06-05T18:57:44Z",
      "side": 1,
      "message": "No.  Fixed.",
      "parentUuid": "f30d2041_c32a4bbd",
      "revId": "2e568ae1c600cd2c58c98d0ef652bf2a629c67fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2e334c6_e37981c8",
        "filename": "base/ip_address.cc",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-06-04T23:45:40Z",
      "side": 1,
      "message": "It\u0027s unclear from a web search whether the intermediate result is guaranteed to be promoted to 32-bits here.\n\nISTM you could do the same overflow check by testing (next_value \u0026\u0026 0xf000), then you don\u0027t need candidate.",
      "revId": "2e568ae1c600cd2c58c98d0ef652bf2a629c67fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81ef7812_486206aa",
        "filename": "base/ip_address.cc",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-06-05T18:57:44Z",
      "side": 1,
      "message": "16 is an int (integer literal, no suffix) which results in the necessary promotion.  Your suggestion is better though :).  Done.",
      "parentUuid": "e2e334c6_e37981c8",
      "revId": "2e568ae1c600cd2c58c98d0ef652bf2a629c67fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "822ac9d7_afb2d706",
        "filename": "base/ip_address.cc",
        "patchSetId": 3
      },
      "lineNbr": 108,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-06-04T23:45:40Z",
      "side": 1,
      "message": "I wonder if 108-119 could be done with a single for loop that scans values[] from high to low and fills in the missing zeroes based on |i| and |double_colon_index|:\n\nSomething like:\n\nfor (int j \u003d 15; j \u003e\u003d 0; j--) {\n  if (i \u003d\u003d double_colon_index) {\n    while (j \u003e\u003d double_colon_index) address-\u003ebytes[j--] \u003d 0;\n  } else {\n    address-\u003ebytes[j] \u003d values[i--];\n  }\n}\n\nMight be an off by one in there depending on double_colon_index, check my math :-)",
      "revId": "2e568ae1c600cd2c58c98d0ef652bf2a629c67fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a59c875e_e83a581a",
        "filename": "base/ip_address.cc",
        "patchSetId": 3
      },
      "lineNbr": 108,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-06-05T18:57:44Z",
      "side": 1,
      "message": "Done, and indeed much nicer :)",
      "parentUuid": "822ac9d7_afb2d706",
      "revId": "2e568ae1c600cd2c58c98d0ef652bf2a629c67fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31eefd30_98632d3c",
        "filename": "base/ip_address.h",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-06-04T19:20:21Z",
      "side": 1,
      "message": "Can you add documentation for this method?",
      "revId": "2e568ae1c600cd2c58c98d0ef652bf2a629c67fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a1f68c8_edc04460",
        "filename": "base/ip_address.h",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-06-05T18:57:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "31eefd30_98632d3c",
      "revId": "2e568ae1c600cd2c58c98d0ef652bf2a629c67fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "00848df4_21e3506c",
        "filename": "base/ip_address_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-06-04T19:20:21Z",
      "side": 1,
      "message": "Please add test cases for leading/trailing periods (single and multiple)",
      "revId": "2e568ae1c600cd2c58c98d0ef652bf2a629c67fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "554ce5df_7bea6a60",
        "filename": "base/ip_address_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-06-05T18:57:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "00848df4_21e3506c",
      "revId": "2e568ae1c600cd2c58c98d0ef652bf2a629c67fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b508419_cd097c2e",
        "filename": "base/ip_address_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-06-04T19:20:21Z",
      "side": 1,
      "message": "The Parse() tests could be combined into a single test case to save a few lines, e.g.\n\nEXPECT_FALSE(Parse(\"192.x3.0.1\", \u0026address)) \u003c\u003c \"Cannot parse address with non-digit\";",
      "revId": "2e568ae1c600cd2c58c98d0ef652bf2a629c67fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2552953_bf3c1a1e",
        "filename": "base/ip_address_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-06-05T18:57:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6b508419_cd097c2e",
      "revId": "2e568ae1c600cd2c58c98d0ef652bf2a629c67fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}