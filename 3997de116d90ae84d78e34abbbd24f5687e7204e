{
  "comments": [
    {
      "key": {
        "uuid": "87d37489_25b8d9d4",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-07T00:23:47Z",
      "side": 1,
      "message": "Nit: newline after namespace",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a18a0c74_e8b0794c",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-09T21:22:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "87d37489_25b8d9d4",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "342b47ed_c92f3931",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-07T00:23:47Z",
      "side": 1,
      "message": "I would just shorten all of these private conversion functions as ToJson() and allow overload resolution to do the trick.",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23b516a1_6287c40f",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-09T21:22:43Z",
      "side": 1,
      "message": "This unfortunately doesn\u0027t work as the in-type (e.g. Answer::ToJson) has overload priority:\n\n../../cast/streaming/answer_messages.cc:178:27: error: too many arguments to function call, expected 0, have 1; did you mean \u0027::cast::streaming::ToJson\u0027?\n  root[\"rtpExtensions\"] \u003d ToJson(rtp_extensions);\n                          ^~~~~~\n                          ::cast::streaming::ToJson\n../../cast/streaming/answer_messages.cc:29:13: note: \u0027::cast::streaming::ToJson\u0027 declared here\nJson::Value ToJson(Scaling scaling) {",
      "parentUuid": "342b47ed_c92f3931",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "407edf84_1c65eaf0",
        "filename": "cast/streaming/answer_messages.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-07T00:23:47Z",
      "side": 1,
      "message": "None of these structs have constructors or member defaults, so the POD types are going to bet set with uninitialized memory when default-initialized.\n\nInitializing the structs properly prevents hard-to-diagnose bugs, and is a major security benefit for any pointers.",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "126aabaa_64077295",
        "filename": "cast/streaming/answer_messages.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-09T21:22:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "407edf84_1c65eaf0",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c438827b_1a8ec570",
        "filename": "cast/streaming/answer_messages.h",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-07T00:23:47Z",
      "side": 1,
      "message": "Drive-by: The sender will always scale, I think the difference is whether the frames are guaranteed to be a 16:9 aspect ratio via letterboxing/pillarboxing.\n\nIt might be more accurate to name this enum AspectRatio { kAny, kForce16x9 } or some such.\n\nCheck with miu@ :-)",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e546688_d9883ed2",
        "filename": "cast/streaming/answer_messages.h",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-09T21:22:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c438827b_1a8ec570",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5fac21f_ed8dfc1f",
        "filename": "cast/streaming/answer_messages.h",
        "patchSetId": 6
      },
      "lineNbr": 70,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-07T00:23:47Z",
      "side": 1,
      "message": "Drive-by: Odd that this is a string.",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a134f877_42e3f422",
        "filename": "cast/streaming/answer_messages.h",
        "patchSetId": 6
      },
      "lineNbr": 70,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-09T21:22:43Z",
      "side": 1,
      "message": "Thoughts on a std::pair? I think it makes sense here.",
      "parentUuid": "c5fac21f_ed8dfc1f",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "08aae6bd_b2b66dbd",
        "filename": "cast/streaming/answer_messages.h",
        "patchSetId": 6
      },
      "lineNbr": 89,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-07T00:23:47Z",
      "side": 1,
      "message": "Why is there ToJsonMessage and ToJson()?",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a13d094f_3ea326b6",
        "filename": "cast/streaming/answer_messages.h",
        "patchSetId": 6
      },
      "lineNbr": 89,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-09T21:22:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "08aae6bd_b2b66dbd",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "557a2f64_4f3a595f",
        "filename": "cast/streaming/answer_messages.h",
        "patchSetId": 6
      },
      "lineNbr": 93,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-07T00:23:47Z",
      "side": 1,
      "message": "I would shorten this to CreateInvalidAnswer().\nThe return type tells you it\u0027s a JSON message.",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3a5d957_ad2d2dcb",
        "filename": "cast/streaming/answer_messages.h",
        "patchSetId": 6
      },
      "lineNbr": 93,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-09T21:22:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "557a2f64_4f3a595f",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1cbada6c_b49ea7bd",
        "filename": "cast/streaming/answer_messages.h",
        "patchSetId": 6
      },
      "lineNbr": 94,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-07T00:23:47Z",
      "side": 1,
      "message": "Nit: add a newline before the closing brace.",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "faa1e95d_6458e21b",
        "filename": "cast/streaming/answer_messages.h",
        "patchSetId": 6
      },
      "lineNbr": 94,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-12-07T00:24:15Z",
      "side": 1,
      "message": "nit: add newline here",
      "range": {
        "startLine": 94,
        "startChar": 0,
        "endLine": 94,
        "endChar": 1
      },
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0c6a260_4f3a373e",
        "filename": "cast/streaming/answer_messages.h",
        "patchSetId": 6
      },
      "lineNbr": 94,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-09T21:22:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1cbada6c_b49ea7bd",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "876dcd35_89eba863",
        "filename": "cast/streaming/answer_messages.h",
        "patchSetId": 6
      },
      "lineNbr": 94,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-09T21:22:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "faa1e95d_6458e21b",
      "range": {
        "startLine": 94,
        "startChar": 0,
        "endLine": 94,
        "endChar": 1
      },
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d74c3825_a7ee8a11",
        "filename": "cast/streaming/message_port.h",
        "patchSetId": 6
      },
      "lineNbr": 25,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-07T00:23:47Z",
      "side": 1,
      "message": "Drive-by: It seems like this is something the embedder would need to interact with (e.g. to plumb messages to/from its Cast channel).  In which case, it should avoid using absl.",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6fe68592_2bdf23f5",
        "filename": "cast/streaming/message_port.h",
        "patchSetId": 6
      },
      "lineNbr": 25,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-09T21:22:43Z",
      "side": 1,
      "message": "Yuri and I are going to manage switching all of the public API things to not depend on Abseil in a separate patch. It\u0027s a larger meta problem than just here.",
      "parentUuid": "d74c3825_a7ee8a11",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf95a5e7_a0bb2e59",
        "filename": "cast/streaming/offer_messages.cc",
        "patchSetId": 6
      },
      "lineNbr": 296,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-07T00:23:47Z",
      "side": 1,
      "message": "Style nit: Would prefer a ternary return.",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc46ab1e_b4d6a30c",
        "filename": "cast/streaming/offer_messages.cc",
        "patchSetId": 6
      },
      "lineNbr": 296,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-09T21:22:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf95a5e7_a0bb2e59",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4732c9f5_c237633e",
        "filename": "cast/streaming/receiver_session.cc",
        "patchSetId": 6
      },
      "lineNbr": 21,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-07T00:23:47Z",
      "side": 1,
      "message": "Namespaces are used by the cast channel to route messages internally.  I don\u0027t think the mirroring session should care about what Cast V2 namespace the offer/answer are sent/received on.\n\nFor example, the embedder\u0027s cast channel implementation could already have a \u0027virtual connection\u0027 bound to a namespace that it can use to send/receive message payloads.",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "355ba2aa_99267420",
        "filename": "cast/streaming/receiver_session.cc",
        "patchSetId": 6
      },
      "lineNbr": 21,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-09T21:22:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4732c9f5_c237633e",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "21228aa0_0b183519",
        "filename": "cast/streaming/receiver_session.cc",
        "patchSetId": 6
      },
      "lineNbr": 197,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-07T00:23:47Z",
      "side": 1,
      "message": "Is SelectStream() always guaranteed to succeed?",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dbfb44ae_255b8c0c",
        "filename": "cast/streaming/receiver_session.cc",
        "patchSetId": 6
      },
      "lineNbr": 197,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-09T21:22:43Z",
      "side": 1,
      "message": "Yes. If no stream is selected, it\u0027s not an error case and we just return nullptr.",
      "parentUuid": "21228aa0_0b183519",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "80865545_64accf94",
        "filename": "cast/streaming/receiver_session.cc",
        "patchSetId": 6
      },
      "lineNbr": 202,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-07T00:23:47Z",
      "side": 1,
      "message": "I\u0027m not aware of anything that uses the data gathered from GET_STATUS, so not worth implementing IMO.",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac081159_5ea5edcc",
        "filename": "cast/streaming/receiver_session.cc",
        "patchSetId": 6
      },
      "lineNbr": 202,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-09T21:22:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "80865545_64accf94",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cef57d83_010ad21d",
        "filename": "cast/streaming/receiver_session.cc",
        "patchSetId": 6
      },
      "lineNbr": 219,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-07T00:23:47Z",
      "side": 1,
      "message": "Can these just be passed by const ref? \nOr are they nullable (e.g. for audio-only sessions)?",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "acc4a38c_32ba9d00",
        "filename": "cast/streaming/receiver_session.cc",
        "patchSetId": 6
      },
      "lineNbr": 219,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-09T21:22:43Z",
      "side": 1,
      "message": "Nullable.",
      "parentUuid": "cef57d83_010ad21d",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86ac659f_cab17461",
        "filename": "cast/streaming/receiver_session.cc",
        "patchSetId": 6
      },
      "lineNbr": 223,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-07T00:23:47Z",
      "side": 1,
      "message": "This code led me to believe that we are actually spinning up resources to receive an audio stream.\n\nBut it looks like it is also validating the stream configuration.\n\nIMO it would be cleaner to separate out validation from the construction of the receiver objects.",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d819ab8b_d26239ca",
        "filename": "cast/streaming/receiver_session.cc",
        "patchSetId": 6
      },
      "lineNbr": 223,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-09T21:22:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "86ac659f_cab17461",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "961060cd_78123e76",
        "filename": "cast/streaming/receiver_session.cc",
        "patchSetId": 6
      },
      "lineNbr": 245,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-07T00:23:47Z",
      "side": 1,
      "message": "What if audio is nullptr?",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37abace8_092415c9",
        "filename": "cast/streaming/receiver_session.cc",
        "patchSetId": 6
      },
      "lineNbr": 245,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-09T21:22:43Z",
      "side": 1,
      "message": "That\u0027s a typo, it should be video-\u003estream.target_delay. Thanks for the catch. Refactoring this to make this error not possible.",
      "parentUuid": "961060cd_78123e76",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c2ff037a_78b764f4",
        "filename": "cast/streaming/receiver_session.cc",
        "patchSetId": 6
      },
      "lineNbr": 257,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-07T00:23:47Z",
      "side": 1,
      "message": "std::array\u003cint, 2\u003e, unless you need push_back :-)",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c0d0411_8036b76b",
        "filename": "cast/streaming/receiver_session.cc",
        "patchSetId": 6
      },
      "lineNbr": 257,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-09T21:22:43Z",
      "side": 1,
      "message": "push_back here is great.",
      "parentUuid": "c2ff037a_78b764f4",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "69604448_ba91afc8",
        "filename": "cast/streaming/receiver_session.cc",
        "patchSetId": 6
      },
      "lineNbr": 258,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-07T00:23:47Z",
      "side": 1,
      "message": "Ditto",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a4679d7_a0fbabf5",
        "filename": "cast/streaming/receiver_session.cc",
        "patchSetId": 6
      },
      "lineNbr": 258,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-09T21:22:43Z",
      "side": 1,
      "message": "same.",
      "parentUuid": "69604448_ba91afc8",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f2b6d961_5f4bde77",
        "filename": "cast/streaming/receiver_session.cc",
        "patchSetId": 6
      },
      "lineNbr": 278,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-07T00:23:47Z",
      "side": 1,
      "message": "Can this be the default value for the member?",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d3fb628_dfdae3fc",
        "filename": "cast/streaming/receiver_session.cc",
        "patchSetId": 6
      },
      "lineNbr": 278,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-09T21:22:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f2b6d961_5f4bde77",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6831f9b0_3f71819d",
        "filename": "cast/streaming/receiver_session.h",
        "patchSetId": 6
      },
      "lineNbr": 129,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-07T00:23:47Z",
      "side": 1,
      "message": "It would seem simpler to put the message payload itself into this struct, since you seem to always pass them together?",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63501c56_69bcc948",
        "filename": "cast/streaming/receiver_session.h",
        "patchSetId": 6
      },
      "lineNbr": 129,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-09T21:22:43Z",
      "side": 1,
      "message": "Works for me, good idea! I split it into const and non const, but I\u0027ll just pass a pointer and have const fields.",
      "parentUuid": "6831f9b0_3f71819d",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71725b74_87217d13",
        "filename": "cast/streaming/receiver_session.h",
        "patchSetId": 6
      },
      "lineNbr": 139,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-07T00:23:47Z",
      "side": 1,
      "message": "Please document.  Is it legal to pass nullptr for either or both streams?",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "068e6832_35eebd17",
        "filename": "cast/streaming/receiver_session.h",
        "patchSetId": 6
      },
      "lineNbr": 139,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-09T21:22:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "71725b74_87217d13",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "019778d5_5dee1bb0",
        "filename": "cast/streaming/receiver_session.h",
        "patchSetId": 6
      },
      "lineNbr": 142,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-07T00:23:47Z",
      "side": 1,
      "message": "Ditto",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3db0a840_144df7ed",
        "filename": "cast/streaming/receiver_session.h",
        "patchSetId": 6
      },
      "lineNbr": 142,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-09T21:22:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "019778d5_5dee1bb0",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "03199a71_5aa72573",
        "filename": "cast/streaming/receiver_session_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-07T00:23:47Z",
      "side": 1,
      "message": "constexpr",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9d8f3cb_e5210442",
        "filename": "cast/streaming/receiver_session_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-09T21:22:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "03199a71_5aa72573",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ec0938a9_ba04db59",
        "filename": "cast/streaming/receiver_session_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 216,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-07T00:23:47Z",
      "side": 1,
      "message": "Can you add test cases for most/all of the logic added to ReceiverSession?\n\n- Handling invalid offers\n- Handling invalid stream configs\n- Handling offers with just audio and just video (if not already covered)\n- Generating a valid answer",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "133c7640_95c39f7a",
        "filename": "cast/streaming/receiver_session_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 216,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-09T21:22:43Z",
      "side": 1,
      "message": "Yeah, definitely! Thanks for this feedback.",
      "parentUuid": "ec0938a9_ba04db59",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b00d4f9_533a6c81",
        "filename": "cast/streaming/receiver_session_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 216,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-10T01:42:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "133c7640_95c39f7a",
      "revId": "3997de116d90ae84d78e34abbbd24f5687e7204e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}