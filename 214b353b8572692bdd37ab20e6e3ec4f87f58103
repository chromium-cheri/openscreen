{
  "comments": [
    {
      "key": {
        "uuid": "c49bad43_c529338f",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-12-05T02:34:44Z",
      "side": 1,
      "message": "Historically, kSender was assumed if this value was not provided in the ANSWER. So, consider:\n\n1. Remove kUnknown from the enum decl.\n\n2. Here, just set it to \"receiver\" if scaling \u003d\u003d kReceiver, else set it to \"sender\" for all else.",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 26,
        "endChar": 56
      },
      "revId": "214b353b8572692bdd37ab20e6e3ec4f87f58103",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d8a4839_554e00b7",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 2
      },
      "lineNbr": 31,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-12-05T02:34:44Z",
      "side": 1,
      "message": "This can be deleted, since \"IV\" shouldn\u0027t be set in the ANSWER (see other comment).",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 31,
        "endChar": 66
      },
      "revId": "214b353b8572692bdd37ab20e6e3ec4f87f58103",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "077a97a4_0ef0d5a8",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-12-05T02:34:44Z",
      "side": 1,
      "message": "nit: std::ostringstream\n          ^\n\n...since it\u0027s streambuf isn\u0027t ever going to be used with a std::istream.",
      "range": {
        "startLine": 32,
        "startChar": 7,
        "endLine": 32,
        "endChar": 19
      },
      "revId": "214b353b8572692bdd37ab20e6e3ec4f87f58103",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8df7724_0a959006",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-12-05T02:34:44Z",
      "side": 1,
      "message": "Also if: max_sample_rate \u003c\u003d 0",
      "range": {
        "startLine": 62,
        "startChar": 75,
        "endLine": 62,
        "endChar": 78
      },
      "revId": "214b353b8572692bdd37ab20e6e3ec4f87f58103",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14380d13_dd646968",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 2
      },
      "lineNbr": 64,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-12-05T02:34:44Z",
      "side": 1,
      "message": "Suggest not logging, and just returning the Error w/ message string.\n\n...and in all the other places below...",
      "range": {
        "startLine": 63,
        "startChar": 1,
        "endLine": 64,
        "endChar": 54
      },
      "revId": "214b353b8572692bdd37ab20e6e3ec4f87f58103",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e339164a_6110961d",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 2
      },
      "lineNbr": 161,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-12-05T02:34:44Z",
      "side": 1,
      "message": "Suggest replacing with:\n\n  return openscreen::Error(Error::Code::kParameterInvalid\n                           \"Invalid UDP port number.\");\n\n...rather than logging, since everything else below just returns an Error.",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 161,
        "endChar": 54
      },
      "revId": "214b353b8572692bdd37ab20e6e3ec4f87f58103",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "723d0228_e0b298e9",
        "filename": "cast/streaming/answer_messages.h",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-12-05T02:34:44Z",
      "side": 1,
      "message": "Is this supposed to be an int, or a rational, or mixed? (I would expect an int here, but I forgot what the spec says.) Maybe we should do a double, like in the last CL?",
      "range": {
        "startLine": 36,
        "startChar": 2,
        "endLine": 36,
        "endChar": 25
      },
      "revId": "214b353b8572692bdd37ab20e6e3ec4f87f58103",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0addf35f_883eed01",
        "filename": "cast/streaming/answer_messages.h",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-12-05T02:34:44Z",
      "side": 1,
      "message": "It\u0027d be good to add a comment here about what this is, like:\n\n  \"Decides whether the Sender scales+letterboxes the content, or otherwise may send video frames of any arbitrary size and the Receiver must handle such presentation details.\"",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 60,
        "endChar": 66
      },
      "revId": "214b353b8572692bdd37ab20e6e3ec4f87f58103",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5d2deae_4742f1b9",
        "filename": "cast/streaming/answer_messages.h",
        "patchSetId": 2
      },
      "lineNbr": 78,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-12-05T02:34:44Z",
      "side": 1,
      "message": "I believe this is unused. FWIW, there is nothing Sender-side that even looks at this since the IV is already in the OFFER message. There was a comment from someone in the spec document about this field probably shouldn\u0027t be in the ANSWER.",
      "range": {
        "startLine": 78,
        "startChar": 2,
        "endLine": 78,
        "endChar": 29
      },
      "revId": "214b353b8572692bdd37ab20e6e3ec4f87f58103",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa713929_bcbec1b3",
        "filename": "cast/streaming/answer_messages.h",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-12-05T02:34:44Z",
      "side": 1,
      "message": "The spec didn\u0027t name this very well. It should have been something like: recevier_supports_wifi_status_reporting (i.e., it acts on the GET_STATUS message over the Cast Channel).",
      "range": {
        "startLine": 81,
        "startChar": 2,
        "endLine": 81,
        "endChar": 27
      },
      "revId": "214b353b8572692bdd37ab20e6e3ec4f87f58103",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}