{
  "comments": [
    {
      "key": {
        "uuid": "6d5289b8_72ea76e6",
        "filename": "api/impl/presentation/presentation_connection_unittest.cc",
        "patchSetId": 11
      },
      "lineNbr": 1,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-02-15T19:50:39Z",
      "side": 1,
      "message": "Update copyright (here and elsewhere)",
      "revId": "76fe84bdd375efdd94add0a1ed3b0474b9467e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49395a71_e4c36de8",
        "filename": "api/impl/presentation/presentation_connection_unittest.cc",
        "patchSetId": 11
      },
      "lineNbr": 1,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-02-16T01:48:07Z",
      "side": 1,
      "message": "Updating on new files.",
      "parentUuid": "6d5289b8_72ea76e6",
      "revId": "76fe84bdd375efdd94add0a1ed3b0474b9467e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fe1c569_46fb5942",
        "filename": "api/impl/presentation/presentation_receiver.cc",
        "patchSetId": 11
      },
      "lineNbr": 27,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-02-15T19:50:39Z",
      "side": 1,
      "message": "Nit: remove extra blank lines",
      "revId": "76fe84bdd375efdd94add0a1ed3b0474b9467e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62b0cd8c_520ef9d7",
        "filename": "api/impl/presentation/presentation_receiver.cc",
        "patchSetId": 11
      },
      "lineNbr": 27,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-02-16T01:48:07Z",
      "side": 1,
      "message": "Removing. I like having the extra line between case statements--do we have guidelines for when we should/shouldn\u0027t do that?",
      "parentUuid": "1fe1c569_46fb5942",
      "revId": "76fe84bdd375efdd94add0a1ed3b0474b9467e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "892b8628_47723347",
        "filename": "api/impl/presentation/presentation_receiver.cc",
        "patchSetId": 11
      },
      "lineNbr": 109,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-02-15T19:50:39Z",
      "side": 1,
      "message": "Where does the client_id come from?  It\u0027s not in the spec and I believe the embedder submits a watch_id to be able to refer to a pending request.",
      "revId": "76fe84bdd375efdd94add0a1ed3b0474b9467e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0f24846_007764ba",
        "filename": "api/impl/presentation/presentation_receiver.cc",
        "patchSetId": 11
      },
      "lineNbr": 109,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-02-16T01:48:07Z",
      "side": 1,
      "message": "Read through the spec, fixed implementation.",
      "parentUuid": "892b8628_47723347",
      "revId": "76fe84bdd375efdd94add0a1ed3b0474b9467e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9d76cd99_55425035",
        "filename": "api/public/presentation/presentation_receiver.h",
        "patchSetId": 11
      },
      "lineNbr": 35,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-02-15T19:50:39Z",
      "side": 1,
      "message": "specific URLs?",
      "revId": "76fe84bdd375efdd94add0a1ed3b0474b9467e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6afa53a_cfceece8",
        "filename": "api/public/presentation/presentation_receiver.h",
        "patchSetId": 11
      },
      "lineNbr": 35,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-02-16T01:48:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9d76cd99_55425035",
      "revId": "76fe84bdd375efdd94add0a1ed3b0474b9467e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9701ceca_6d76f64d",
        "filename": "api/public/presentation/presentation_receiver.h",
        "patchSetId": 11
      },
      "lineNbr": 65,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-02-15T19:50:39Z",
      "side": 1,
      "message": "Can you file an umbrella bug to reconsider the use of singletons in the embedder API and protocol implementation layers?  I can\u0027t think of a good reason to have them, especially since we don\u0027t want the library to allocate long lived objects unless a particular protocol or API is actually in use.\n\nFor bonus points, update all the TODO(foo) to TODO(issue/XX) to make it easy to find them later.",
      "revId": "76fe84bdd375efdd94add0a1ed3b0474b9467e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "defb37fb_875b02c3",
        "filename": "api/public/presentation/presentation_receiver.h",
        "patchSetId": 11
      },
      "lineNbr": 65,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-02-16T01:48:07Z",
      "side": 1,
      "message": "Filed issue/31, updated all comments.",
      "parentUuid": "9701ceca_6d76f64d",
      "revId": "76fe84bdd375efdd94add0a1ed3b0474b9467e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d9d86cd_98cc8ac3",
        "filename": "api/public/presentation/presentation_receiver.h",
        "patchSetId": 11
      },
      "lineNbr": 112,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-02-15T19:50:39Z",
      "side": 1,
      "message": "Would it be possible to add a discrimination enum to QueuedResponse and combine these maps?",
      "revId": "76fe84bdd375efdd94add0a1ed3b0474b9467e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8bfd636_23011796",
        "filename": "api/public/presentation/presentation_receiver.h",
        "patchSetId": 11
      },
      "lineNbr": 112,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-02-16T01:48:07Z",
      "side": 1,
      "message": "Yeah, done.",
      "parentUuid": "2d9d86cd_98cc8ac3",
      "revId": "76fe84bdd375efdd94add0a1ed3b0474b9467e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b0a7530_1643292a",
        "filename": "base/error.cc",
        "patchSetId": 11
      },
      "lineNbr": 35,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-02-15T19:50:39Z",
      "side": 1,
      "message": "FIX LATER: jrw@ is working on a utility library to map between strings and enums using constexpr structs.  We could adopt it here once it lands.",
      "revId": "76fe84bdd375efdd94add0a1ed3b0474b9467e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ce78a82_127acefa",
        "filename": "base/error.cc",
        "patchSetId": 11
      },
      "lineNbr": 35,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-02-16T01:48:07Z",
      "side": 1,
      "message": "I\u0027ll rephrase the TODO.",
      "parentUuid": "8b0a7530_1643292a",
      "revId": "76fe84bdd375efdd94add0a1ed3b0474b9467e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c6f6b726_6e124745",
        "filename": "platform/api/logging.h",
        "patchSetId": 11
      },
      "lineNbr": 65,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-02-15T19:50:39Z",
      "side": 1,
      "message": "FIX LATER: Agreed, the numbered debug logging is overkill IMO.",
      "revId": "76fe84bdd375efdd94add0a1ed3b0474b9467e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7eedf128_afcecd3c",
        "filename": "platform/api/logging.h",
        "patchSetId": 11
      },
      "lineNbr": 65,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-02-16T01:48:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c6f6b726_6e124745",
      "revId": "76fe84bdd375efdd94add0a1ed3b0474b9467e3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}