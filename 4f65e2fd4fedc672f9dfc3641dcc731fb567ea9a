{
  "comments": [
    {
      "key": {
        "uuid": "752489f2_742e18a1",
        "filename": "discovery/dnssd/impl/conversion_layer.cc",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-10-25T20:51:12Z",
      "side": 1,
      "message": "This probably will fail on bots as it will trigger signed vs unsigned and size mismatch warnings.\n\nYou can either use reverse iterators rbegin and rend, or write a loop like this\nfor (size_t i \u003d txt_data.texts().size(); i-- \u003e 0;)",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 38
      },
      "revId": "4f65e2fd4fedc672f9dfc3641dcc731fb567ea9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92ab7e1c_259688e0",
        "filename": "discovery/dnssd/impl/conversion_layer.cc",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-10-26T00:37:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "752489f2_742e18a1",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 38
      },
      "revId": "4f65e2fd4fedc672f9dfc3641dcc731fb567ea9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f996e45d_a9fac004",
        "filename": "discovery/dnssd/impl/conversion_layer.cc",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-10-25T20:51:12Z",
      "side": 1,
      "message": "Unused",
      "range": {
        "startLine": 26,
        "startChar": 4,
        "endLine": 26,
        "endChar": 33
      },
      "revId": "4f65e2fd4fedc672f9dfc3641dcc731fb567ea9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae58190d_7593f7f2",
        "filename": "discovery/dnssd/impl/conversion_layer.cc",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-10-26T00:37:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f996e45d_a9fac004",
      "range": {
        "startLine": 26,
        "startChar": 4,
        "endLine": 26,
        "endChar": 33
      },
      "revId": "4f65e2fd4fedc672f9dfc3641dcc731fb567ea9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79e0b181_c7f93fcd",
        "filename": "discovery/dnssd/impl/conversion_layer.cc",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-10-26T00:37:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f996e45d_a9fac004",
      "range": {
        "startLine": 26,
        "startChar": 4,
        "endLine": 26,
        "endChar": 33
      },
      "revId": "4f65e2fd4fedc672f9dfc3641dcc731fb567ea9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92ff35a1_ff901be5",
        "filename": "discovery/dnssd/impl/conversion_layer.cc",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-10-25T20:51:12Z",
      "side": 1,
      "message": "nit: I think it would read better if this was explicitly if (index_of_eq \u003d\u003d 0), since index_of_eq was just checked for position-not-found \"invalid\" value.",
      "range": {
        "startLine": 28,
        "startChar": 10,
        "endLine": 28,
        "endChar": 22
      },
      "revId": "4f65e2fd4fedc672f9dfc3641dcc731fb567ea9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab98313f_d835dc05",
        "filename": "discovery/dnssd/impl/conversion_layer.cc",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-10-26T00:37:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "92ff35a1_ff901be5",
      "range": {
        "startLine": 28,
        "startChar": 10,
        "endLine": 28,
        "endChar": 22
      },
      "revId": "4f65e2fd4fedc672f9dfc3641dcc731fb567ea9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e215d48c_df7a3e6a",
        "filename": "discovery/dnssd/impl/conversion_layer.cc",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-10-25T20:51:12Z",
      "side": 1,
      "message": "nit: instance_key?",
      "range": {
        "startLine": 50,
        "startChar": 67,
        "endLine": 50,
        "endChar": 74
      },
      "revId": "4f65e2fd4fedc672f9dfc3641dcc731fb567ea9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ee2fd7b_0d628f50",
        "filename": "discovery/dnssd/impl/conversion_layer.cc",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-10-26T00:37:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e215d48c_df7a3e6a",
      "range": {
        "startLine": 50,
        "startChar": 67,
        "endLine": 50,
        "endChar": 74
      },
      "revId": "4f65e2fd4fedc672f9dfc3641dcc731fb567ea9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c9aa0f55_d5e8aa26",
        "filename": "discovery/dnssd/impl/conversion_layer.cc",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-10-25T20:51:12Z",
      "side": 1,
      "message": "DnsSdTxtRecord\u0026 txt \u003d txt_or_error.value(); should achieve the same\nYou can store a mutable reference here and then use it in std::move(txt) so you\u0027ll move just once.",
      "range": {
        "startLine": 77,
        "startChar": 2,
        "endLine": 77,
        "endChar": 55
      },
      "revId": "4f65e2fd4fedc672f9dfc3641dcc731fb567ea9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4876395_e6844c1a",
        "filename": "discovery/dnssd/impl/conversion_layer.cc",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-10-26T00:37:44Z",
      "side": 1,
      "message": "Removed this entirely and just directly access txt_or_error.value() :)",
      "parentUuid": "c9aa0f55_d5e8aa26",
      "range": {
        "startLine": 77,
        "startChar": 2,
        "endLine": 77,
        "endChar": 55
      },
      "revId": "4f65e2fd4fedc672f9dfc3641dcc731fb567ea9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f4bd6e38_b118e32a",
        "filename": "discovery/dnssd/impl/conversion_layer.cc",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-10-25T20:51:12Z",
      "side": 1,
      "message": "In case of PTR record instance is in RDATA\nIn case of SRV/TXT/A/AAAA records instance is the name of the record.\nMaybe have GetInstanceKey/GetServiceKey methods that simply accept const DomainName\u0026 ? They don\u0027t need anything else to get the key. Also, no guarantees the record will have the correct amount of labels.",
      "range": {
        "startLine": 92,
        "startChar": 0,
        "endLine": 99,
        "endChar": 1
      },
      "revId": "4f65e2fd4fedc672f9dfc3641dcc731fb567ea9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02126098_49d3d6b7",
        "filename": "discovery/dnssd/impl/conversion_layer.cc",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-10-26T00:37:44Z",
      "side": 1,
      "message": "Good catch. I\u0027m special casing PTR, and adding a check that the number of labels is \u003e\u003d 4 (or 3 for non-PTR)\nBased on discussion over chat, I\u0027ve kept this as taking in an MdnsRecord",
      "parentUuid": "f4bd6e38_b118e32a",
      "range": {
        "startLine": 92,
        "startChar": 0,
        "endLine": 99,
        "endChar": 1
      },
      "revId": "4f65e2fd4fedc672f9dfc3641dcc731fb567ea9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a77a9cd_d9999750",
        "filename": "discovery/dnssd/impl/conversion_layer.cc",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-10-25T20:51:12Z",
      "side": 1,
      "message": "I\u0027m a bit puzzled as to where this one is going to be used.\n\nA user of DNS-SD provides what service they are looking for.\nThis goes in as the name into mDNS query. Then PTR records are received and PTR RDATA describes instances, and instance already contains the service in itself.\n\nWhere do you plan to use this function?",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 101,
        "endChar": 64
      },
      "revId": "4f65e2fd4fedc672f9dfc3641dcc731fb567ea9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c862fca1_21ed1e74",
        "filename": "discovery/dnssd/impl/conversion_layer.cc",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-10-26T00:37:44Z",
      "side": 1,
      "message": "When we get an OnRecordChanged call from the mDNS Querier, we get some kind of Record. In the case of a non-ptr, we need to map that back to the set of callbacks we care about. These will eb stored in a std::map\u003cServiceKey, Callback*\u003e, we need the ServiceKey for this lookup\n\n(Querier CL to follow once this one gets checked in, but I can show you the code Monday if it helps or upload it as WIP for reference purposes)\n\nBecause the logic here has gotten more complex (see previous comment), I\u0027ve updated it to instead create the ServiceKey using the GetInstanceKey method",
      "parentUuid": "8a77a9cd_d9999750",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 101,
        "endChar": 64
      },
      "revId": "4f65e2fd4fedc672f9dfc3641dcc731fb567ea9a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}