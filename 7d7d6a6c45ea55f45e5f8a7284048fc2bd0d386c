{
  "comments": [
    {
      "key": {
        "uuid": "675bcd63_bfe4a5de",
        "filename": "osp/impl/discovery/mdns/mdns_responder_adapter_impl.cc",
        "patchSetId": 5
      },
      "lineNbr": 347,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-08-27T23:42:05Z",
      "side": 1,
      "message": "Is there a bug for these? We shouldn\u0027t leave stuff like this unimplemented where we would want users of the library to see these errors to handle them in the application.",
      "range": {
        "startLine": 347,
        "startChar": 2,
        "endLine": 347,
        "endChar": 19
      },
      "revId": "7d7d6a6c45ea55f45e5f8a7284048fc2bd0d386c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "edeb35da_222bdb7e",
        "filename": "osp/impl/discovery/mdns/mdns_responder_adapter_impl.cc",
        "patchSetId": 5
      },
      "lineNbr": 347,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-08-28T00:35:44Z",
      "side": 1,
      "message": "I will file a bug in the morning. Leaving this open pending the bug\n\nDo you suggest sprinkling TODOs throughout the code as-well?",
      "parentUuid": "675bcd63_bfe4a5de",
      "range": {
        "startLine": 347,
        "startChar": 2,
        "endLine": 347,
        "endChar": 19
      },
      "revId": "7d7d6a6c45ea55f45e5f8a7284048fc2bd0d386c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c5529b8_9112b948",
        "filename": "osp/impl/discovery/mdns/mdns_responder_adapter_impl.cc",
        "patchSetId": 5
      },
      "lineNbr": 347,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-08-28T16:48:10Z",
      "side": 1,
      "message": "I\u0027ve added TODOs at all of the OSP_UNIMPLEMENTED spots, just to be sure we didn\u0027t miss any - they will show up at the next iteration, since it didn\u0027t seem worth pushing another just for that.\n\nBug is here: https://bugs.chromium.org/p/openscreen/issues/detail?id\u003d67",
      "parentUuid": "edeb35da_222bdb7e",
      "range": {
        "startLine": 347,
        "startChar": 2,
        "endLine": 347,
        "endChar": 19
      },
      "revId": "7d7d6a6c45ea55f45e5f8a7284048fc2bd0d386c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf9b0506_ba325642",
        "filename": "osp/impl/quic/testing/fake_quic_connection.cc",
        "patchSetId": 5
      },
      "lineNbr": 65,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-08-27T23:42:05Z",
      "side": 1,
      "message": "Did you mean OSP_NOTREACHED() for these?",
      "range": {
        "startLine": 65,
        "startChar": 2,
        "endLine": 65,
        "endChar": 19
      },
      "revId": "7d7d6a6c45ea55f45e5f8a7284048fc2bd0d386c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a53f60e_343bb7dc",
        "filename": "osp/impl/quic/testing/fake_quic_connection.cc",
        "patchSetId": 5
      },
      "lineNbr": 65,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-08-28T00:35:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf9b0506_ba325642",
      "range": {
        "startLine": 65,
        "startChar": 2,
        "endLine": 65,
        "endChar": 19
      },
      "revId": "7d7d6a6c45ea55f45e5f8a7284048fc2bd0d386c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e49ee3c8_c853f797",
        "filename": "osp/impl/testing/fake_mdns_responder_adapter.cc",
        "patchSetId": 5
      },
      "lineNbr": 241,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-08-27T23:42:05Z",
      "side": 1,
      "message": "OSP_NOTREACHED() for these too.",
      "range": {
        "startLine": 241,
        "startChar": 2,
        "endLine": 241,
        "endChar": 18
      },
      "revId": "7d7d6a6c45ea55f45e5f8a7284048fc2bd0d386c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bbf7b18_ede26628",
        "filename": "osp/impl/testing/fake_mdns_responder_adapter.cc",
        "patchSetId": 5
      },
      "lineNbr": 241,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-08-28T00:35:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e49ee3c8_c853f797",
      "range": {
        "startLine": 241,
        "startChar": 2,
        "endLine": 241,
        "endChar": 18
      },
      "revId": "7d7d6a6c45ea55f45e5f8a7284048fc2bd0d386c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e56d48fa_8490453a",
        "filename": "platform/api/udp_socket.h",
        "patchSetId": 5
      },
      "lineNbr": 94,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-08-27T23:42:05Z",
      "side": 1,
      "message": "OOC, why is this global, and not per instance of a UdpSocket?",
      "range": {
        "startLine": 94,
        "startChar": 2,
        "endLine": 94,
        "endChar": 62
      },
      "revId": "7d7d6a6c45ea55f45e5f8a7284048fc2bd0d386c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb8e4666_9e49f611",
        "filename": "platform/api/udp_socket.h",
        "patchSetId": 5
      },
      "lineNbr": 94,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-08-28T00:35:44Z",
      "side": 1,
      "message": "The goal here is that when a new socket is created, we want to perform some action (ie, the global NetworkReader\u0027s list of sockets to watch in StandAlone - that way we know to watch the socket for reads)\n\nI am open to alternative design options (as a follow-up CL), and this was the best so far. Definitely still open to something better though.",
      "parentUuid": "e56d48fa_8490453a",
      "range": {
        "startLine": 94,
        "startChar": 2,
        "endLine": 94,
        "endChar": 62
      },
      "revId": "7d7d6a6c45ea55f45e5f8a7284048fc2bd0d386c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b40ea2db_efa0659c",
        "filename": "platform/api/udp_socket.h",
        "patchSetId": 5
      },
      "lineNbr": 186,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-08-27T23:42:05Z",
      "side": 1,
      "message": "Let\u0027s remove these:\n\n1. MockUdpSocket doesn\u0027t seem to need private access.\n\n2. If NetworkReader needs to call OnRead() (a protected, not private method), then UdpSocketPosix (the subclass impl) should provide access to it; not the public API.",
      "range": {
        "startLine": 185,
        "startChar": 0,
        "endLine": 186,
        "endChar": 29
      },
      "revId": "7d7d6a6c45ea55f45e5f8a7284048fc2bd0d386c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6500c674_fe79f0b7",
        "filename": "platform/api/udp_socket.h",
        "patchSetId": 5
      },
      "lineNbr": 186,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-08-28T00:35:44Z",
      "side": 1,
      "message": "MockUdpSocket needs access for calling PostPacket (which needs access to the task runner)\n\nRealized I could avoid returning the result from RecieveMessage in UdpSocketPosix, and avoid issue #2 entirely - so that\u0027s fixed in the newest iteration.",
      "parentUuid": "b40ea2db_efa0659c",
      "range": {
        "startLine": 185,
        "startChar": 0,
        "endLine": 186,
        "endChar": 29
      },
      "revId": "7d7d6a6c45ea55f45e5f8a7284048fc2bd0d386c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7d73df2_82996190",
        "filename": "platform/impl/network_reader.cc",
        "patchSetId": 5
      },
      "lineNbr": 33,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-08-27T23:42:05Z",
      "side": 1,
      "message": "Is this the same as:\n\n  sockets \u003d sockets_;\n\nOtherwise, nit: Before the loop: sockets.reserve(sockets_.size());",
      "range": {
        "startLine": 31,
        "startChar": 4,
        "endLine": 33,
        "endChar": 5
      },
      "revId": "7d7d6a6c45ea55f45e5f8a7284048fc2bd0d386c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de9ca788_0e3ee457",
        "filename": "platform/impl/network_reader.cc",
        "patchSetId": 5
      },
      "lineNbr": 33,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-08-28T00:35:44Z",
      "side": 1,
      "message": "It\u0027s a different type - sockets_ is a unordered_set. \n\nAdded sockets.reserve",
      "parentUuid": "a7d73df2_82996190",
      "range": {
        "startLine": 31,
        "startChar": 4,
        "endLine": 33,
        "endChar": 5
      },
      "revId": "7d7d6a6c45ea55f45e5f8a7284048fc2bd0d386c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51b54583_108d062c",
        "filename": "platform/impl/network_reader.cc",
        "patchSetId": 5
      },
      "lineNbr": 84,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-08-27T23:42:05Z",
      "side": 1,
      "message": "re. the new bool argument: Code external to this class should not decide whether the current thread has to block based on private implementation details.",
      "range": {
        "startLine": 84,
        "startChar": 48,
        "endLine": 84,
        "endChar": 64
      },
      "revId": "7d7d6a6c45ea55f45e5f8a7284048fc2bd0d386c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a874dfc_40fb8a2d",
        "filename": "platform/impl/network_reader.cc",
        "patchSetId": 5
      },
      "lineNbr": 84,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-08-28T00:35:44Z",
      "side": 1,
      "message": "This is currently a protected method, so it would only be decided by children\n\nThe purpose of this bool is to allow for testing. How about I make OnDelete private and friend the testing implementation?",
      "parentUuid": "51b54583_108d062c",
      "range": {
        "startLine": 84,
        "startChar": 48,
        "endLine": 84,
        "endChar": 64
      },
      "revId": "7d7d6a6c45ea55f45e5f8a7284048fc2bd0d386c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}