{
  "comments": [
    {
      "key": {
        "uuid": "ae1b7bb6_e02f8ba1",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 5
      },
      "lineNbr": 31,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-02T19:43:51Z",
      "side": 1,
      "message": "Is this part of a range, or does min \u003d\u003d max?",
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1232902_3862f64c",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 5
      },
      "lineNbr": 31,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-06-03T20:41:12Z",
      "side": 1,
      "message": "Updated comments.",
      "parentUuid": "ae1b7bb6_e02f8ba1",
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8308bac0_4aaa4aee",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 5
      },
      "lineNbr": 34,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-02T19:43:51Z",
      "side": 1,
      "message": "That is very low.  Is this also part of a range?  Where is the maximum defined?",
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60772bef_b4a70d42",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 5
      },
      "lineNbr": 34,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-06-03T20:41:12Z",
      "side": 1,
      "message": "By the receiver. This minimum is a default for an optional value, from the control spec. Updated comments.",
      "parentUuid": "8308bac0_4aaa4aee",
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfefbc34_14a17eb0",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 5
      },
      "lineNbr": 49,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-06-03T01:29:05Z",
      "side": 1,
      "message": "change these \u0027magic constants\u0027 into const variables kReceiver and kSender or similar, commented as to what they mean / where they come from? Putting all the magic constants together with a link to the spec is good enough\n\nHere and elsewhere in file",
      "range": {
        "startLine": 49,
        "startChar": 22,
        "endLine": 49,
        "endChar": 32
      },
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "776b659d_c1a3d011",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 5
      },
      "lineNbr": 49,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-06-03T20:41:12Z",
      "side": 1,
      "message": "Sounds good, will do.",
      "parentUuid": "dfefbc34_14a17eb0",
      "range": {
        "startLine": 49,
        "startChar": 22,
        "endLine": 49,
        "endChar": 32
      },
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c037d360_6137d648",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 5
      },
      "lineNbr": 90,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-06-03T01:29:05Z",
      "side": 1,
      "message": "More magic constants here and below",
      "range": {
        "startLine": 90,
        "startChar": 39,
        "endLine": 90,
        "endChar": 54
      },
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "419c8558_b48e052e",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 5
      },
      "lineNbr": 90,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-06-03T20:41:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c037d360_6137d648",
      "range": {
        "startLine": 90,
        "startChar": 39,
        "endLine": 90,
        "endChar": 54
      },
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "939d8280_32ee558a",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 5
      },
      "lineNbr": 123,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-02T19:43:51Z",
      "side": 1,
      "message": "use chrono_helper.h?",
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "353d410e_ab9eb4c0",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 5
      },
      "lineNbr": 123,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-06-03T20:41:12Z",
      "side": 1,
      "message": "N/A now.",
      "parentUuid": "939d8280_32ee558a",
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2e0d903_f6221f43",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 5
      },
      "lineNbr": 261,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-02T19:43:51Z",
      "side": 1,
      "message": "What does error() return?  You shouldn\u0027t need to move it since it\u0027s not an lvalue.",
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b09840cd_5b2dce8c",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 5
      },
      "lineNbr": 261,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-06-03T20:41:12Z",
      "side": 1,
      "message": "it returns a reference to the value inside. As I currently understand it, we should be moving out of it. We used to have a MoveValue, but as part of refactoring you and I decided to switch to std::move(foo.value()). \n\nLMK if I\u0027m remembering it incorrectly :).",
      "parentUuid": "b2e0d903_f6221f43",
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f490dfbf_e8c2cb11",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 5
      },
      "lineNbr": 269,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-02T19:43:51Z",
      "side": 1,
      "message": "Ditto with value().",
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52c1b5e9_c196fc34",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 5
      },
      "lineNbr": 269,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-06-03T01:29:05Z",
      "side": 1,
      "message": "I might be misunderstanding - because value() returns a non-const lvalue reference (through call to ErrorOr\u003c...\u003e\u0027s `ValueType\u0026 value() { return value_; }`), wouldn\u0027t this be appropriate here?",
      "parentUuid": "f490dfbf_e8c2cb11",
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9bef183f_ff912d9b",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 5
      },
      "lineNbr": 269,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-03T17:02:21Z",
      "side": 1,
      "message": "Ah, I didn\u0027t realize it was an lvalue reference.  It would be really convienent to be able to consume an ErrorOr value without writing std::move *every* *single* *time*.\n\nOption 1:  Add an rvalue reference overload: ValueType\u0026\u0026 value()\n\nThe question is whether the lvalue (copy) or rvalue (move) overload of value() is used when calling a function foo(ValueType v) as foo(bar.value())?  stackoverflow thinks that rvalues bind to rvalues over lvalues so it might work.\n\nOption 2:  Add a ValueType\u0026\u0026 Take() method to make ownership transfer explicit.  (The original design of ErrorOr had a function like this.  Was it removed?)\n\n(Note, we would want to do the same thing for error() too.)\n\nAnyway, this can be improved after landing this patch, but then we\u0027d need to go back and convert these uses of std::move(foo.value())...",
      "parentUuid": "52c1b5e9_c196fc34",
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5cd8e49_4caa4df0",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 5
      },
      "lineNbr": 269,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-06-03T17:12:46Z",
      "side": 1,
      "message": "\u003e Option 1:  Add an rvalue reference overload: ValueType\u0026\u0026 value()\n\nThis sounds good to me, as long as we add a bunch of documentation in ErrorOr about when the compiler picks which one. And Unit Tests to validate we are right.\n\n\n\u003e Option 2:  Add a ValueType\u0026\u0026 Take() method to make ownership transfer explicit.\n\nI actually find std::move(object.value()) to be much clearer than object.take_value() - the former uses the standard C++ syntax rather than something openscreen-specific.\nEspecially because we don\u0027t always need to move it - Recently, I\u0027ve started writing:\n\n\u003e auto\u0026 value \u003d value_or_error.value()\n\nwithout ever needing to invoke the move ctor, which I expect should be faster because a new object is never even constructed. WDYT?",
      "parentUuid": "9bef183f_ff912d9b",
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82c5d7aa_c64ac3ee",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 5
      },
      "lineNbr": 269,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-06-03T20:41:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "52c1b5e9_c196fc34",
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6d13c21_d12ded7f",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 5
      },
      "lineNbr": 293,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-02T19:43:51Z",
      "side": 1,
      "message": "Please use explicit type.",
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2dca70be_f51aa14f",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 5
      },
      "lineNbr": 293,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-06-03T20:41:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b6d13c21_d12ded7f",
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fac4b851_ced47fe5",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 5
      },
      "lineNbr": 295,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-02T19:43:51Z",
      "side": 1,
      "message": "It\u0027s not totally clear if the job of Parse is to return all possible dimensions, or if it also validates that it falls within some reasonable range of values.  Maybe add some comments to explain parsing vs. validation.",
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e429e0e_da48b8a9",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 5
      },
      "lineNbr": 295,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-06-03T20:41:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fac4b851_ced47fe5",
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "066a188c_0c4c884d",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 5
      },
      "lineNbr": 304,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-02T19:43:51Z",
      "side": 1,
      "message": "Why does aspectRatio parsing call two parsing functions?  Can they be combined?",
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e768df4_72a4bb28",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 5
      },
      "lineNbr": 304,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-06-03T20:41:12Z",
      "side": 1,
      "message": "Yeah, I\u0027ll combine them.",
      "parentUuid": "066a188c_0c4c884d",
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea34e06d_a999db17",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 5
      },
      "lineNbr": 332,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-02T19:43:51Z",
      "side": 1,
      "message": "The overall code would be simpler if this would always generate JSON, i.e. no error was possible.",
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12044310_cf76105e",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 5
      },
      "lineNbr": 332,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-06-03T20:41:12Z",
      "side": 1,
      "message": "Agreed. I\"m not really changing the ToJson methods significantly, I\u0027d be happy to discuss modifying the return value in a separate patch. This one is getting very large.",
      "parentUuid": "ea34e06d_a999db17",
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1cb665b3_f8f1fb35",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 5
      },
      "lineNbr": 334,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-02T19:43:51Z",
      "side": 1,
      "message": "When would this be false?",
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2e672b5_4f377f61",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 5
      },
      "lineNbr": 334,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-06-03T20:41:12Z",
      "side": 1,
      "message": "If the optional aspect ratio parameter is not passed. I would be in favor of making it mandatory in the spec, but the spec is currently *very* lenient about what fields are optional.",
      "parentUuid": "1cb665b3_f8f1fb35",
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2832ff87_be6bb0c4",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 5
      },
      "lineNbr": 418,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-02T19:43:51Z",
      "side": 1,
      "message": "Similar comments here.  If value() is returning by value, no need to move.  If it is returning an rvalue reference, also no need to move.",
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0139d036_d49e91de",
        "filename": "cast/streaming/answer_messages.cc",
        "patchSetId": 5
      },
      "lineNbr": 418,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-06-03T20:41:12Z",
      "side": 1,
      "message": "It\u0027s an lvalue reference, so neither of those.",
      "parentUuid": "2832ff87_be6bb0c4",
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e9434330_6179de27",
        "filename": "cast/streaming/answer_messages.h",
        "patchSetId": 5
      },
      "lineNbr": 28,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-06-03T01:29:05Z",
      "side": 1,
      "message": "Comments on methods, here and below",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 28,
        "endChar": 38
      },
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f522d1c_a3bf197a",
        "filename": "cast/streaming/answer_messages.h",
        "patchSetId": 5
      },
      "lineNbr": 73,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-02T19:43:51Z",
      "side": 1,
      "message": "Can you add comments on how this relates to AspectRatioConstraint?\nIn particular:\nWhat does kFixed mean if this is not 16:9?\nWhat does AspectRatio mean for kVariable (since frames are \"arbitrarily sized\")?",
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2102938_ffd308f4",
        "filename": "cast/streaming/answer_messages.h",
        "patchSetId": 5
      },
      "lineNbr": 74,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-02T19:43:51Z",
      "side": 1,
      "message": "Is this part of the public API for streaming?  (How do you currently identify the public API for the streaming module?)\n\nabsl:: names should be avoided in public APIs.",
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "782ce1d3_dd48b343",
        "filename": "cast/streaming/answer_messages.h",
        "patchSetId": 5
      },
      "lineNbr": 90,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-02T19:43:51Z",
      "side": 1,
      "message": "Avoid absl:: types in public APIs",
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e92b9cd6_4f5c5896",
        "filename": "cast/streaming/answer_messages.h",
        "patchSetId": 5
      },
      "lineNbr": 90,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-06-03T20:41:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "782ce1d3_dd48b343",
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b481160_a51edd54",
        "filename": "cast/streaming/answer_messages.h",
        "patchSetId": 5
      },
      "lineNbr": 105,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-02T19:43:51Z",
      "side": 1,
      "message": "Maybe this belongs in the receiver session, especially since it also requires CreateInvalidAnswer below.",
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c41730e_b52f04f7",
        "filename": "cast/streaming/answer_messages.h",
        "patchSetId": 5
      },
      "lineNbr": 105,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-06-03T20:41:12Z",
      "side": 1,
      "message": "Agreed. I\u0027ll leave this open and resolve in a separate patch. I just reordered them to be functions before properties.",
      "parentUuid": "9b481160_a51edd54",
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24c9c08d_288e048a",
        "filename": "cast/streaming/message_util.h",
        "patchSetId": 5
      },
      "lineNbr": 109,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-02T19:43:51Z",
      "side": 1,
      "message": "This looks like a copy, not construction.  Prefer push_back().\n\nRef: https://groups.google.com/a/chromium.org/d/msgid/blink-dev/CAAHOzFBxh70Q7vkZDA1OCmC2KA4c%2BiPjXPwMeO26XuWGAVJ0Fg%40mail.gmail.com?utm_medium\u003demail\u0026utm_source\u003dfooter",
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c789dabb_987de388",
        "filename": "cast/streaming/message_util.h",
        "patchSetId": 5
      },
      "lineNbr": 109,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-06-03T20:41:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "24c9c08d_288e048a",
      "revId": "cfdb884f83839393440d73f21d5ae732b6d56b90",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}