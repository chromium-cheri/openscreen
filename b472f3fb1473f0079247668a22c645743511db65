{
  "comments": [
    {
      "key": {
        "uuid": "d54d31d1_84a424dc",
        "filename": "api/public/message_demuxer.cc",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-04-18T03:06:30Z",
      "side": 1,
      "message": "Can be removed after removing std::cerr.",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ceff4e64_f33f6ced",
        "filename": "api/public/message_demuxer.cc",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-04-18T21:38:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d54d31d1_84a424dc",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee9bfc9b_578d29ee",
        "filename": "api/public/message_demuxer.cc",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-04-18T18:44:28Z",
      "side": 1,
      "message": "A reference to the relevant QUIC spec section would be nice here.",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "415490aa_f74304da",
        "filename": "api/public/message_demuxer.cc",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-04-18T21:38:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ee9bfc9b_578d29ee",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be351b2f_6509e0e0",
        "filename": "api/public/message_demuxer.cc",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-04-18T18:44:28Z",
      "side": 1,
      "message": "Seems like a separate DecodeVarInt function would be handy.  We\u0027ll need it for message size prefixing also.",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "184b3894_68e67544",
        "filename": "api/public/message_demuxer.cc",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-04-18T21:38:18Z",
      "side": 1,
      "message": "I\u0027m confused why we should break this out. It\u0027s only used in this function (the one in CodeGen.cc is too different to share code with), and this function is the one that does message size prefixing",
      "parentUuid": "be351b2f_6509e0e0",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4244de6e_8f7f6526",
        "filename": "api/public/message_demuxer.cc",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-04-18T22:42:38Z",
      "side": 1,
      "message": "I mean that in the spec we\u0027re supposed to have 2 varuints on the wire, one for the message type key and one for the message size.  If you look down to where this method is called, it doesn\u0027t read out 2 varuints, just 1.  We\u0027ll eventually need to read out a second one.  And at that point, we\u0027ll want this code to be usable for both.",
      "parentUuid": "184b3894_68e67544",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "411c6211_7ae2bf29",
        "filename": "api/public/message_demuxer.cc",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-04-19T17:05:51Z",
      "side": 1,
      "message": "Updated",
      "parentUuid": "4244de6e_8f7f6526",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dc3a021_4e855bff",
        "filename": "api/public/message_demuxer.cc",
        "patchSetId": 3
      },
      "lineNbr": 58,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-04-18T03:06:30Z",
      "side": 1,
      "message": "OSP_DVLOG?",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fc2bf32_ba657284",
        "filename": "api/public/message_demuxer.cc",
        "patchSetId": 3
      },
      "lineNbr": 58,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-04-18T21:38:18Z",
      "side": 1,
      "message": "Removed entirely. Forgot that I still had this in there :)",
      "parentUuid": "0dc3a021_4e855bff",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96a7734d_59fdff83",
        "filename": "api/public/message_demuxer.cc",
        "patchSetId": 3
      },
      "lineNbr": 238,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-04-18T03:06:30Z",
      "side": 1,
      "message": "In the future, we may need a way for errors to trigger an actual stream close, but for now we are just clearing the buffer.  Can you add buffer-\u003eclear() here?",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db9c3792_c84b95f9",
        "filename": "api/public/message_demuxer.cc",
        "patchSetId": 3
      },
      "lineNbr": 238,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-04-18T18:44:28Z",
      "side": 1,
      "message": "Should at least but a TODO here to propagate the error up.",
      "parentUuid": "96a7734d_59fdff83",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac13abdd_597ba880",
        "filename": "api/public/message_demuxer.cc",
        "patchSetId": 3
      },
      "lineNbr": 238,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-04-18T21:38:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "96a7734d_59fdff83",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a5d69a5_6c85c18c",
        "filename": "api/public/message_demuxer.cc",
        "patchSetId": 3
      },
      "lineNbr": 240,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-04-18T18:44:28Z",
      "side": 1,
      "message": "Perhaps msg_type_byte_length",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93bd7231_736f1892",
        "filename": "api/public/message_demuxer.cc",
        "patchSetId": 3
      },
      "lineNbr": 240,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-04-18T21:38:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0a5d69a5_6c85c18c",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e2f4ab3_bc665ace",
        "filename": "api/public/message_demuxer.cc",
        "patchSetId": 3
      },
      "lineNbr": 249,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-04-18T18:44:28Z",
      "side": 1,
      "message": "Do we already have a TODO to use something like rtc::Buffer: https://cs.chromium.org/chromium/src/third_party/webrtc/rtc_base/buffer.h?q\u003dbuffer+file:%5Esrc/third_party/webrtc/+package:%5Echromium$\u0026dr\u003dCSs\u0026l\u003d11\n\nIt\u0027s less error prone",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05383810_9bd8ae43",
        "filename": "api/public/message_demuxer.cc",
        "patchSetId": 3
      },
      "lineNbr": 249,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-04-18T20:12:26Z",
      "side": 1,
      "message": "Actually, I think we can use absl::Span. Then we can easily use subspan for things like this.",
      "parentUuid": "0e2f4ab3_bc665ace",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b513457_5838c303",
        "filename": "api/public/message_demuxer.cc",
        "patchSetId": 3
      },
      "lineNbr": 249,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-04-18T21:38:18Z",
      "side": 1,
      "message": "Adding a todo for this",
      "parentUuid": "05383810_9bd8ae43",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4793df14_40625adb",
        "filename": "api/public/message_demuxer.h",
        "patchSetId": 3
      },
      "lineNbr": 125,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-04-18T18:44:28Z",
      "side": 1,
      "message": "I think this would be better as something like:\n\nErrorOr\u003cmsgs::Type\u003e DecodeType(const std::vector\u003cuint8_t\u003e\u0026 buffer, size_t* bytes_to_skip)\n\n\nAnd then called as:\n\nsize_t bytes_to_skip;\nauto msg_type \u003d MessageTypeDecoder::DecodeType(buffer, \u0026bytes_to_skip);",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e34f85c2_f17f714a",
        "filename": "api/public/message_demuxer.h",
        "patchSetId": 3
      },
      "lineNbr": 125,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-04-18T20:12:26Z",
      "side": 1,
      "message": "Or better yet:\n\nErrorOr\u003cmsgs::Type\u003e ReadType(*absl::span)\n\n(The span can be replaced by a subspan in place that skips the bytes read.",
      "parentUuid": "4793df14_40625adb",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce53c0d9_1e449cf1",
        "filename": "api/public/message_demuxer.h",
        "patchSetId": 3
      },
      "lineNbr": 125,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-04-18T21:38:18Z",
      "side": 1,
      "message": "It seems like a larger change to replace the std::vector\u003cuint8_t\u003e buffer throughout this file with a span. For now, I\u0027ve updated to the former options",
      "parentUuid": "e34f85c2_f17f714a",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b35ec8d9_fe3f123f",
        "filename": "api/public/message_demuxer.h",
        "patchSetId": 3
      },
      "lineNbr": 125,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-04-18T23:03:21Z",
      "side": 1,
      "message": "Although we don\u0027t have an existing alternative like they do, WebRTC is recommending against using absl::span. https://webrtc.googlesource.com/src.git/+/refs/heads/master/abseil-in-webrtc.md",
      "parentUuid": "ce53c0d9_1e449cf1",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a2fb8f8_d5ac236b",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 3
      },
      "lineNbr": 855,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-04-18T18:44:28Z",
      "side": 1,
      "message": "I prefer to call them \"type key\"s like the spec does.  And the code below does to!  So, GetEncodedTypeKey.",
      "range": {
        "startLine": 855,
        "startChar": 12,
        "endLine": 855,
        "endChar": 28
      },
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc1994be_9e51c156",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 3
      },
      "lineNbr": 855,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-04-18T21:38:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0a2fb8f8_d5ac236b",
      "range": {
        "startLine": 855,
        "startChar": 12,
        "endLine": 855,
        "endChar": 28
      },
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a55d6fbb_2049bb3b",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 3
      },
      "lineNbr": 863,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-04-18T03:06:30Z",
      "side": 1,
      "message": "start_processing_byte",
      "range": {
        "startLine": 863,
        "startChar": 10,
        "endLine": 863,
        "endChar": 30
      },
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6aa30535_811b6a77",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 3
      },
      "lineNbr": 863,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-04-18T18:44:28Z",
      "side": 1,
      "message": "Seems like a separate EncodeVarUint function would be good.  We\u0027ll need it for message size prefixing also.",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4302990f_0a1925f2",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 3
      },
      "lineNbr": 863,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-04-18T21:38:18Z",
      "side": 1,
      "message": "I\u0027m confused why we should break this out. It\u0027s only used in this function (the one in message_demuxer.cc is too different to share code with), and this function is the one that does message size prefixing",
      "parentUuid": "6aa30535_811b6a77",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51c620b1_19080d51",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 3
      },
      "lineNbr": 863,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-04-18T21:38:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a55d6fbb_2049bb3b",
      "range": {
        "startLine": 863,
        "startChar": 10,
        "endLine": 863,
        "endChar": 30
      },
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5526266_e6490efe",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 3
      },
      "lineNbr": 863,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-04-18T22:42:38Z",
      "side": 1,
      "message": "Same as the response earlier: the spec has 2 varuints on the wire.",
      "parentUuid": "4302990f_0a1925f2",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0a3c0f4_51cc91d1",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 3
      },
      "lineNbr": 863,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-04-19T17:05:51Z",
      "side": 1,
      "message": "We will need to write a new function for encoding that varUint. This one is run at compile time (during code generation), but we don\u0027t have the packet size until runtime.",
      "parentUuid": "c5526266_e6490efe",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e6d9fe96_a71cd14c",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 3
      },
      "lineNbr": 873,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-04-18T03:06:30Z",
      "side": 1,
      "message": "62",
      "range": {
        "startLine": 873,
        "startChar": 40,
        "endLine": 873,
        "endChar": 42
      },
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd21d625_7ab482e8",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 3
      },
      "lineNbr": 873,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-04-18T21:38:18Z",
      "side": 1,
      "message": "Good catch!",
      "parentUuid": "e6d9fe96_a71cd14c",
      "range": {
        "startLine": 873,
        "startChar": 40,
        "endLine": 873,
        "endChar": 42
      },
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a704fb41_c5ace12a",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 3
      },
      "lineNbr": 884,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-04-18T03:06:30Z",
      "side": 1,
      "message": "Why are you casting this up to 64 bits?  Is the stream operator interpreting the uint8_t as a char?",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e55df0c0_231482c7",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 3
      },
      "lineNbr": 884,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-04-18T21:38:18Z",
      "side": 1,
      "message": "Yeah, it\u0027s being treated as a char which was causing the encoding to be incorrect. Updating to a uint32_t for better perf on 32 bit processors",
      "parentUuid": "a704fb41_c5ace12a",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a9940b9_712927c6",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 3
      },
      "lineNbr": 884,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-04-18T23:03:21Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e55df0c0_231482c7",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7e2bf5e3_bd258c79",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 3
      },
      "lineNbr": 971,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-04-18T03:06:30Z",
      "side": 1,
      "message": "if (encoded_id.empty()) return false;",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21a560a8_42d7daa5",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 3
      },
      "lineNbr": 971,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-04-18T21:38:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7e2bf5e3_bd258c79",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5a6c3f9_2470069a",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 3
      },
      "lineNbr": 1513,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-04-18T03:06:30Z",
      "side": 1,
      "message": "I think this can be removed now.",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "028d1dc4_7d10b4c6",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 3
      },
      "lineNbr": 1513,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-04-18T21:38:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a5a6c3f9_2470069a",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a58149c_250ca301",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 3
      },
      "lineNbr": 1536,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-04-18T03:06:30Z",
      "side": 1,
      "message": "nit: I wouldn\u0027t say this is doing any parsing, just checking the value is a valid enum member.  Maybe GetValidTypeEnumMember (since invalid ones map to kUnknown)?  I also don\u0027t think this needs to be wrapped in a class, so I don\u0027t have a suggestion on the class name.",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4703b596_ebf5dc96",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 3
      },
      "lineNbr": 1536,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-04-18T21:38:18Z",
      "side": 1,
      "message": "I prefer it to be in a class - based on discussions with Mark, this method will likely be refactored later in a way that will require a bunch of co-located methods, so a class will make organization easier for that refactoring\n\nrenamed to TypeEnumValidator::SafeCast",
      "parentUuid": "7a58149c_250ca301",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84cd1ae4_e283e800",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 3
      },
      "lineNbr": 1536,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-04-18T23:03:21Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4703b596_ebf5dc96",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "967c670a_35cf576a",
        "filename": "tools/cddl/parse.cc",
        "patchSetId": 3
      },
      "lineNbr": 285,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-04-18T18:44:28Z",
      "side": 1,
      "message": "Why don\u0027t we just parse it into a uint64 here?",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8155f30b_f7cd1602",
        "filename": "tools/cddl/parse.cc",
        "patchSetId": 3
      },
      "lineNbr": 285,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-04-18T21:38:18Z",
      "side": 1,
      "message": "That would go against the style used throughout the tool for all other parsing :) Currently, Parse.cc only chops up the input into strings,then sema.cc parses them into the correct numeric types",
      "parentUuid": "967c670a_35cf576a",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0c88d4f_d1479cdd",
        "filename": "tools/cddl/sema.cc",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-04-18T03:06:30Z",
      "side": 1,
      "message": "IMO this should be done with an iterator type so we don\u0027t recreate the vector every time we iterate.  I don\u0027t feel strongly about this at this point though.",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d361e570_6de96ed1",
        "filename": "tools/cddl/sema.cc",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-04-18T18:44:28Z",
      "side": 1,
      "message": "The types don\u0027t change right?\n\nSo why not just make a copy of types that have keys once and then read it every time?",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c4e95ba_6491148c",
        "filename": "tools/cddl/sema.cc",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-04-18T21:38:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d361e570_6de96ed1",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b31ba34_309a66a7",
        "filename": "tools/cddl/sema.cc",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-04-18T21:38:18Z",
      "side": 1,
      "message": "Updated it to be created only once, so it needs to be a vector now",
      "parentUuid": "e0c88d4f_d1479cdd",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85aec827_cad5124d",
        "filename": "tools/cddl/sema.cc",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-04-18T18:44:28Z",
      "side": 1,
      "message": "Isn\u0027t this whole thing a one-liner using std::copy_if or absl::c_copy_if?",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "437c644a_c46ba04f",
        "filename": "tools/cddl/sema.cc",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-04-18T21:38:18Z",
      "side": 1,
      "message": "I tried that originally. It doesn\u0027t work because unique pointers can\u0027t be copied",
      "parentUuid": "85aec827_cad5124d",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85378554_9e38fb1b",
        "filename": "tools/cddl/sema.cc",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-04-18T03:06:30Z",
      "side": 1,
      "message": "emplace_back(ptr.get())",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15acaa3f_eac03d99",
        "filename": "tools/cddl/sema.cc",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-04-18T21:38:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "85378554_9e38fb1b",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7443ac63_4ce5a897",
        "filename": "tools/cddl/sema.cc",
        "patchSetId": 3
      },
      "lineNbr": 369,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-04-18T18:44:28Z",
      "side": 1,
      "message": "It\u0027s only used once... so... I\u0027d suggest just using it in that one place.",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "848b747e_2d48e3cd",
        "filename": "tools/cddl/sema.cc",
        "patchSetId": 3
      },
      "lineNbr": 369,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-04-18T21:38:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7443ac63_4ce5a897",
      "revId": "b472f3fb1473f0079247668a22c645743511db65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}