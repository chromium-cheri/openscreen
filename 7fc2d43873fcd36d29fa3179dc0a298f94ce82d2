{
  "comments": [
    {
      "key": {
        "uuid": "6e69f692_7fd8aa21",
        "filename": "cast/common/mdns/mdns_receiver.cc",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-07-24T16:47:33Z",
      "side": 1,
      "message": "OSP_DCHECK(socket_) should be equivalent and shorter.",
      "revId": "7fc2d43873fcd36d29fa3179dc0a298f94ce82d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7df51437_cea44459",
        "filename": "cast/common/mdns/mdns_receiver.cc",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-07-25T22:26:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6e69f692_7fd8aa21",
      "revId": "7fc2d43873fcd36d29fa3179dc0a298f94ce82d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c6834c57_534713cf",
        "filename": "cast/common/mdns/mdns_receiver.cc",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-07-24T16:47:33Z",
      "side": 1,
      "message": "It\u0027s a little weird to return a generic error here (kNotRunning) versus an error directly from the network_runner_, as above in Start().  How hard would it be to update CancelRead() to return an Error?",
      "revId": "7fc2d43873fcd36d29fa3179dc0a298f94ce82d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54778c29_fff7d99e",
        "filename": "cast/common/mdns/mdns_receiver.cc",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-07-25T22:26:33Z",
      "side": 1,
      "message": "Not hard at all. Ryan fully supports converting this method to return an Error. Done",
      "parentUuid": "c6834c57_534713cf",
      "revId": "7fc2d43873fcd36d29fa3179dc0a298f94ce82d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ce55e36_f85aa9d1",
        "filename": "cast/common/mdns/mdns_receiver.cc",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-24T15:20:33Z",
      "side": 1,
      "message": "Would prefer an early return here.",
      "revId": "7fc2d43873fcd36d29fa3179dc0a298f94ce82d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c080579_a308bb7b",
        "filename": "cast/common/mdns/mdns_receiver.cc",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-07-25T22:26:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8ce55e36_f85aa9d1",
      "revId": "7fc2d43873fcd36d29fa3179dc0a298f94ce82d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7b8e5028_7fd9c3c5",
        "filename": "cast/common/mdns/mdns_receiver.cc",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-24T15:20:33Z",
      "side": 1,
      "message": "Might be more clear as:\n\nbool is_repsonse \u003d (message.flags() \u0026 kFlagResponse) !\u003d 0;\nif (is_response) {\n ... \n} else {\n ...\n}",
      "revId": "7fc2d43873fcd36d29fa3179dc0a298f94ce82d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "427fdffa_14ddb8f2",
        "filename": "cast/common/mdns/mdns_receiver.cc",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-07-25T22:26:33Z",
      "side": 1,
      "message": "Clean-up mentioned in TODO is my next PR after this, it takes care of the ugliness here\nThis will look like this:\n\nif (message.type() \u003d\u003d MessageType::Response) {\n} else {\n}",
      "parentUuid": "7b8e5028_7fd9c3c5",
      "revId": "7fc2d43873fcd36d29fa3179dc0a298f94ce82d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee361214_6423c9cf",
        "filename": "cast/common/mdns/mdns_receiver.h",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-24T15:20:33Z",
      "side": 1,
      "message": "We should probably comment on lifetimes.  I assume these all need to outlive MdnsReceiver, but it\u0027s good to document.",
      "revId": "7fc2d43873fcd36d29fa3179dc0a298f94ce82d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6859b87e_ed14ef2e",
        "filename": "cast/common/mdns/mdns_receiver.h",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-07-25T22:26:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ee361214_6423c9cf",
      "revId": "7fc2d43873fcd36d29fa3179dc0a298f94ce82d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "456abbe7_daf58580",
        "filename": "cast/common/mdns/mdns_receiver.h",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-24T15:20:33Z",
      "side": 1,
      "message": "It appears you can start/stop/start/stop.  Is that correct?  If so, we should document it.  If not, we should document it.  \n\nI\u0027d recommend considering only being allowed to Start/Stop once, which means having three states (init, started, stopped).",
      "revId": "7fc2d43873fcd36d29fa3179dc0a298f94ce82d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d043ef5_52226dba",
        "filename": "cast/common/mdns/mdns_receiver.h",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-07-24T16:47:33Z",
      "side": 1,
      "message": "- The OSP public API uses Start()/Stop() to change the state of network services, would prefer these names be consistent.\n\n- Are these synchronous or async operations?\n\n- Please add some behavior documentation including:\n\nWhat are the returned error codes\nStop() before starting\nStart() called twice in a row\nStop() called twice in a row",
      "revId": "7fc2d43873fcd36d29fa3179dc0a298f94ce82d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3eb2459_5a6442a1",
        "filename": "cast/common/mdns/mdns_receiver.h",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-07-25T22:26:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2d043ef5_52226dba",
      "revId": "7fc2d43873fcd36d29fa3179dc0a298f94ce82d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e8ed6b4_a08314fd",
        "filename": "cast/common/mdns/mdns_receiver.h",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-07-25T22:26:33Z",
      "side": 1,
      "message": "It definitely can work both ways, I don\u0027t see a reason to restrict it to a single time start-stop use right now. Adding comments.",
      "parentUuid": "456abbe7_daf58580",
      "revId": "7fc2d43873fcd36d29fa3179dc0a298f94ce82d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f61aee0d_34dfe9b9",
        "filename": "cast/common/mdns/mdns_receiver.h",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-24T15:20:33Z",
      "side": 1,
      "message": "Start() and Stop()?",
      "revId": "7fc2d43873fcd36d29fa3179dc0a298f94ce82d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c5eede9_5b79b923",
        "filename": "cast/common/mdns/mdns_receiver.h",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-07-25T22:26:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f61aee0d_34dfe9b9",
      "revId": "7fc2d43873fcd36d29fa3179dc0a298f94ce82d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "276cb7de_fd2756ef",
        "filename": "cast/common/mdns/mdns_receiver.h",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-07-24T16:47:33Z",
      "side": 1,
      "message": "Add a GetState() public method?  Or is this intentionally internal?",
      "revId": "7fc2d43873fcd36d29fa3179dc0a298f94ce82d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42b526ef_b21a223b",
        "filename": "cast/common/mdns/mdns_receiver.h",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-07-25T22:26:33Z",
      "side": 1,
      "message": "Intentionally internal to maintain the correct state of the receiver and stop on destruction if still running.",
      "parentUuid": "276cb7de_fd2756ef",
      "revId": "7fc2d43873fcd36d29fa3179dc0a298f94ce82d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4baf73e0_12c8e07f",
        "filename": "cast/common/mdns/mdns_receiver.h",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-24T16:33:31Z",
      "side": 1,
      "message": "sytle: need \u0027k\u0027 prefix\n\nhttps://google.github.io/styleguide/cppguide.html#Enumerator_Names",
      "revId": "7fc2d43873fcd36d29fa3179dc0a298f94ce82d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b26b46d2_12e493f1",
        "filename": "cast/common/mdns/mdns_receiver.h",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-07-25T22:26:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4baf73e0_12c8e07f",
      "revId": "7fc2d43873fcd36d29fa3179dc0a298f94ce82d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fef92196_c4fb4939",
        "filename": "cast/common/mdns/mdns_receiver.h",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-07-24T16:47:33Z",
      "side": 1,
      "message": "Prefer kRunning / kStopped for consistency with OSP APIs.",
      "revId": "7fc2d43873fcd36d29fa3179dc0a298f94ce82d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4b2eae5_f3e98567",
        "filename": "cast/common/mdns/mdns_receiver.h",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-07-25T22:26:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fef92196_c4fb4939",
      "revId": "7fc2d43873fcd36d29fa3179dc0a298f94ce82d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b407bff_f0b26e1d",
        "filename": "cast/common/mdns/mdns_receiver.h",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-07-24T16:47:33Z",
      "side": 1,
      "message": "Please declare pointers that don\u0027t change over the lifetime of |this| as *const.",
      "revId": "7fc2d43873fcd36d29fa3179dc0a298f94ce82d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8178fe1_8854e2e6",
        "filename": "cast/common/mdns/mdns_receiver.h",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-07-25T22:26:33Z",
      "side": 1,
      "message": "Done. Also made Receiver and Sender non-movable, since they are either going to be wrapped in a smart pointer or passed by a regular pointer.",
      "parentUuid": "1b407bff_f0b26e1d",
      "revId": "7fc2d43873fcd36d29fa3179dc0a298f94ce82d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "afad826e_18b4021c",
        "filename": "cast/common/mdns/mdns_receiver_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-07-24T16:47:33Z",
      "side": 1,
      "message": "It would be good to start putting useful mocks into testing/ folders alongside the APIs they are mocking.",
      "revId": "7fc2d43873fcd36d29fa3179dc0a298f94ce82d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e39b4153_05e07ead",
        "filename": "cast/common/mdns/mdns_receiver_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-07-25T22:26:33Z",
      "side": 1,
      "message": "We have fake_task_runner and we should add eventually a fake_network_runner too. This one, however, does not even implement the interface fully and is used to only check that the methods were called. I\u0027m adding a TODO to use fake_network_runner when available.",
      "parentUuid": "afad826e_18b4021c",
      "revId": "7fc2d43873fcd36d29fa3179dc0a298f94ce82d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}