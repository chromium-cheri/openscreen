{
  "comments": [
    {
      "key": {
        "uuid": "9bbcffdc_c8b02259",
        "filename": "discovery/dnssd/public/txt_record.cc",
        "patchSetId": 5
      },
      "lineNbr": 52,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-10-22T22:05:11Z",
      "side": 1,
      "message": "I don\u0027t think it\u0027s necessary to check flags collection here since the caller has explicitly asked for a non-boolean value. I would assume that service that fills out the TXT and consumer that reads it know what type of value they are interested in.",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 52,
        "endChar": 3
      },
      "revId": "02d7f6f2fdedc9667e7b52a26eaff5b58ecdf301",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "baec0173_6ca3675d",
        "filename": "discovery/dnssd/public/txt_record.cc",
        "patchSetId": 5
      },
      "lineNbr": 52,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-10-22T22:15:21Z",
      "side": 1,
      "message": "I am fine going either way with this. In similar places it is used (ClearValue, ClearFlag), I think it\u0027s more important - Otherwise if we call ClearValue(flag_name) we would return success without actually clearing the flag, which could be confusing\nThis method is the same for consistency\n\nShould we make the Get functions return NotFound as suggested and leave Clear*() as-is? Or change them all?\n\n@mfoltz, what are your thoughts?",
      "parentUuid": "9bbcffdc_c8b02259",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 52,
        "endChar": 3
      },
      "revId": "02d7f6f2fdedc9667e7b52a26eaff5b58ecdf301",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "178d4c58_7c31e50d",
        "filename": "discovery/dnssd/public/txt_record.cc",
        "patchSetId": 5
      },
      "lineNbr": 52,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-10-24T20:12:16Z",
      "side": 1,
      "message": "I think the API should make it clear that they need to call the correct Get and Set method, with the caveat that flag and value keys can\u0027t collide.  So basically +1 to what Max said.",
      "parentUuid": "baec0173_6ca3675d",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 52,
        "endChar": 3
      },
      "revId": "02d7f6f2fdedc9667e7b52a26eaff5b58ecdf301",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f88b59b5_04bd96d6",
        "filename": "discovery/dnssd/public/txt_record.h",
        "patchSetId": 5
      },
      "lineNbr": 27,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-10-24T19:19:24Z",
      "side": 1,
      "message": "key is changed from string_view to string because you\u0027re storing it?",
      "revId": "02d7f6f2fdedc9667e7b52a26eaff5b58ecdf301",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c84306c_a423d8a7",
        "filename": "discovery/dnssd/public/txt_record.h",
        "patchSetId": 5
      },
      "lineNbr": 27,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-10-24T21:49:19Z",
      "side": 1,
      "message": "If it\u0027s a string instead of a string_view only to use as a key, then declaring the map with absl::Hash\u003cabsl::string_view\u003e would let you use string_view here.",
      "parentUuid": "f88b59b5_04bd96d6",
      "revId": "02d7f6f2fdedc9667e7b52a26eaff5b58ecdf301",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30d3d1b1_80329497",
        "filename": "discovery/dnssd/public/txt_record.h",
        "patchSetId": 5
      },
      "lineNbr": 28,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-10-24T19:19:24Z",
      "side": 1,
      "message": "It\u0027s a little odd to see std:: and absl:: types in the same declaration, but I\u0027m sure we do it elsewhere.  I wonder if we should discuss some general guidance on when to use e.g. std::span vs absl::Span.",
      "revId": "02d7f6f2fdedc9667e7b52a26eaff5b58ecdf301",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dfc52595_eae3e2c8",
        "filename": "discovery/dnssd/public/txt_record.h",
        "patchSetId": 5
      },
      "lineNbr": 28,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-10-24T21:49:19Z",
      "side": 1,
      "message": "absl::Span is a drop-in for std::span, std::span is only available in C++20",
      "parentUuid": "30d3d1b1_80329497",
      "revId": "02d7f6f2fdedc9667e7b52a26eaff5b58ecdf301",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fcd2a7c5_8ae8ee56",
        "filename": "discovery/dnssd/public/txt_record.h",
        "patchSetId": 5
      },
      "lineNbr": 62,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-10-24T19:19:24Z",
      "side": 1,
      "message": "TXT will have small numbers of keys (it\u0027s a few-dozen-byte record, after all).\n\nReview the advice in https://osscs.corp.google.com/chromium/chromium/src/+/master:base/containers/README.md and choose containers that are efficient for this use case (using the absl equivalents where necessary).",
      "revId": "02d7f6f2fdedc9667e7b52a26eaff5b58ecdf301",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}