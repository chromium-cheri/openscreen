{
  "comments": [
    {
      "key": {
        "uuid": "47ae9c78_124b4cc9",
        "filename": "platform/impl/tls_connection_factory_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-09-10T05:03:14Z",
      "side": 1,
      "message": "Consider \n\nif (!SSL_connect(ssl.get())\n\nI think that\u0027s why they always return 1 on success, 0 on error.",
      "revId": "7e5cde8307bb7aa5ffe88941a2dfacc7cff459b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a61a4210_a118621f",
        "filename": "platform/impl/tls_connection_factory_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-09-10T16:58:52Z",
      "side": 1,
      "message": "That\u0027s not true for this one\n\nOn success, it returns one. Otherwise, it returns \u003c\u003d 0. The caller should pass the value into |SSL_get_error| to determine how to proceed. But since we don\u0027t support error codes for OnConnectionFailed callbacks, that part is dropped",
      "parentUuid": "47ae9c78_124b4cc9",
      "revId": "7e5cde8307bb7aa5ffe88941a2dfacc7cff459b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "93cdc47f_d3e23751",
        "filename": "platform/impl/tls_connection_factory_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-09-10T17:26:55Z",
      "side": 1,
      "message": "I love the inconsistency of OpenSSL methods...",
      "parentUuid": "a61a4210_a118621f",
      "revId": "7e5cde8307bb7aa5ffe88941a2dfacc7cff459b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01d9291e_4c78e615",
        "filename": "platform/impl/tls_connection_factory_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-09-10T05:03:14Z",
      "side": 1,
      "message": "We should clean up SSLContext and consider using it here, maybe in a separate patch. Or just delete it, I guess?\n\nhttps://chromium-review.googlesource.com/c/openscreen/+/1652805/2/platform/base/ssl_context.h",
      "revId": "7e5cde8307bb7aa5ffe88941a2dfacc7cff459b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47b2d0be_94ab3dc7",
        "filename": "platform/impl/tls_connection_factory_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-09-10T16:58:52Z",
      "side": 1,
      "message": "I\u0027m confused - I looked and on master, I can\u0027t find platform/base/ssl_context.h. Has it already been deleted?\n\nI am in favor of getting rid of it though (if that hasn\u0027t already happened) - there is an ongoing thread in the OSP chat about whether we should be wrapping BoringSSL objects or using them directly, and the chat seems to be leaning towards the latter",
      "parentUuid": "01d9291e_4c78e615",
      "revId": "7e5cde8307bb7aa5ffe88941a2dfacc7cff459b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea07ddd3_b46d0b2f",
        "filename": "platform/impl/tls_connection_factory_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-09-10T17:26:55Z",
      "side": 1,
      "message": "%s/platform\\/base/platform\\/impl/g.\n\nI\u0027ll put up a patch to delete it. I\u0027m fine with using BoringSSL objects directly, however we should keep an eye out for duplicate code. If we have complicated logic that ends up being the same in multiple places for instantiating a BoringSSL object, it makes sense to create an object that wraps it.",
      "parentUuid": "47b2d0be_94ab3dc7",
      "revId": "7e5cde8307bb7aa5ffe88941a2dfacc7cff459b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fdae51a_ec7d478c",
        "filename": "platform/impl/tls_connection_factory_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-09-10T05:03:14Z",
      "side": 1,
      "message": "Why reset over operator\u003d?",
      "revId": "7e5cde8307bb7aa5ffe88941a2dfacc7cff459b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b12b075d_d07eac49",
        "filename": "platform/impl/tls_connection_factory_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-09-10T16:58:52Z",
      "side": 1,
      "message": "Personal preference - reset doesn\u0027t need to create a new object\n\nUpdating to \u003d.",
      "parentUuid": "3fdae51a_ec7d478c",
      "revId": "7e5cde8307bb7aa5ffe88941a2dfacc7cff459b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "481745c2_38dfa07a",
        "filename": "platform/impl/tls_connection_factory_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-09-10T17:26:55Z",
      "side": 1,
      "message": "I did some reading up, that makes sense to me. Since the context is a local temporary, I would prefer reset() here then. Do we need to std::move the context so that the runtime knows to move it into the unique pointer?",
      "parentUuid": "b12b075d_d07eac49",
      "revId": "7e5cde8307bb7aa5ffe88941a2dfacc7cff459b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd280c53_10daef9a",
        "filename": "platform/impl/tls_connection_factory_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-09-10T20:04:40Z",
      "side": 1,
      "message": "It creates a new instance that needs to be freed with the SSL_CTX_free method. That\u0027s called from the bssl::UniquePtr though, so as long as we put it there we should be good\n\nChanging back to reset",
      "parentUuid": "481745c2_38dfa07a",
      "revId": "7e5cde8307bb7aa5ffe88941a2dfacc7cff459b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "534f2512_a52adac1",
        "filename": "platform/impl/tls_connection_factory_posix.h",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-09-10T05:03:14Z",
      "side": 1,
      "message": "it\u0027s just used for ssl_context_, right? Consider GUARDED_BY.",
      "revId": "7e5cde8307bb7aa5ffe88941a2dfacc7cff459b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42e2d50d_3735e27d",
        "filename": "platform/impl/tls_connection_factory_posix.h",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-09-10T16:58:52Z",
      "side": 1,
      "message": "My understanding is that GUARDED_BY is for acquiring the mutex for any access. We don\u0027t need that much locking, since SSL_CTX is thread safe - just on initial creation of the unique_ptr.\n\nThe rest of this method, which does use SSL_CTX, does not need the lock",
      "parentUuid": "534f2512_a52adac1",
      "revId": "7e5cde8307bb7aa5ffe88941a2dfacc7cff459b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "feb2d0fb_2b158f00",
        "filename": "platform/impl/tls_connection_factory_posix.h",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-09-10T17:26:55Z",
      "side": 1,
      "message": "Considering making a note of this on the mutex.",
      "parentUuid": "42e2d50d_3735e27d",
      "revId": "7e5cde8307bb7aa5ffe88941a2dfacc7cff459b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afa07626_0410258d",
        "filename": "platform/impl/tls_connection_factory_posix.h",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-09-10T20:04:40Z",
      "side": 1,
      "message": "Added comment.",
      "parentUuid": "feb2d0fb_2b158f00",
      "revId": "7e5cde8307bb7aa5ffe88941a2dfacc7cff459b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9393172a_ddaad121",
        "filename": "platform/impl/tls_connection_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-09-10T05:03:14Z",
      "side": 1,
      "message": "const?",
      "revId": "7e5cde8307bb7aa5ffe88941a2dfacc7cff459b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b09bcc7_95e25585",
        "filename": "platform/impl/tls_connection_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-09-10T16:58:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9393172a_ddaad121",
      "revId": "7e5cde8307bb7aa5ffe88941a2dfacc7cff459b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9f9b5dc_ca2a05d5",
        "filename": "platform/impl/tls_connection_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-09-10T05:03:14Z",
      "side": 1,
      "message": "const?",
      "revId": "7e5cde8307bb7aa5ffe88941a2dfacc7cff459b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f47f0ea_e95964a3",
        "filename": "platform/impl/tls_connection_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-09-10T16:58:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f9f9b5dc_ca2a05d5",
      "revId": "7e5cde8307bb7aa5ffe88941a2dfacc7cff459b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}