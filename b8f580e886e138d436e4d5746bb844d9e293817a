{
  "comments": [
    {
      "key": {
        "uuid": "c0ec8928_7cf35ae6",
        "filename": "platform/base/network_loop.h",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-05-02T19:16:42Z",
      "side": 1,
      "message": "This should probably also take in a NetworkLoop* so that it can remove itself from the read_callbacks_ if needed",
      "range": {
        "startLine": 18,
        "startChar": 15,
        "endLine": 18,
        "endChar": 25
      },
      "revId": "b8f580e886e138d436e4d5746bb844d9e293817a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10a71c2a_f57908c7",
        "filename": "platform/base/network_loop.h",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-05-02T20:29:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c0ec8928_7cf35ae6",
      "range": {
        "startLine": 18,
        "startChar": 15,
        "endLine": 18,
        "endChar": 25
      },
      "revId": "b8f580e886e138d436e4d5746bb844d9e293817a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "191a0548_ee4f8897",
        "filename": "platform/base/network_loop.h",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-05-02T16:56:01Z",
      "side": 1,
      "message": "nit: naming. Maybe NetworkSocketWatcher or NetworkSocketHandler, or something to that effect?",
      "range": {
        "startLine": 28,
        "startChar": 6,
        "endLine": 28,
        "endChar": 17
      },
      "revId": "b8f580e886e138d436e4d5746bb844d9e293817a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "064f5cdc_413706be",
        "filename": "platform/base/network_loop.h",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-05-02T20:29:11Z",
      "side": 1,
      "message": "I went with NetworkSocketWatcher.",
      "parentUuid": "191a0548_ee4f8897",
      "range": {
        "startLine": 28,
        "startChar": 6,
        "endLine": 28,
        "endChar": 17
      },
      "revId": "b8f580e886e138d436e4d5746bb844d9e293817a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2613e62c_0e5c928b",
        "filename": "platform/base/task_runner_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-05-02T17:05:20Z",
      "side": 1,
      "message": "Why is this in TaskRunnerImpl instead of TaskRunner base class?",
      "range": {
        "startLine": 29,
        "startChar": 8,
        "endLine": 29,
        "endChar": 19
      },
      "revId": "b8f580e886e138d436e4d5746bb844d9e293817a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f77d2ca_362c6368",
        "filename": "platform/base/task_runner_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-05-02T20:29:11Z",
      "side": 1,
      "message": "I feel this is actually only applicable to our TaskRunnerImpl because it\u0027s a way to control the event loop\u0027s sleep behavior.  For example, we wouldn\u0027t have control of this in the Chromium TaskRunner.  OTOH NetworkLoop is something we\u0027ll always implement to expose to the rest of the library.",
      "parentUuid": "2613e62c_0e5c928b",
      "range": {
        "startLine": 29,
        "startChar": 8,
        "endLine": 29,
        "endChar": 19
      },
      "revId": "b8f580e886e138d436e4d5746bb844d9e293817a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9450d169_4259a179",
        "filename": "platform/base/task_runner_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-05-02T21:52:00Z",
      "side": 1,
      "message": "I had been under the impression we would use the same NetworkWaiter class in Chromium since there EventWaiter is in TaskRunner base not impl, but looking back at the doc it seems that Chromium integration was never explicitly called out\n\nPlease add a section to the design doc, and we can discuss it further there - if the implementations are going to be so dramatically different between the two platforms, I think consideration between options merits further discussion before committing any code",
      "parentUuid": "3f77d2ca_362c6368",
      "range": {
        "startLine": 29,
        "startChar": 8,
        "endLine": 29,
        "endChar": 19
      },
      "revId": "b8f580e886e138d436e4d5746bb844d9e293817a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7f501cf_ab13bddd",
        "filename": "platform/base/task_runner_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-05-02T21:53:59Z",
      "side": 1,
      "message": "clarification since typing is hard: I had been under the impression we would use the same NetworkWaiter class in Chromium since in the design doc, EventWaiter is in TaskRunner base not impl,",
      "parentUuid": "9450d169_4259a179",
      "range": {
        "startLine": 29,
        "startChar": 8,
        "endLine": 29,
        "endChar": 19
      },
      "revId": "b8f580e886e138d436e4d5746bb844d9e293817a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3560744_1991b104",
        "filename": "platform/base/task_runner_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-05-03T00:54:27Z",
      "side": 1,
      "message": "I added a small section to the doc where we can discuss/clarify.  I don\u0027t feel it\u0027s a dramatic difference but LMK in the doc.",
      "parentUuid": "a7f501cf_ab13bddd",
      "range": {
        "startLine": 29,
        "startChar": 8,
        "endLine": 29,
        "endChar": 19
      },
      "revId": "b8f580e886e138d436e4d5746bb844d9e293817a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ea2f811_b3de46f1",
        "filename": "platform/base/task_runner_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-05-03T03:07:58Z",
      "side": 1,
      "message": "I don\u0027t feel that the code is dramatically different - just that with this approach we now need to maintain two entirely separate NetworkLoops instead of relying on a single one shared between the two approached. Since this is a core component, I worry it would open the way for more bugs and increased difficulty integrating with chromium\n\n(for instance, right now it just handled UDP - I assume the number of methods is going to double when we also need to support TCP, and perhaps more complexity will arise in the future. And with this approach every new requirement takes twice as much code, testing, etc)",
      "parentUuid": "e3560744_1991b104",
      "range": {
        "startLine": 29,
        "startChar": 8,
        "endLine": 29,
        "endChar": 19
      },
      "revId": "b8f580e886e138d436e4d5746bb844d9e293817a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "611ab5d6_a3764ae5",
        "filename": "platform/base/task_runner_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-05-03T21:56:55Z",
      "side": 1,
      "message": "I spent a lot of time today messing around with potential designs to maximize code reuse, and couldn\u0027t come up with one. I agree we should go with this approach if we continue down the path of option 2\n\nI still have concerns about having such dramatically different approaches on Chromium vs standalone vs any other platform we run on, but that\u0027s a separate thought for the Design Doc",
      "parentUuid": "2ea2f811_b3de46f1",
      "range": {
        "startLine": 29,
        "startChar": 8,
        "endLine": 29,
        "endChar": 19
      },
      "revId": "b8f580e886e138d436e4d5746bb844d9e293817a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "60ba8524_340ecb66",
        "filename": "platform/base/task_runner_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 128,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-05-02T17:08:30Z",
      "side": 1,
      "message": "Based on this design, it looks like the TaskRunner will contain the eventLoop (here) and the EventLoop will contain the TaskRunner (NetworkWaiter::SetTaskRunner(...)). Can we update this design to break the circular dependency?",
      "range": {
        "startLine": 128,
        "startChar": 0,
        "endLine": 128,
        "endChar": 35
      },
      "revId": "b8f580e886e138d436e4d5746bb844d9e293817a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56396fee_a3cd332c",
        "filename": "platform/base/task_runner_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 128,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-05-02T20:29:11Z",
      "side": 1,
      "message": "I don\u0027t think so.  The problem is that NetworkLoop always needs to know about a TaskRunner to control where the callbacks are run.  In our TaskRunnerImpl, the NetworkLoop implementation happens to be the same as the EventWaiter implementation.  Even if you broke up NetworkWaiter, I think you would just be elongating the cycle.  In Chromium, however, this wouldn\u0027t be a circular dependency; there would be no dependency from TaskRunner back to NetworkLoop.",
      "parentUuid": "60ba8524_340ecb66",
      "range": {
        "startLine": 128,
        "startChar": 0,
        "endLine": 128,
        "endChar": 35
      },
      "revId": "b8f580e886e138d436e4d5746bb844d9e293817a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f3a0625_8e4c531a",
        "filename": "platform/base/task_runner_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 128,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-05-02T21:52:00Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "56396fee_a3cd332c",
      "range": {
        "startLine": 128,
        "startChar": 0,
        "endLine": 128,
        "endChar": 35
      },
      "revId": "b8f580e886e138d436e4d5746bb844d9e293817a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}