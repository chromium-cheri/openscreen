{
  "comments": [
    {
      "key": {
        "uuid": "5246b439_7c5a7895",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-12-20T02:35:46Z",
      "side": 1,
      "message": "Why do you think we might get false negatives?  It\u0027s hard to tell without an implementation yet, but if a false negative here means we don\u0027t do conflict resolution, wouldn\u0027t it be possible for both sides to think they claimed the same name (especially if both sides are this impl) since no records are registered with the publisher until after probing?  Of course, this is moot without IsProbeQuery false negatives...",
      "revId": "4dd7f35503d5c8c12871f2c2941d61a9f33ab1f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7e274c2_40da3d83",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-12-20T17:13:56Z",
      "side": 1,
      "message": "Updating comment to be clearer. I didn\u0027t mean false negatives here\n\nI was referring to how our current implementation of IsProbeQuery is:\n\nbool MdnsProbeManager::IsProbeQuery(const MdnsMessage\u0026 message) const {\n  // TODO(rwkeane): Implement this method.\n  return false;\n}\n\nEven without a full implementation, we should not see any issues. So we can put off the full implementation as long as needed",
      "parentUuid": "5246b439_7c5a7895",
      "revId": "4dd7f35503d5c8c12871f2c2941d61a9f33ab1f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c64f156_296cc166",
        "filename": "discovery/mdns/mdns_probe_manager.h",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-12-19T22:36:19Z",
      "side": 1,
      "message": "This could be an instance method (as done here), a static method, or just update RespondToProbeQuery to return an error (and error if its not a probe query).\n\nMy preference is for one of the first 2 (for code readability) but I am open to any of them\n\nThoughts?",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 37,
        "endChar": 66
      },
      "revId": "4dd7f35503d5c8c12871f2c2941d61a9f33ab1f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f052b2f5_3b632eed",
        "filename": "discovery/mdns/mdns_probe_manager.h",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-12-20T02:35:46Z",
      "side": 1,
      "message": "I\u0027d prefer a static method since we don\u0027t need polymorphism.  It seems like the responder code would be weird if you just try every message in RespondToProbeQuery and check for an error.",
      "parentUuid": "0c64f156_296cc166",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 37,
        "endChar": 66
      },
      "revId": "4dd7f35503d5c8c12871f2c2941d61a9f33ab1f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75f4b9c1_0f59f631",
        "filename": "discovery/mdns/mdns_probe_manager.h",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-12-20T17:13:56Z",
      "side": 1,
      "message": "Done\n\nIMHO Leaving the static function as part of MdnsDomainOwnershipManager rather than a free static function (for readability) or part of MdnsProbeManager (to avoid other classes referencing MdnsProbeManager at all) seems cleanest. WDYT?",
      "parentUuid": "f052b2f5_3b632eed",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 37,
        "endChar": 66
      },
      "revId": "4dd7f35503d5c8c12871f2c2941d61a9f33ab1f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d6f7f90_9aaa17a8",
        "filename": "discovery/mdns/mdns_probe_manager.h",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-12-20T02:35:46Z",
      "side": 1,
      "message": "missing public",
      "revId": "4dd7f35503d5c8c12871f2c2941d61a9f33ab1f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27346fdd_bcf4d349",
        "filename": "discovery/mdns/mdns_probe_manager.h",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-12-20T17:13:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0d6f7f90_9aaa17a8",
      "revId": "4dd7f35503d5c8c12871f2c2941d61a9f33ab1f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24dd3562_de0ffd38",
        "filename": "discovery/mdns/mdns_publisher.cc",
        "patchSetId": 3
      },
      "lineNbr": 217,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-12-20T02:35:46Z",
      "side": 1,
      "message": "extra !",
      "revId": "4dd7f35503d5c8c12871f2c2941d61a9f33ab1f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "283d0d66_6ea3d0e0",
        "filename": "discovery/mdns/mdns_publisher.cc",
        "patchSetId": 3
      },
      "lineNbr": 217,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-12-20T17:13:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "24dd3562_de0ffd38",
      "revId": "4dd7f35503d5c8c12871f2c2941d61a9f33ab1f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}