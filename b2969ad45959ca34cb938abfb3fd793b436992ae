{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2087ed60_d52ad2f5",
        "filename": ".gitignore",
        "patchSetId": 6
      },
      "lineNbr": 11,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2020-11-10T06:21:44Z",
      "side": 1,
      "message": "Is this needed, if these files are supposed to go into out/\u003cbuilddir\u003e/gen/...?",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 9
      },
      "revId": "b2969ad45959ca34cb938abfb3fd793b436992ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "790a7504_ac11be5e",
        "filename": ".gitignore",
        "patchSetId": 6
      },
      "lineNbr": 11,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-11-10T18:37:54Z",
      "side": 1,
      "message": "Good point. NO it isn\u0027t.",
      "parentUuid": "2087ed60_d52ad2f5",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 9
      },
      "revId": "b2969ad45959ca34cb938abfb3fd793b436992ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "47dd197d_4fa97ff7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2020-11-10T06:21:44Z",
      "side": 1,
      "message": "Cool stuff! Glad StringPrintf() was useful here. ðŸ˜Š",
      "revId": "b2969ad45959ca34cb938abfb3fd793b436992ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "228c9a76_c587ee53",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-11-10T17:52:31Z",
      "side": 1,
      "message": "I had a few questions about the overall plan for integration with our library, and Chromium in general.",
      "revId": "b2969ad45959ca34cb938abfb3fd793b436992ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6866fe7c_3baf3bc9",
        "filename": "DEPS",
        "patchSetId": 6
      },
      "lineNbr": 123,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-11-10T17:52:31Z",
      "side": 1,
      "message": "Does this need to be in top-level DEPS?  Could it go into cast/DEPS if it is only used for cast?",
      "revId": "b2969ad45959ca34cb938abfb3fd793b436992ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "430a5523_305454d0",
        "filename": "DEPS",
        "patchSetId": 6
      },
      "lineNbr": 123,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-11-10T18:37:54Z",
      "side": 1,
      "message": "It could go into cast DEPS, but I think I prefer all third party deps being in the main one. Or we could move these to third_party/DEPS?",
      "parentUuid": "6866fe7c_3baf3bc9",
      "revId": "b2969ad45959ca34cb938abfb3fd793b436992ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b166efb_edbda88a",
        "filename": "DEPS",
        "patchSetId": 6
      },
      "lineNbr": 123,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-11-12T18:22:24Z",
      "side": 1,
      "message": "If a DEP is only used by a module (like cast) it should be defined by that module, so that the main DEPS isn\u0027t a dumping ground of various libraries with unclear ownership.    Since there\u0027s no need for JSON in either mDNS or OSP, it makes most sense to put it in //cast.",
      "parentUuid": "430a5523_305454d0",
      "revId": "b2969ad45959ca34cb938abfb3fd793b436992ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea6ca5fd_cedde249",
        "filename": "DEPS",
        "patchSetId": 6
      },
      "lineNbr": 123,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-11-12T22:15:25Z",
      "side": 1,
      "message": "Fair enough. I was following the pattern used in chrome, where all third party dependencies are in the root DEPS. Do we want to move openscreen out of the root Chrome DEPS, or is that a separate pattern?",
      "parentUuid": "1b166efb_edbda88a",
      "revId": "b2969ad45959ca34cb938abfb3fd793b436992ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb658726_8af78f89",
        "filename": "DEPS",
        "patchSetId": 6
      },
      "lineNbr": 123,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-11-25T06:30:32Z",
      "side": 1,
      "message": "Alright, I can\u0027t figure out a way to download deps in nested deps in gclient. I have it in the recursedeps list and it still doesn\u0027t work.\n\nI\u0027ll move back to the main DEPS, happy to revisit if you have pointers.\n\nWe should probably determine if we should just delete cast/third_party entirely, unless we want to specify cast/third_party in the root DEPS deps declarations.",
      "parentUuid": "ea6ca5fd_cedde249",
      "revId": "b2969ad45959ca34cb938abfb3fd793b436992ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0972576_8f7d7b73",
        "filename": "DEPS",
        "patchSetId": 6
      },
      "lineNbr": 125,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-11-10T17:52:31Z",
      "side": 1,
      "message": "I think we want to end up hosting a mirror on Chromium (/external/github.com/).",
      "revId": "b2969ad45959ca34cb938abfb3fd793b436992ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a627a143_b17a35e8",
        "filename": "DEPS",
        "patchSetId": 6
      },
      "lineNbr": 125,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-11-10T18:37:54Z",
      "side": 1,
      "message": "Agreed. I am working on this.",
      "parentUuid": "e0972576_8f7d7b73",
      "revId": "b2969ad45959ca34cb938abfb3fd793b436992ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be7708f3_85ac980e",
        "filename": "DEPS",
        "patchSetId": 6
      },
      "lineNbr": 126,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-11-10T17:52:31Z",
      "side": 1,
      "message": "I don\u0027t think embedders need to check this out, if validation is only happening as a presumbit check for Open Screen developers...",
      "revId": "b2969ad45959ca34cb938abfb3fd793b436992ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a6ddd6d_7327e4fb",
        "filename": "DEPS",
        "patchSetId": 6
      },
      "lineNbr": 126,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-11-10T18:37:54Z",
      "side": 1,
      "message": "I would like to use this in production. Working with the security people.",
      "parentUuid": "be7708f3_85ac980e",
      "revId": "b2969ad45959ca34cb938abfb3fd793b436992ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35aeeedb_6adf643b",
        "filename": "cast/protocol/castv2/validation.cc",
        "patchSetId": 6
      },
      "lineNbr": 19,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2020-11-10T06:21:44Z",
      "side": 1,
      "message": "Could the entire statement be placed in the included file? Then, all you need is a #include \"streaming_schema_data.h\" here (and no extra code comment nor anonymous namespace).\n\nAlso, note that the output of the script should be .h files, not .cc, since the C++ code is being included in other files.",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 19,
        "endChar": 56
      },
      "revId": "b2969ad45959ca34cb938abfb3fd793b436992ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "95808b0d_7bd217d5",
        "filename": "cast/protocol/castv2/validation.cc",
        "patchSetId": 6
      },
      "lineNbr": 19,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-11-10T18:37:54Z",
      "side": 1,
      "message": "Good point.",
      "parentUuid": "35aeeedb_6adf643b",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 19,
        "endChar": 56
      },
      "revId": "b2969ad45959ca34cb938abfb3fd793b436992ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e023c3a3_6c292759",
        "filename": "cast/streaming/BUILD.gn",
        "patchSetId": 6
      },
      "lineNbr": 73,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-11-10T17:52:31Z",
      "side": 1,
      "message": "Is the schema/message validation code necessary for the functionality of the streaming module?  I wonder if this should go into a test-only target.",
      "revId": "b2969ad45959ca34cb938abfb3fd793b436992ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a2443a76_2256400e",
        "filename": "cast/streaming/BUILD.gn",
        "patchSetId": 6
      },
      "lineNbr": 73,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-11-10T18:37:54Z",
      "side": 1,
      "message": "My ultimate goal is to replace some of the C++ production validation with valijson. It\u0027s not necessary yet but I would like it to be.",
      "parentUuid": "e023c3a3_6c292759",
      "revId": "b2969ad45959ca34cb938abfb3fd793b436992ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb0c119c_3ace22f3",
        "filename": "third_party/valijson/BUILD.gn",
        "patchSetId": 6
      },
      "lineNbr": 36,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2020-11-10T06:21:44Z",
      "side": 1,
      "message": "ccflags",
      "range": {
        "startLine": 36,
        "startChar": 4,
        "endLine": 36,
        "endChar": 10
      },
      "revId": "b2969ad45959ca34cb938abfb3fd793b436992ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "374100c7_b51f6f27",
        "filename": "third_party/valijson/BUILD.gn",
        "patchSetId": 6
      },
      "lineNbr": 36,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-11-10T18:37:54Z",
      "side": 1,
      "message": "actually don\u0027t need it anymore.",
      "parentUuid": "fb0c119c_3ace22f3",
      "range": {
        "startLine": 36,
        "startChar": 4,
        "endLine": 36,
        "endChar": 10
      },
      "revId": "b2969ad45959ca34cb938abfb3fd793b436992ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa19e0b1_71822e19",
        "filename": "tools/convert_to_data_file.py",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2020-11-10T06:21:44Z",
      "side": 1,
      "message": "Per prior comment (in validation.cc), I suggest `import re` and then here:\n\n  # Derive name of constant from output path.\n  #   Ex: /path/to/my_awesome_thing.ext --\u003e kMyAwesomeThing\n  konstant_name \u003d re.sub(\u0027[.].*$\u0027, \u0027\u0027, os.path.basename(output_path))\n  konstant_name \u003d \u0027k\u0027 + re.sub(\u0027[^A-Za-z]+\u0027, \u0027\u0027, konstant_name.title())\n\n  f.write(\"\"\"#pragma once\n    \n    namespace openscreen {{\n    namespace cast {{\n    \n    constexpr char {0}[] \u003d R\"({1})\";\n    \n    }}  // namespace cast\n    }}  // namespace openscreen\n    \"\"\".format(konstant_name, content))",
      "range": {
        "startLine": 28,
        "startChar": 8,
        "endLine": 28,
        "endChar": 46
      },
      "revId": "b2969ad45959ca34cb938abfb3fd793b436992ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "294a7910_40d0ae63",
        "filename": "tools/convert_to_data_file.py",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-11-10T18:37:54Z",
      "side": 1,
      "message": "ended up doing something similar, but don\u0027t need regex (even though I love them).",
      "parentUuid": "fa19e0b1_71822e19",
      "range": {
        "startLine": 28,
        "startChar": 8,
        "endLine": 28,
        "endChar": 46
      },
      "revId": "b2969ad45959ca34cb938abfb3fd793b436992ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34e816f6_39e8d57b",
        "filename": "util/BUILD.gn",
        "patchSetId": 6
      },
      "lineNbr": 83,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-11-10T17:52:31Z",
      "side": 1,
      "message": "If we want to share this infrastructure between Chrome and Open Screen, would it make more sense to check it into a shared repository?",
      "revId": "b2969ad45959ca34cb938abfb3fd793b436992ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85e9db4c_64a707e0",
        "filename": "util/BUILD.gn",
        "patchSetId": 6
      },
      "lineNbr": 83,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-11-10T18:37:54Z",
      "side": 1,
      "message": "Isn\u0027t Open Screen a shared repository? I\u0027m not sure what would be a better fit. I could put this in Chrome third_party eventually and have Open Screen clone it potentially as well?",
      "parentUuid": "34e816f6_39e8d57b",
      "revId": "b2969ad45959ca34cb938abfb3fd793b436992ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99d2276c_1007d560",
        "filename": "util/BUILD.gn",
        "patchSetId": 6
      },
      "lineNbr": 83,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-11-12T18:22:24Z",
      "side": 1,
      "message": "//util is part of the library implementation, not the public API.  I don\u0027t think JSON validation is a core API/feature we want the library to support in the long term.  Let\u0027s discuss the options here as part of a broader review.",
      "parentUuid": "85e9db4c_64a707e0",
      "revId": "b2969ad45959ca34cb938abfb3fd793b436992ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eeab46fc_dc9cf94e",
        "filename": "util/BUILD.gn",
        "patchSetId": 6
      },
      "lineNbr": 83,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-11-12T22:15:25Z",
      "side": 1,
      "message": "The code in util is pretty minimal and provides wrappers around using valijson directly. I\u0027m not sure it\u0027s complicated enough to warrant being in a separate shareable repository, especially since in Chrome we wouldn\u0027t want to use Error.\n\nAFAIK, all of the mirroring service JSON code will eventually live in libcast, so I don\u0027t think we need to expose these as part of our public API. Other consumers that want to use valijson can write their own wrappers, as they may or may not want to use JsonCpp.",
      "parentUuid": "99d2276c_1007d560",
      "revId": "b2969ad45959ca34cb938abfb3fd793b436992ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c9ef306_670bc13f",
        "filename": "util/json/json_validation.cc",
        "patchSetId": 6
      },
      "lineNbr": 26,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2020-11-10T06:21:44Z",
      "side": 1,
      "message": "IIRC, you can simplify this with for-each syntax (compiler will translate into code that calls begin() and end()):\n\n  for (const auto\u0026 result : results) {\n    ...\n  }",
      "range": {
        "startLine": 26,
        "startChar": 2,
        "endLine": 26,
        "endChar": 78
      },
      "revId": "b2969ad45959ca34cb938abfb3fd793b436992ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c9ba74af_3e5e1c19",
        "filename": "util/json/json_validation.cc",
        "patchSetId": 6
      },
      "lineNbr": 26,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-11-10T18:37:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2c9ef306_670bc13f",
      "range": {
        "startLine": 26,
        "startChar": 2,
        "endLine": 26,
        "endChar": 78
      },
      "revId": "b2969ad45959ca34cb938abfb3fd793b436992ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}