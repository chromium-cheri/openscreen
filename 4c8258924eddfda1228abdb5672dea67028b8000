{
  "comments": [
    {
      "key": {
        "uuid": "4bce8d50_e326494c",
        "filename": "cast/standalone_sender/ffmpeg_glue.h",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2020-03-06T20:27:49Z",
      "side": 1,
      "message": "Freer \u003d\u003e Deleter",
      "range": {
        "startLine": 40,
        "startChar": 15,
        "endLine": 40,
        "endChar": 21
      },
      "revId": "4c8258924eddfda1228abdb5672dea67028b8000",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "145a853c_2e991738",
        "filename": "cast/standalone_sender/ffmpeg_glue.h",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2020-03-06T20:27:49Z",
      "side": 1,
      "message": "obj here is coming from the text of the macro, since it\u0027s the same for all defined unique pointer here, why not pass a deleter function only and append \"(\u0026obj)\" in the macro?",
      "range": {
        "startLine": 58,
        "startChar": 43,
        "endLine": 58,
        "endChar": 46
      },
      "revId": "4c8258924eddfda1228abdb5672dea67028b8000",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35aebc71_eb362d5a",
        "filename": "cast/standalone_sender/simulated_capturer.cc",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2020-03-06T20:27:49Z",
      "side": 1,
      "message": "Does an early return here and below mean the created object is in an invalid state?",
      "range": {
        "startLine": 44,
        "startChar": 4,
        "endLine": 44,
        "endChar": 11
      },
      "revId": "4c8258924eddfda1228abdb5672dea67028b8000",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e1b37fb_a62b50ab",
        "filename": "cast/standalone_sender/simulated_capturer.cc",
        "patchSetId": 2
      },
      "lineNbr": 157,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2020-03-06T20:27:49Z",
      "side": 1,
      "message": "can EAGAIN happen repeatedly in an infinite loop?",
      "range": {
        "startLine": 157,
        "startChar": 6,
        "endLine": 157,
        "endChar": 27
      },
      "revId": "4c8258924eddfda1228abdb5672dea67028b8000",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5cc06e79_49aac074",
        "filename": "cast/standalone_sender/simulated_capturer.h",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2020-03-06T20:27:49Z",
      "side": 1,
      "message": "Just OnEndOfFile?",
      "range": {
        "startLine": 34,
        "startChar": 17,
        "endLine": 34,
        "endChar": 35
      },
      "revId": "4c8258924eddfda1228abdb5672dea67028b8000",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51cf659e_9c343e47",
        "filename": "cast/standalone_sender/simulated_capturer.h",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2020-03-06T20:27:49Z",
      "side": 1,
      "message": "maybe ApplyDecoderContextParameters?",
      "range": {
        "startLine": 54,
        "startChar": 15,
        "endLine": 54,
        "endChar": 47
      },
      "revId": "4c8258924eddfda1228abdb5672dea67028b8000",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}