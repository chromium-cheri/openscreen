{
  "comments": [
    {
      "key": {
        "uuid": "81406543_da49752c",
        "filename": "DEPS",
        "patchSetId": 4
      },
      "lineNbr": 97,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-02-06T18:27:28Z",
      "side": 1,
      "message": "Whose repository is this?",
      "revId": "3554dc3fa5164ca9b40151bced6ffbc0ff4bd56d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e99ad624_4b670d22",
        "filename": "DEPS",
        "patchSetId": 4
      },
      "lineNbr": 97,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-02-06T21:02:22Z",
      "side": 1,
      "message": "I don\u0027t really have any background for them. If we don\u0027t want to consume this for that reason, I would be happy to move to a different parser, or fork it on GitHub/in Chromium mirroring so we don\u0027t depend on it.",
      "parentUuid": "81406543_da49752c",
      "revId": "3554dc3fa5164ca9b40151bced6ffbc0ff4bd56d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4791c2bf_1461db32",
        "filename": "DEPS",
        "patchSetId": 4
      },
      "lineNbr": 97,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-02-06T23:01:23Z",
      "side": 1,
      "message": "We shouldn\u0027t rely on random repositories in Github, without some assessment of who is behind them and who can commit to them. Third party code can become a vector for security vulnerabilities.",
      "parentUuid": "e99ad624_4b670d22",
      "revId": "3554dc3fa5164ca9b40151bced6ffbc0ff4bd56d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "756c5319_27162374",
        "filename": "DEPS",
        "patchSetId": 4
      },
      "lineNbr": 97,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-02-08T00:55:02Z",
      "side": 1,
      "message": "I think the options forward are:\n- Research who owns this repo, determine if we trust all the committers and the license terms are compatible\n- Fork its code into our repo if the license allows\n- Switch to using getopt_long\n\nThe last is likely the path of least resistance...",
      "parentUuid": "4791c2bf_1461db32",
      "revId": "3554dc3fa5164ca9b40151bced6ffbc0ff4bd56d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3cdfb8a6_1b893f66",
        "filename": "cast/standalone_receiver/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2020-02-06T02:04:23Z",
      "side": 1,
      "message": "Just to make sure there\u0027s never a #include pathing issue, we should probably have a deps entry here on cxxopts.\n\nSo, we\u0027ll need a BUILD.gn file for cxxopts that lists its source files.",
      "range": {
        "startLine": 24,
        "startChar": 4,
        "endLine": 24,
        "endChar": 5
      },
      "revId": "3554dc3fa5164ca9b40151bced6ffbc0ff4bd56d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6770bc54_1efb4312",
        "filename": "cast/standalone_receiver/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-02-06T21:02:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3cdfb8a6_1b893f66",
      "range": {
        "startLine": 24,
        "startChar": 4,
        "endLine": 24,
        "endChar": 5
      },
      "revId": "3554dc3fa5164ca9b40151bced6ffbc0ff4bd56d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d5773779_ba089acc",
        "filename": "cast/standalone_receiver/main.cc",
        "patchSetId": 4
      },
      "lineNbr": 151,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-02-06T18:27:28Z",
      "side": 1,
      "message": "Does this class need to exist?",
      "revId": "3554dc3fa5164ca9b40151bced6ffbc0ff4bd56d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6441346d_7bf15521",
        "filename": "cast/standalone_receiver/main.cc",
        "patchSetId": 4
      },
      "lineNbr": 151,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-02-06T21:02:22Z",
      "side": 1,
      "message": "Yes, unless we expose a PlatformClientPosix::Create that exposes the task runner. Maybe a good follow up task?",
      "parentUuid": "d5773779_ba089acc",
      "revId": "3554dc3fa5164ca9b40151bced6ffbc0ff4bd56d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5072c793_1131c448",
        "filename": "cast/standalone_receiver/main.cc",
        "patchSetId": 4
      },
      "lineNbr": 151,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-02-06T23:01:23Z",
      "side": 1,
      "message": "PlatformClientPosix::GetTaskRunner() exists. That\u0027s why the class is oddly named.",
      "parentUuid": "6441346d_7bf15521",
      "revId": "3554dc3fa5164ca9b40151bced6ffbc0ff4bd56d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ec50f05_db644953",
        "filename": "cast/standalone_receiver/main.cc",
        "patchSetId": 4
      },
      "lineNbr": 151,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2020-02-06T23:24:09Z",
      "side": 1,
      "message": "This is the solution to the problem where PlatformClientPosix does not allow the main thread of the process to \"become\" the TaskRunner loop. The base class always creates a separate thread for the TaskRunner for some reason which, IMHO, is not how it should have been designed...\n\nre naming: Probably PlatformClientWithInjectedTaskRunner would be more accurate?",
      "parentUuid": "5072c793_1131c448",
      "revId": "3554dc3fa5164ca9b40151bced6ffbc0ff4bd56d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ece31d3_18667185",
        "filename": "cast/standalone_receiver/main.cc",
        "patchSetId": 4
      },
      "lineNbr": 151,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-02-07T00:20:16Z",
      "side": 1,
      "message": "Yeah, there\u0027s room for improvement, but not worth fixing here and now. I filed https://crbug.com/openscreen/108 if we want to drop a TODO here.",
      "parentUuid": "8ec50f05_db644953",
      "revId": "3554dc3fa5164ca9b40151bced6ffbc0ff4bd56d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "852842ba_8d1000f4",
        "filename": "cast/standalone_receiver/main.cc",
        "patchSetId": 4
      },
      "lineNbr": 159,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-02-06T18:27:28Z",
      "side": 1,
      "message": "I guess to call this protected method?",
      "revId": "3554dc3fa5164ca9b40151bced6ffbc0ff4bd56d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6945ef2_1145d726",
        "filename": "cast/standalone_receiver/main.cc",
        "patchSetId": 4
      },
      "lineNbr": 159,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-02-06T21:02:22Z",
      "side": 1,
      "message": "It\u0027s to set the TaskRunner, since PlatformClientPosix::Create doesn\u0027t expose it.",
      "parentUuid": "852842ba_8d1000f4",
      "revId": "3554dc3fa5164ca9b40151bced6ffbc0ff4bd56d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f6c3637_6c585e12",
        "filename": "cast/standalone_receiver/main.cc",
        "patchSetId": 4
      },
      "lineNbr": 159,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-02-06T23:01:23Z",
      "side": 1,
      "message": "I think there\u0027s an easier way, but not something to fix in this patch.",
      "parentUuid": "c6945ef2_1145d726",
      "revId": "3554dc3fa5164ca9b40151bced6ffbc0ff4bd56d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "12ca49cf_d3fcc430",
        "filename": "cast/standalone_receiver/main.cc",
        "patchSetId": 4
      },
      "lineNbr": 166,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-02-06T18:27:28Z",
      "side": 1,
      "message": "s/Libcast/Cast Streaming/",
      "revId": "3554dc3fa5164ca9b40151bced6ffbc0ff4bd56d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ba13606_c08fa5ab",
        "filename": "cast/standalone_receiver/main.cc",
        "patchSetId": 4
      },
      "lineNbr": 166,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-02-06T21:02:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "12ca49cf_d3fcc430",
      "revId": "3554dc3fa5164ca9b40151bced6ffbc0ff4bd56d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07f59b21_e02f0bb0",
        "filename": "cast/standalone_receiver/main.cc",
        "patchSetId": 4
      },
      "lineNbr": 167,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-02-06T18:27:28Z",
      "side": 1,
      "message": "s/libcast API/Cast Streaming Receiver/",
      "revId": "3554dc3fa5164ca9b40151bced6ffbc0ff4bd56d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b56bca3_cf52f0b8",
        "filename": "cast/standalone_receiver/main.cc",
        "patchSetId": 4
      },
      "lineNbr": 167,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-02-06T21:02:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "07f59b21_e02f0bb0",
      "revId": "3554dc3fa5164ca9b40151bced6ffbc0ff4bd56d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "41d961de_cb902684",
        "filename": "cast/standalone_receiver/main.cc",
        "patchSetId": 4
      },
      "lineNbr": 168,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-02-06T18:27:28Z",
      "side": 1,
      "message": "I assume this is just an address (not a port)?\n\nIt would be more flexible to say \"IP Address used for listening\", since it could be used for TCP or UDP.",
      "revId": "3554dc3fa5164ca9b40151bced6ffbc0ff4bd56d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "188470e8_09143631",
        "filename": "cast/standalone_receiver/main.cc",
        "patchSetId": 4
      },
      "lineNbr": 168,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-02-06T21:02:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "41d961de_cb902684",
      "revId": "3554dc3fa5164ca9b40151bced6ffbc0ff4bd56d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e787135_9333f387",
        "filename": "cast/standalone_receiver/main.cc",
        "patchSetId": 4
      },
      "lineNbr": 174,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-02-06T18:27:28Z",
      "side": 1,
      "message": "Please use descriptive variable names.",
      "revId": "3554dc3fa5164ca9b40151bced6ffbc0ff4bd56d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "337cc5e0_6602c458",
        "filename": "cast/standalone_receiver/main.cc",
        "patchSetId": 4
      },
      "lineNbr": 174,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-02-06T21:02:22Z",
      "side": 1,
      "message": "Can do. I generally follow the rule larger scope -\u003e longer variable name, shorter function name.",
      "parentUuid": "9e787135_9333f387",
      "revId": "3554dc3fa5164ca9b40151bced6ffbc0ff4bd56d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4c726f75_75b14c5f",
        "filename": "cast/standalone_receiver/main.cc",
        "patchSetId": 4
      },
      "lineNbr": 177,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-02-06T18:27:28Z",
      "side": 1,
      "message": "Nit: IP",
      "revId": "3554dc3fa5164ca9b40151bced6ffbc0ff4bd56d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80f9228d_940475e8",
        "filename": "cast/standalone_receiver/main.cc",
        "patchSetId": 4
      },
      "lineNbr": 177,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-02-06T21:02:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4c726f75_75b14c5f",
      "revId": "3554dc3fa5164ca9b40151bced6ffbc0ff4bd56d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e13d5af_a4388309",
        "filename": "cast/standalone_receiver/main.cc",
        "patchSetId": 4
      },
      "lineNbr": 189,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-02-06T18:27:28Z",
      "side": 1,
      "message": "What happens when a null address is passed?",
      "revId": "3554dc3fa5164ca9b40151bced6ffbc0ff4bd56d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f5f2b94_fafbbef0",
        "filename": "cast/standalone_receiver/main.cc",
        "patchSetId": 4
      },
      "lineNbr": 189,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-02-06T21:02:22Z",
      "side": 1,
      "message": "Address is never null. If it\u0027s empty, e.g. 0.0.0.0, we bind on all available address (what the current behavior is).",
      "parentUuid": "4e13d5af_a4388309",
      "revId": "3554dc3fa5164ca9b40151bced6ffbc0ff4bd56d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}