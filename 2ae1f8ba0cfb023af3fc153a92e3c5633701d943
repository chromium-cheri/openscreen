{
  "comments": [
    {
      "key": {
        "uuid": "4d925882_abffcb9b",
        "filename": "cast/common/mdns/mdns_reader.h",
        "patchSetId": 5
      },
      "lineNbr": 30,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-06-14T19:24:05Z",
      "side": 1,
      "message": "Please document how this is different from the other reader methods (it figures out the type of the record).",
      "revId": "2ae1f8ba0cfb023af3fc153a92e3c5633701d943",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "303042ac_269c799f",
        "filename": "cast/common/mdns/mdns_reader.h",
        "patchSetId": 5
      },
      "lineNbr": 30,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-06-14T20:39:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4d925882_abffcb9b",
      "revId": "2ae1f8ba0cfb023af3fc153a92e3c5633701d943",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b949d820_457ed169",
        "filename": "cast/common/mdns/mdns_records.cc",
        "patchSetId": 5
      },
      "lineNbr": 77,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-06-14T19:24:05Z",
      "side": 1,
      "message": "What does it mean to pass a pair of pointers into the std::vector ctor?  I am not familiar with this syntax.",
      "revId": "2ae1f8ba0cfb023af3fc153a92e3c5633701d943",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "833a63e6_dbc36a7c",
        "filename": "cast/common/mdns/mdns_records.cc",
        "patchSetId": 5
      },
      "lineNbr": 77,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-06-14T20:39:05Z",
      "side": 1,
      "message": "Pointers are treated as begin and end iterators here. I changed RawRecordRdata constructor to accept begin and size instead of begin and end, to make it more clear what\u0027s going on.",
      "parentUuid": "b949d820_457ed169",
      "revId": "2ae1f8ba0cfb023af3fc153a92e3c5633701d943",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "42e3a72a_6cff689b",
        "filename": "cast/common/mdns/mdns_records.cc",
        "patchSetId": 5
      },
      "lineNbr": 77,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-06-17T18:20:09Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "833a63e6_dbc36a7c",
      "revId": "2ae1f8ba0cfb023af3fc153a92e3c5633701d943",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2b25352_cd149571",
        "filename": "cast/common/mdns/mdns_records.cc",
        "patchSetId": 5
      },
      "lineNbr": 184,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-06-14T19:24:05Z",
      "side": 1,
      "message": "Is this already enforced in the ctor of absl::variant for Rdata?  Otherwise what is absl::variant doing for us?",
      "revId": "2ae1f8ba0cfb023af3fc153a92e3c5633701d943",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e446ffc0_3a5d5043",
        "filename": "cast/common/mdns/mdns_records.cc",
        "patchSetId": 5
      },
      "lineNbr": 184,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-06-14T20:39:05Z",
      "side": 1,
      "message": "We have a type_ field in mDNS record that can hold all possible types of DNS RDATA. However, we only have 5 supported RDATA types, while the rest are considered RawRecordRdata. This check here ensures that the type_ field indeed matches the C++ type in Rdata.\nI think we can make this a DCHECK though, since reader looks at the type field and puts the right type into Rdata.",
      "parentUuid": "b2b25352_cd149571",
      "revId": "2ae1f8ba0cfb023af3fc153a92e3c5633701d943",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aecb7ace_a8398e9e",
        "filename": "cast/common/mdns/mdns_records.cc",
        "patchSetId": 5
      },
      "lineNbr": 184,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-06-17T18:20:09Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e446ffc0_3a5d5043",
      "revId": "2ae1f8ba0cfb023af3fc153a92e3c5633701d943",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3dbe866d_f7ce4db9",
        "filename": "cast/common/mdns/mdns_records.cc",
        "patchSetId": 5
      },
      "lineNbr": 194,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-06-14T19:24:05Z",
      "side": 1,
      "message": "I would say so, since those two records have different representations and different meanings.  We can use \u003d\u003d to deduplicate records, and if callers have other requirements they can write their own comparison logic.",
      "revId": "2ae1f8ba0cfb023af3fc153a92e3c5633701d943",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "813f98ed_f22735fe",
        "filename": "cast/common/mdns/mdns_records.cc",
        "patchSetId": 5
      },
      "lineNbr": 194,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-06-14T20:39:05Z",
      "side": 1,
      "message": "I agree, removed TODO here",
      "parentUuid": "3dbe866d_f7ce4db9",
      "revId": "2ae1f8ba0cfb023af3fc153a92e3c5633701d943",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c45b091_12d30047",
        "filename": "cast/common/mdns/mdns_records.cc",
        "patchSetId": 5
      },
      "lineNbr": 194,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-06-17T18:20:09Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "813f98ed_f22735fe",
      "revId": "2ae1f8ba0cfb023af3fc153a92e3c5633701d943",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48341076_a4d61798",
        "filename": "cast/common/mdns/mdns_records.h",
        "patchSetId": 5
      },
      "lineNbr": 264,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-06-14T19:24:05Z",
      "side": 1,
      "message": "What does it mean for a default-constructed Rdata?  Which type in the discriminated union is it?",
      "revId": "2ae1f8ba0cfb023af3fc153a92e3c5633701d943",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f3dc493_8a2f6ff7",
        "filename": "cast/common/mdns/mdns_records.h",
        "patchSetId": 5
      },
      "lineNbr": 264,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-06-14T20:39:05Z",
      "side": 1,
      "message": "From spec: a default-constructed variant holds a value of its first alternative, unless that alternative is not default-constructible (in which case the variant is not default-constructible either)\nAdded a comment.",
      "parentUuid": "48341076_a4d61798",
      "revId": "2ae1f8ba0cfb023af3fc153a92e3c5633701d943",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ac7323a5_62a33433",
        "filename": "cast/common/mdns/mdns_records_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 372,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-06-14T19:24:05Z",
      "side": 1,
      "message": "trailing whitespace",
      "revId": "2ae1f8ba0cfb023af3fc153a92e3c5633701d943",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "097ec697_08ea0f02",
        "filename": "cast/common/mdns/mdns_records_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 372,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-06-14T20:39:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ac7323a5_62a33433",
      "revId": "2ae1f8ba0cfb023af3fc153a92e3c5633701d943",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "212e94c7_63ca7f5b",
        "filename": "cast/common/mdns/mdns_writer.cc",
        "patchSetId": 5
      },
      "lineNbr": 233,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-06-14T19:24:05Z",
      "side": 1,
      "message": "Nit: explicit for one-arg ctor",
      "revId": "2ae1f8ba0cfb023af3fc153a92e3c5633701d943",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf658c3c_2e863534",
        "filename": "cast/common/mdns/mdns_writer.cc",
        "patchSetId": 5
      },
      "lineNbr": 233,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-06-14T20:39:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "212e94c7_63ca7f5b",
      "revId": "2ae1f8ba0cfb023af3fc153a92e3c5633701d943",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3f52b22_6deeed31",
        "filename": "cast/common/mdns/mdns_writer.cc",
        "patchSetId": 5
      },
      "lineNbr": 254,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-06-14T19:24:05Z",
      "side": 1,
      "message": "This doesn\u0027t need to be initialized since you have ctor initialization.",
      "revId": "2ae1f8ba0cfb023af3fc153a92e3c5633701d943",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7652bec_b60a2b20",
        "filename": "cast/common/mdns/mdns_writer.cc",
        "patchSetId": 5
      },
      "lineNbr": 254,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-06-14T20:39:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e3f52b22_6deeed31",
      "revId": "2ae1f8ba0cfb023af3fc153a92e3c5633701d943",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e1fdbd4_b3cd4e0f",
        "filename": "cast/common/mdns/mdns_writer.h",
        "patchSetId": 5
      },
      "lineNbr": 33,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-06-14T19:24:05Z",
      "side": 1,
      "message": "Please document that this is a generic writer over record types.",
      "revId": "2ae1f8ba0cfb023af3fc153a92e3c5633701d943",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1cc28915_478a9727",
        "filename": "cast/common/mdns/mdns_writer.h",
        "patchSetId": 5
      },
      "lineNbr": 33,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-06-14T20:39:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3e1fdbd4_b3cd4e0f",
      "revId": "2ae1f8ba0cfb023af3fc153a92e3c5633701d943",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}