{
  "comments": [
    {
      "key": {
        "uuid": "ac1490b4_9afd1da7",
        "filename": "platform/impl/tls_connection_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2020-03-04T19:57:40Z",
      "side": 0,
      "message": "Can bytes_available and bytes_read be different?",
      "range": {
        "startLine": 75,
        "startChar": 12,
        "endLine": 75,
        "endChar": 27
      },
      "revId": "9931e7a88ec31d7ffe83d829d00ddae55ea109d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9726a002_b5036966",
        "filename": "platform/impl/tls_connection_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-03-04T20:20:02Z",
      "side": 0,
      "message": "Yes. We are using the non-blocking read, so we will read up to |byes_available| total bytes. If we used the blocking version, we would always get exactly |bytes_available|",
      "parentUuid": "ac1490b4_9afd1da7",
      "range": {
        "startLine": 75,
        "startChar": 12,
        "endLine": 75,
        "endChar": 27
      },
      "revId": "9931e7a88ec31d7ffe83d829d00ddae55ea109d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31801127_cc10b8bb",
        "filename": "platform/impl/tls_connection_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-03-04T21:35:21Z",
      "side": 0,
      "message": "Additionally, the number of bits available to read can be less than SSL_PENDING - since this includes the header and other non-read-related bits, if I remember correctly. See below comment",
      "parentUuid": "9726a002_b5036966",
      "range": {
        "startLine": 75,
        "startChar": 12,
        "endLine": 75,
        "endChar": 27
      },
      "revId": "9931e7a88ec31d7ffe83d829d00ddae55ea109d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc3b761d_b79a1ffd",
        "filename": "platform/impl/tls_connection_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2020-03-11T01:55:03Z",
      "side": 0,
      "message": "\u003e ... since this includes the header and other non-read-related bits...\n\nFrom the man page: \"SSL_pending() returns the number of buffered and processed application data bytes\".",
      "parentUuid": "31801127_cc10b8bb",
      "range": {
        "startLine": 75,
        "startChar": 12,
        "endLine": 75,
        "endChar": 27
      },
      "revId": "9931e7a88ec31d7ffe83d829d00ddae55ea109d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24918bf9_ef4eff9f",
        "filename": "platform/impl/tls_connection_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-03-04T20:20:02Z",
      "side": 0,
      "message": "I seem to remember that this was here as a performance improvement - checking SSL_pending() is much cheaper than SSL_read(). Why remove it?",
      "range": {
        "startLine": 76,
        "startChar": 0,
        "endLine": 79,
        "endChar": 66
      },
      "revId": "9931e7a88ec31d7ffe83d829d00ddae55ea109d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36e5ea0e_58b06345",
        "filename": "platform/impl/tls_connection_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2020-03-11T01:55:03Z",
      "side": 0,
      "message": "Because SSL_pending doesn\u0027t read anything so this never works.  SSL_pending only checks whether data is _already_ buffered and available.  Its comment in ssl.h explicitly says \"It does not read from the transport\".  Also, since we\u0027re using non-blocking sockets and just reading in a fixed-time loop, polling doesn\u0027t seem expensive.\n\nI guess we could say \"check SSL_pending and if \u003e 0, only try to read that amount, otherwise try to read a default block size\", but I\u0027m not sure that\u0027s much of a positive.",
      "parentUuid": "24918bf9_ef4eff9f",
      "range": {
        "startLine": 76,
        "startChar": 0,
        "endLine": 79,
        "endChar": 66
      },
      "revId": "9931e7a88ec31d7ffe83d829d00ddae55ea109d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff73d552_f0ce7658",
        "filename": "platform/impl/tls_connection_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-03-11T16:58:05Z",
      "side": 0,
      "message": "Ack",
      "parentUuid": "36e5ea0e_58b06345",
      "range": {
        "startLine": 76,
        "startChar": 0,
        "endLine": 79,
        "endChar": 66
      },
      "revId": "9931e7a88ec31d7ffe83d829d00ddae55ea109d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}