{
  "comments": [
    {
      "key": {
        "uuid": "1c280863_c968dd05",
        "filename": "api/impl/presentation/presentation_connection.cc",
        "patchSetId": 2
      },
      "lineNbr": 220,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-03-18T21:00:17Z",
      "side": 1,
      "message": "I changed the name from info to get_presentation_info because @pthatcher specifically requested that. Can you check with him if we actually want to undo that feedback?\n\nSee: https://chromium-review.googlesource.com/c/openscreen/+/1412264/1/api/impl/presentation/presentation_connection.cc#21",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2104c041_b4cd9e67",
        "filename": "api/impl/presentation/presentation_connection.cc",
        "patchSetId": 2
      },
      "lineNbr": 220,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-03-19T19:57:55Z",
      "side": 1,
      "message": "Or perhaps just presentation_info().  \"connection-\u003einfo()\" does sound like info about the connection, not the presentation.  And \"get_\" isn\u0027t really needed.",
      "parentUuid": "1c280863_c968dd05",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2147061_02b35990",
        "filename": "api/impl/presentation/presentation_connection.cc",
        "patchSetId": 2
      },
      "lineNbr": 220,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-19T23:00:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2104c041_b4cd9e67",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dda77325_940a2151",
        "filename": "api/impl/presentation/presentation_controller.cc",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-03-19T19:57:55Z",
      "side": 1,
      "message": "It seems like the controller should be the first argument rather than the last.",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "834feb74_576111bf",
        "filename": "api/impl/presentation/presentation_controller.cc",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-19T23:00:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dda77325_940a2151",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "343949df_c9ef8e32",
        "filename": "api/impl/presentation/presentation_controller.cc",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-03-19T19:57:55Z",
      "side": 1,
      "message": "I think calling it \"controller_\" instead of \"parent_\" might make it more clear what it is.  Or parent_controller_ if you want to be verbose.",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "858ecd97_0e77a9b7",
        "filename": "api/impl/presentation/presentation_controller.cc",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-19T23:00:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "343949df_c9ef8e32",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d4ba21a7_e2a51927",
        "filename": "api/impl/presentation/presentation_controller.cc",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-03-14T21:51:47Z",
      "side": 1,
      "message": "Can this (and swap() below) go in an anonymous namespace?",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0bf720f_45a8f2af",
        "filename": "api/impl/presentation/presentation_controller.cc",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-03-18T21:00:17Z",
      "side": 1,
      "message": "We own ReceiverWatch, why not just expose a swap method on that, that takes an other param?",
      "parentUuid": "d4ba21a7_e2a51927",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "327a7bd2_dc718c69",
        "filename": "api/impl/presentation/presentation_controller.cc",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-19T23:00:10Z",
      "side": 1,
      "message": "It shouldn\u0027t go in an anonymous namespace.\n\nThis is a free friend function because of: transitive copy-swap idiom + ADL.",
      "parentUuid": "c0bf720f_45a8f2af",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a13d44aa_602e7aee",
        "filename": "api/impl/presentation/presentation_controller.cc",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-03-14T21:51:47Z",
      "side": 1,
      "message": "Slightly prefer using optional for request_id_ (is 0 a valid request_id)?",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1148aad4_7baef624",
        "filename": "api/impl/presentation/presentation_controller.cc",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-03-19T19:57:55Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "a13d44aa_602e7aee",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19d4ebb5_f7fe9e2f",
        "filename": "api/impl/presentation/presentation_controller.cc",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-19T23:00:10Z",
      "side": 1,
      "message": "0 doesn\u0027t need to be valid, but done.",
      "parentUuid": "1148aad4_7baef624",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f2bdabd1_76c860bd",
        "filename": "api/impl/presentation/presentation_controller.cc",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-03-07T00:49:07Z",
      "side": 1,
      "message": "wouldn\u0027t this modify other, which could have unintended consequences? same comment where swap is used throughout this file",
      "range": {
        "startLine": 72,
        "startChar": 2,
        "endLine": 72,
        "endChar": 21
      },
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6028b634_db3d0ab0",
        "filename": "api/impl/presentation/presentation_controller.cc",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-07T06:29:25Z",
      "side": 1,
      "message": "This is the copy(/move)-swap idiom.  This avoids duplication between ctor, operator\u003d, and potentially a swap method (especially for other classes using the same idiom).  The original operand is first move-constructed by \"swapping\" with an empty object above, then the result is swapped here, and finally the original LHS is destroyed because |other| is actually a local.",
      "parentUuid": "f2bdabd1_76c860bd",
      "range": {
        "startLine": 72,
        "startChar": 2,
        "endLine": 72,
        "endChar": 21
      },
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8068a090_2675ace8",
        "filename": "api/impl/presentation/presentation_controller.cc",
        "patchSetId": 2
      },
      "lineNbr": 78,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-03-18T21:00:17Z",
      "side": 1,
      "message": "Same here, can we just put this on the ConnectRequest class?",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc4b988b_873d1131",
        "filename": "api/impl/presentation/presentation_controller.cc",
        "patchSetId": 2
      },
      "lineNbr": 78,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-19T23:00:10Z",
      "side": 1,
      "message": "Same response as above.",
      "parentUuid": "8068a090_2675ace8",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "375237dc_7dc28b46",
        "filename": "api/impl/presentation/presentation_controller.cc",
        "patchSetId": 2
      },
      "lineNbr": 84,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-03-19T19:57:55Z",
      "side": 1,
      "message": "Are we going to expect users to create/clone a clock for the controller?  Seems like a place where a raw pointer should be fine.",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b1faf7f_861bd7d5",
        "filename": "api/impl/presentation/presentation_controller.cc",
        "patchSetId": 2
      },
      "lineNbr": 84,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-19T23:00:10Z",
      "side": 1,
      "message": "Since it needs to outlive Controller but a clock is also a somewhat global concept, I guess I could go either way.  Done.",
      "parentUuid": "375237dc_7dc28b46",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8aad416e_be424bb5",
        "filename": "api/impl/presentation/presentation_controller.cc",
        "patchSetId": 2
      },
      "lineNbr": 90,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-03-14T21:51:47Z",
      "side": 1,
      "message": "TODO: Replace service_id with endpoint_id",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ee27806_f8f02b32",
        "filename": "api/impl/presentation/presentation_controller.cc",
        "patchSetId": 2
      },
      "lineNbr": 90,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-19T23:00:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8aad416e_be424bb5",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e6438a40_a2c6d4a3",
        "filename": "api/impl/presentation/presentation_controller.cc",
        "patchSetId": 2
      },
      "lineNbr": 95,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-03-14T21:51:47Z",
      "side": 1,
      "message": "ISTM that monitoring the list of endpoints/receivers to send availability requests could be the job of the UrlAvailabilityRequester - since it already manages the ReceiverObserver\u0027s passed through this API.",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "627b1dfe_15d3bd2a",
        "filename": "api/impl/presentation/presentation_controller.cc",
        "patchSetId": 2
      },
      "lineNbr": 95,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-19T23:00:10Z",
      "side": 1,
      "message": "The controller is additionally keeping track of the service_id-to-endpoint map.  Although they could register as observers independently now that multiple are supported in the ServiceListener, I think this hierarchy still makes sense.  WDYT?",
      "parentUuid": "e6438a40_a2c6d4a3",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0153e84d_c0e31010",
        "filename": "api/impl/presentation/presentation_controller.cc",
        "patchSetId": 2
      },
      "lineNbr": 95,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-03-20T22:02:06Z",
      "side": 1,
      "message": "I guess so.  However, in the long run, I don\u0027t think the PresentationController should be keeping track of this mapping.  It does need to know which endpoints are available to send availability requests to, but it just needs a ProtocolConnection for the endpoint to send those requests.  I can try to explain the layering I have in mind separately.",
      "parentUuid": "627b1dfe_15d3bd2a",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14939a99_caf5e9c3",
        "filename": "api/impl/presentation/presentation_controller.cc",
        "patchSetId": 2
      },
      "lineNbr": 95,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-21T22:46:56Z",
      "side": 1,
      "message": "I think I see what you\u0027re saying.  In the long run, other protocols need the same information so this should really be tracked elsewhere.  I\u0027ll leave this with a TODO until we figure out a concrete plan for that.",
      "parentUuid": "0153e84d_c0e31010",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e78b1f3_78e2ea16",
        "filename": "api/impl/presentation/presentation_controller.cc",
        "patchSetId": 2
      },
      "lineNbr": 144,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-03-19T19:57:55Z",
      "side": 1,
      "message": "Am I allowed to ask for {}s?",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d9e582f_c2d11677",
        "filename": "api/impl/presentation/presentation_controller.cc",
        "patchSetId": 2
      },
      "lineNbr": 144,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-19T23:00:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9e78b1f3_78e2ea16",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "61182481_d3e6182d",
        "filename": "api/impl/presentation/presentation_controller.cc",
        "patchSetId": 2
      },
      "lineNbr": 165,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-03-14T21:51:47Z",
      "side": 1,
      "message": "We should generate a UUID seeded with a secure random value.  There is code for this in Chromium I bet; I looked for the specific code to allocate media capture devices from getUserMedia, but couldn\u0027t find the code that generates a token to pass to the renderer conveying device permission.\n\nI can look some more if it\u0027s not obvious.",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d136d75_f53de04b",
        "filename": "api/impl/presentation/presentation_controller.cc",
        "patchSetId": 2
      },
      "lineNbr": 165,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-03-19T19:57:55Z",
      "side": 1,
      "message": "But that should be a TODO for now, since it\u0027s OSP_UNIMPLEMENTED, right?",
      "parentUuid": "61182481_d3e6182d",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94906c74_063c65a6",
        "filename": "api/impl/presentation/presentation_controller.cc",
        "patchSetId": 2
      },
      "lineNbr": 165,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-19T23:00:10Z",
      "side": 1,
      "message": "Yes, leaving as a TODO for now.",
      "parentUuid": "1d136d75_f53de04b",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c66b111_4bf34449",
        "filename": "api/impl/presentation/presentation_controller.cc",
        "patchSetId": 2
      },
      "lineNbr": 169,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-03-14T21:51:47Z",
      "side": 1,
      "message": "I think this will be fixed by another in-progress patch?",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e661eb74_46ceee96",
        "filename": "api/impl/presentation/presentation_controller.cc",
        "patchSetId": 2
      },
      "lineNbr": 169,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-19T23:00:10Z",
      "side": 1,
      "message": "I don\u0027t think so, which patch were you thinking of?",
      "parentUuid": "0c66b111_4bf34449",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6ecafcb_cf42126f",
        "filename": "api/impl/presentation/presentation_controller.cc",
        "patchSetId": 2
      },
      "lineNbr": 169,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-03-20T22:02:06Z",
      "side": 1,
      "message": "This one? https://chromium-review.googlesource.com/c/openscreen/+/1495225",
      "parentUuid": "e661eb74_46ceee96",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "001239cd_ff31c7bb",
        "filename": "api/impl/presentation/presentation_controller.cc",
        "patchSetId": 2
      },
      "lineNbr": 169,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-21T22:46:56Z",
      "side": 1,
      "message": "Oh yes, of course.  I already forgot about that CL apparently.  I\u0027ll remove this when I rebase that patch.",
      "parentUuid": "d6ecafcb_cf42126f",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a8eb7ca_64aa8500",
        "filename": "api/impl/presentation/presentation_controller_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-03-15T23:16:28Z",
      "side": 1,
      "message": "nit: constexpr",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "969b6871_b20e0591",
        "filename": "api/impl/presentation/presentation_controller_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-19T23:00:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8a8eb7ca_64aa8500",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d7c5833_ecc3cce1",
        "filename": "api/impl/presentation/presentation_controller_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-03-18T21:00:17Z",
      "side": 1,
      "message": "I\u0027d vote for doing that in this patch, instead of adding yet another implementation (making it like 7 now?). Even if you just leave the other classes that implement it alone with a TODO.",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aece34f3_bf30fdad",
        "filename": "api/impl/presentation/presentation_controller_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-19T23:00:10Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "3d7c5833_ecc3cce1",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a5c3b73_af95d842",
        "filename": "api/impl/presentation/presentation_controller_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-03-15T23:16:28Z",
      "side": 1,
      "message": "Would it be possible to factor out some of the setup code shared between ReceiverAvailableFirstWatch and ReceiverAlreadyAvailableBeforeWatch?",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2de80b07_c614cf72",
        "filename": "api/impl/presentation/presentation_controller_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-19T23:00:10Z",
      "side": 1,
      "message": "Merged them per comment below.",
      "parentUuid": "5a5c3b73_af95d842",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "529c0892_3b256be7",
        "filename": "api/impl/presentation/presentation_controller_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 209,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-03-15T23:16:28Z",
      "side": 1,
      "message": "Won\u0027t OnReceiverAvailable also be called on mock_receiver_observer_, since they are both watching kTestUrl?",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da461109_f4908ced",
        "filename": "api/impl/presentation/presentation_controller_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 209,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-19T23:00:10Z",
      "side": 1,
      "message": "Yes, this was just breaking it into two test cases.  In retrospect, I think that\u0027s just weird/confusing so I merged them back into one (only these 4 lines really differed).",
      "parentUuid": "529c0892_3b256be7",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11a99b7c_e8edf153",
        "filename": "api/impl/presentation/presentation_controller_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 214,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-03-15T23:16:28Z",
      "side": 1,
      "message": "Can you add test expectations for what happens when a ReceiverWatch is canceled?",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6041f571_7084c69c",
        "filename": "api/impl/presentation/presentation_controller_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 214,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-19T23:00:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "11a99b7c_e8edf153",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dca84d95_bb02cbbc",
        "filename": "api/impl/quic/quic_connection_factory_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-03-07T00:49:07Z",
      "side": 1,
      "message": "delegate ^ server_delegate_",
      "range": {
        "startLine": 97,
        "startChar": 0,
        "endLine": 98,
        "endChar": 45
      },
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff7162f7_317aacc0",
        "filename": "api/impl/quic/quic_connection_factory_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-07T06:29:25Z",
      "side": 1,
      "message": "There\u0027s no logical XOR, but this could be (!delegate !\u003d !server_delegate_).",
      "parentUuid": "dca84d95_bb02cbbc",
      "range": {
        "startLine": 97,
        "startChar": 0,
        "endLine": 98,
        "endChar": 45
      },
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3934594_882f2210",
        "filename": "api/impl/quic/quic_connection_factory_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-03-19T19:57:55Z",
      "side": 1,
      "message": "Could just make a function xor(a, b).  \n\nBut I actually prefer the expanded version for readability.",
      "parentUuid": "ff7162f7_317aacc0",
      "range": {
        "startLine": 97,
        "startChar": 0,
        "endLine": 98,
        "endChar": 45
      },
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "47292840_1557b1fc",
        "filename": "api/impl/service_listener_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 64,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-03-19T19:57:55Z",
      "side": 1,
      "message": "Why is an empty check needed before a for loop?  If it\u0027s empty, the loop won\u0027t do anything.",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 64,
        "endChar": 26
      },
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cbb3909a_171b483f",
        "filename": "api/impl/service_listener_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 64,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-19T23:00:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "47292840_1557b1fc",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 64,
        "endChar": 26
      },
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be67f916_ee59f265",
        "filename": "api/impl/service_listener_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-03-19T19:57:55Z",
      "side": 1,
      "message": "Same here, and below",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 71,
        "endChar": 48
      },
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a7ecc31_17a20f69",
        "filename": "api/impl/service_listener_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-19T23:00:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "be67f916_ee59f265",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 71,
        "endChar": 48
      },
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "807fe642_921497da",
        "filename": "api/impl/service_listener_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-03-19T19:57:55Z",
      "side": 1,
      "message": "And can I still ask for {}s?  :)",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 73,
        "endChar": 40
      },
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b743c0e_ddd0af8c",
        "filename": "api/impl/service_listener_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-19T23:00:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "807fe642_921497da",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 73,
        "endChar": 40
      },
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7127a163_9c7a000c",
        "filename": "api/impl/service_listener_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 153,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-03-14T21:51:47Z",
      "side": 1,
      "message": "TODO: Write a simple ObserverList implementation in base/; it\u0027s worth it because we can check that the list is empty on destruction (check_empty \u003d true in Chromium\u0027s base::ObserverList).",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95906f6e_0f3a15a8",
        "filename": "api/impl/service_listener_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 153,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-19T23:00:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7127a163_9c7a000c",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dedb813f_8ef2ad3c",
        "filename": "api/impl/service_listener_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-03-07T00:49:07Z",
      "side": 1,
      "message": "comment doesn\u0027t explain the \u0027Maybe\u0027 in method name",
      "range": {
        "startLine": 72,
        "startChar": 1,
        "endLine": 73,
        "endChar": 47
      },
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa0f2b07_40312237",
        "filename": "api/impl/service_listener_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-07T06:29:25Z",
      "side": 1,
      "message": "The \"if\" explains the \"maybe\".  For example, the observer doesn\u0027t need to fire if the state is kStarting.",
      "parentUuid": "dedb813f_8ef2ad3c",
      "range": {
        "startLine": 72,
        "startChar": 1,
        "endLine": 73,
        "endChar": 47
      },
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87788f21_cf555666",
        "filename": "api/impl/service_listener_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-03-14T21:51:47Z",
      "side": 1,
      "message": "We might just change this to always fire with the new state.  See https://crbug.com/openscreen/6.  I would be in favor of that in general.",
      "parentUuid": "aa0f2b07_40312237",
      "range": {
        "startLine": 72,
        "startChar": 1,
        "endLine": 73,
        "endChar": 47
      },
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b600f9f_ca8585bc",
        "filename": "api/public/presentation/presentation_controller.h",
        "patchSetId": 2
      },
      "lineNbr": 65,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-03-18T21:00:17Z",
      "side": 1,
      "message": "I mentioned this elsewhere, but why not make this a method on the class instead of a friend method? I don\u0027t understand what we gain from this.",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a00c9863_7dce4396",
        "filename": "api/public/presentation/presentation_controller.h",
        "patchSetId": 2
      },
      "lineNbr": 65,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-19T23:00:10Z",
      "side": 1,
      "message": "See: https://en.cppreference.com/w/cpp/language/adl and copy-swap idiom",
      "parentUuid": "1b600f9f_ca8585bc",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a1c0f9e6_1ef94b77",
        "filename": "api/public/presentation/presentation_controller.h",
        "patchSetId": 2
      },
      "lineNbr": 143,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-03-19T19:57:55Z",
      "side": 1,
      "message": "I think we should document that \"not found\" is returned by \"\".",
      "range": {
        "startLine": 142,
        "startChar": 44,
        "endLine": 143,
        "endChar": 0
      },
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5014eb33_fc469ce5",
        "filename": "api/public/presentation/presentation_controller.h",
        "patchSetId": 2
      },
      "lineNbr": 143,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-19T23:00:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a1c0f9e6_1ef94b77",
      "range": {
        "startLine": 142,
        "startChar": 44,
        "endLine": 143,
        "endChar": 0
      },
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3feebb71_08946bf9",
        "filename": "demo/demo.cc",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-03-18T21:00:17Z",
      "side": 1,
      "message": "Can you move this code to a separate helper method? It\u0027s duplicated three times here.\n\nAlso, the logic you have for checking that a character is printable is unclear, most people don\u0027t know that space and tilde represent the ends of the range. We have helpful methods that can do this for us instead, such as std::isprint or absl::ascii_isprint.\n\n\n E.g.\n\n    std::string SanitizeServiceId(absl::string_view unsafe_service_id) {\n        std::string safe_service_id(unsafe_service_id);\n\n        for (auto\u0026 c : safe_service_id) {\n            if (!std::isprint(c))\n              c \u003d \u0027.\u0027;\n        }\n\n        return safe_service_id;\n    }",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "217fb87e_3cf9ca6f",
        "filename": "demo/demo.cc",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-03-19T19:57:55Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "3feebb71_08946bf9",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cca66c90_72892781",
        "filename": "demo/demo.cc",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-19T23:00:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "217fb87e_3cf9ca6f",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ac3820b7_cd813fa5",
        "filename": "demo/demo.cc",
        "patchSetId": 2
      },
      "lineNbr": 296,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-03-18T21:00:17Z",
      "side": 1,
      "message": "Can you split up this method? it\u0027s pretty big.\n\nI would suggested moving lines 291-306 into a HandleEventLine method or something similar.",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f1d73b0_b16f9660",
        "filename": "demo/demo.cc",
        "patchSetId": 2
      },
      "lineNbr": 296,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-19T23:00:10Z",
      "side": 1,
      "message": "I refactored some common code between this and the receiver loop.",
      "parentUuid": "ac3820b7_cd813fa5",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "112b03d6_812595b4",
        "filename": "demo/demo.cc",
        "patchSetId": 2
      },
      "lineNbr": 395,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-03-18T21:00:17Z",
      "side": 1,
      "message": "Duplicate code to lines 296+. Can we just add a command and argument_tail struct, and a single method that takes a absl::string_view line and splits it up?",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d44a083_92deacad",
        "filename": "demo/demo.cc",
        "patchSetId": 2
      },
      "lineNbr": 395,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-19T23:00:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "112b03d6_812595b4",
      "revId": "f02ab352c7fb2bed50b4d812835ab00ae4b85ced",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}