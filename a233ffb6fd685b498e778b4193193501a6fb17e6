{
  "comments": [
    {
      "key": {
        "uuid": "67ee4439_9c5f5b4f",
        "filename": "discovery/mdns/mdns_reader.cc",
        "patchSetId": 5
      },
      "lineNbr": 404,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2020-02-08T00:48:23Z",
      "side": 1,
      "message": "Instead of `uint8_t bitmap[32]` and copying in this loop, it could be `uint8_t* bitmap`, check |bitmap_length| against |remaining()|, then `Skip(bitmap_length)`.  I prefer the latter.",
      "revId": "a233ffb6fd685b498e778b4193193501a6fb17e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4800786f_7f813081",
        "filename": "discovery/mdns/mdns_reader.cc",
        "patchSetId": 5
      },
      "lineNbr": 404,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-02-12T18:44:35Z",
      "side": 1,
      "message": "Remaining() doesn\u0027t work here because it\u0027s associated with the full BigEndianBuffer (for the entire MdnsMessage, with one or more MdnsRecord instances). Also, the Read method already includes a Skip() call.\n\nI tried to write it using BigEndianWriter::Cursor() methods, but it ended up more complex than the current code IMHO:\n\n  uint8_t* current \u003d cursor.current();\n  for (uint8_t* bitmap_ptr \u003d out-\u003ebitmap; cursor.delta() - current \u003c out-\u003ebitmap_length \u0026\u0026 Read(bitmap_ptr++);) {}\n\nI don\u0027t have a strong opinion either way and am open to changing. WDYT?",
      "parentUuid": "67ee4439_9c5f5b4f",
      "revId": "a233ffb6fd685b498e778b4193193501a6fb17e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78fa80b9_813c428a",
        "filename": "discovery/mdns/mdns_reader.cc",
        "patchSetId": 5
      },
      "lineNbr": 404,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2020-02-12T20:44:42Z",
      "side": 1,
      "message": "\u003e Remaining() doesn\u0027t work here because it\u0027s associated with the full BigEndianBuffer (for the entire MdnsMessage, with one or more MdnsRecord instances). Also, the Read method already includes a Skip() call.\n\nRight, but Read\u003cuint8_t\u003e() below is doing what I want, just one byte at a time.  I didn\u0027t realize Skip() actually returns a bool, so it\u0027s even simpler.  Replace this loop with:\n```\n  out-\u003ebitmap \u003d current();\n  if (!Skip(out-\u003ebitmap_length)) {\n    return false;\n  }\n  cursor.Commit();\n  return true;\n```",
      "parentUuid": "4800786f_7f813081",
      "revId": "a233ffb6fd685b498e778b4193193501a6fb17e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}