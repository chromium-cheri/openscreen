{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9f99cd5d_86cb13ca",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1363709
      },
      "writtenOn": "2024-08-23T07:26:57Z",
      "side": 1,
      "message": "Hi, mark. PTAL, thanks.",
      "revId": "4b40841dae4f259c94107e0a26335e4bbda586ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f99c9ae7_41e0bf1f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1363709
      },
      "writtenOn": "2024-08-29T01:59:01Z",
      "side": 1,
      "message": "Hi, mark. PTAL again, thanks.",
      "revId": "4b40841dae4f259c94107e0a26335e4bbda586ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c63c1699_11786ae5",
        "filename": "osp/impl/message_demuxer.cc",
        "patchSetId": 2
      },
      "lineNbr": 90,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2024-08-29T14:23:14Z",
      "side": 1,
      "message": "std::move() can be removed; other is already an rvalue reference.",
      "revId": "4b40841dae4f259c94107e0a26335e4bbda586ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eb6cfd4f_cee5a8ee",
        "filename": "osp/impl/message_demuxer.cc",
        "patchSetId": 2
      },
      "lineNbr": 90,
      "author": {
        "id": 1363709
      },
      "writtenOn": "2024-08-30T04:47:51Z",
      "side": 1,
      "message": "If we remove this we will get a compilation error:\n```\n../../osp/impl/message_demuxer.cc:90:9: error: overload resolution selected deleted operator \u0027\u003d\u0027\n   90 |   *this \u003d other;\n      |   ~~~~~ ^ ~~~~~\n../../osp/public/message_demuxer.h:51:19: note: candidate function has been explicitly deleted\n   51 |     MessageWatch\u0026 operator\u003d(const MessageWatch\u0026) \u003d delete;\n      |                   ^\n../../osp/public/message_demuxer.h:53:19: note: candidate function not viable: expects an rvalue for 1st argument\n   53 |     MessageWatch\u0026 operator\u003d(MessageWatch\u0026\u0026) noexcept;\n      |                   ^         ~~~~~~~~~~~~~~\n1 error generated.\n```",
      "parentUuid": "c63c1699_11786ae5",
      "revId": "4b40841dae4f259c94107e0a26335e4bbda586ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74937ae2_7e1d1330",
        "filename": "osp/impl/message_demuxer.cc",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2024-08-26T13:49:29Z",
      "side": 1,
      "message": "Do we actually need a move operator for this type?  It might be clearer if the code that manages MessageWatch would keep a single instance per watch.",
      "revId": "4b40841dae4f259c94107e0a26335e4bbda586ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc4bcdb3_d9f1c69e",
        "filename": "osp/impl/message_demuxer.cc",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 1363709
      },
      "writtenOn": "2024-08-27T01:06:39Z",
      "side": 1,
      "message": "Because we return MessageWatch instance in both MessageDemuxer::WatchMessageType and MessageDemuxer::SetDefaultMessageTypeWatch methods now. If we delete the move operator, we need to pass MessageWatch\u0026 to they. Besides, MessageWatch needs an interface to set its members.\n\nCurrent way is clearer to me, WDYT?",
      "parentUuid": "74937ae2_7e1d1330",
      "revId": "4b40841dae4f259c94107e0a26335e4bbda586ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "14319edb_fa87fb8d",
        "filename": "osp/impl/message_demuxer.cc",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2024-08-27T15:42:34Z",
      "side": 1,
      "message": "An alternative would be passing by unique_ptr.  I agree that if we need to pass these around, then a correct move operator is better.",
      "parentUuid": "dc4bcdb3_d9f1c69e",
      "revId": "4b40841dae4f259c94107e0a26335e4bbda586ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a18b15b0_e665b1ff",
        "filename": "osp/impl/message_demuxer.cc",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2024-08-27T15:42:34Z",
      "side": 1,
      "message": "This is somewhat surprising.  The following code stops the watching started by `a`.\n\n```\nMessageWatch a \u003d WatchMessageType(...);\nMessageWatch b \u003d std::move(a);\n```\n\nI think the move operator should just reset the fields in `a` but not call `StopWatch`.  Instead the dtor should call `StopWatch` when `parent_` is not null.  Then when `b` is out of scope, that ends the watch.",
      "revId": "4b40841dae4f259c94107e0a26335e4bbda586ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39965235_306ea31d",
        "filename": "osp/impl/message_demuxer.cc",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1363709
      },
      "writtenOn": "2024-08-28T01:38:19Z",
      "side": 1,
      "message": "Sorry, I am a little confused. We use `a` to assign value to `b` here, so `StopWatch` is called for `b` not `a`, so the watch started by `b` is stoped if `b.parent_` is not nullptr. Then ownship of the watch started by `a` is transfered to `b` and is stoped when `b` is out of scope.",
      "parentUuid": "a18b15b0_e665b1ff",
      "revId": "4b40841dae4f259c94107e0a26335e4bbda586ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1c328509_87d0148b",
        "filename": "osp/impl/message_demuxer.cc",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2024-08-29T14:23:14Z",
      "side": 1,
      "message": "You\u0027re right, sorry I got a little confused.",
      "parentUuid": "39965235_306ea31d",
      "revId": "4b40841dae4f259c94107e0a26335e4bbda586ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ae7795a_2622cf50",
        "filename": "osp/impl/message_demuxer.cc",
        "patchSetId": 2
      },
      "lineNbr": 103,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2024-08-27T15:42:34Z",
      "side": 1,
      "message": "Do we need to call other.Reset() here to clear out the other fields?",
      "revId": "4b40841dae4f259c94107e0a26335e4bbda586ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "241c8407_71689ba9",
        "filename": "osp/impl/message_demuxer.cc",
        "patchSetId": 2
      },
      "lineNbr": 103,
      "author": {
        "id": 1363709
      },
      "writtenOn": "2024-08-28T01:38:19Z",
      "side": 1,
      "message": "We can clear out the other fileds, but we can only use `Reset()` after `other.parent_ \u003d nullptr`.\n\nHoever, `parent_` is the only one used in `explicit operator bool() const { return parent_; }`, so it doesn\u0027t matter if we don\u0027t clear out other fileds.",
      "parentUuid": "6ae7795a_2622cf50",
      "revId": "4b40841dae4f259c94107e0a26335e4bbda586ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a65a7a26_404402af",
        "filename": "osp/impl/message_demuxer.cc",
        "patchSetId": 2
      },
      "lineNbr": 103,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2024-08-29T14:23:14Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "241c8407_71689ba9",
      "revId": "4b40841dae4f259c94107e0a26335e4bbda586ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "935ca97c_ddc54634",
        "filename": "osp/impl/message_demuxer.cc",
        "patchSetId": 2
      },
      "lineNbr": 112,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2024-08-27T15:42:34Z",
      "side": 1,
      "message": "I don\u0027t think this should stop the watch, see above.",
      "revId": "4b40841dae4f259c94107e0a26335e4bbda586ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cff1046a_1e196b61",
        "filename": "osp/impl/message_demuxer.cc",
        "patchSetId": 2
      },
      "lineNbr": 112,
      "author": {
        "id": 1363709
      },
      "writtenOn": "2024-08-28T01:38:19Z",
      "side": 1,
      "message": "I think this `Reset` interface is used to stop the watching started by this instance and reset all members.",
      "parentUuid": "935ca97c_ddc54634",
      "revId": "4b40841dae4f259c94107e0a26335e4bbda586ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c2e6cd2_64c9aa38",
        "filename": "osp/impl/message_demuxer.cc",
        "patchSetId": 2
      },
      "lineNbr": 112,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2024-08-29T14:23:14Z",
      "side": 1,
      "message": "Ok, do you mind adding documentation to Reset() and StopWatch()?",
      "parentUuid": "cff1046a_1e196b61",
      "revId": "4b40841dae4f259c94107e0a26335e4bbda586ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d71cc332_62e34d0f",
        "filename": "osp/impl/message_demuxer.cc",
        "patchSetId": 2
      },
      "lineNbr": 112,
      "author": {
        "id": 1363709
      },
      "writtenOn": "2024-08-30T04:47:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3c2e6cd2_64c9aa38",
      "revId": "4b40841dae4f259c94107e0a26335e4bbda586ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "473fd9e3_754396b4",
        "filename": "osp/public/message_demuxer.h",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 1363709
      },
      "writtenOn": "2024-08-27T01:26:21Z",
      "side": 1,
      "message": "Rename to StopWatching in next patchset.",
      "range": {
        "startLine": 60,
        "startChar": 9,
        "endLine": 60,
        "endChar": 18
      },
      "revId": "4b40841dae4f259c94107e0a26335e4bbda586ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32e41925_56f73f67",
        "filename": "osp/public/message_demuxer.h",
        "patchSetId": 2
      },
      "lineNbr": 127,
      "author": {
        "id": 1363709
      },
      "writtenOn": "2024-08-27T01:23:28Z",
      "side": 1,
      "message": "Do we still need this interface? We can use MessageWatch::Reset() directly.",
      "range": {
        "startLine": 127,
        "startChar": 0,
        "endLine": 127,
        "endChar": 55
      },
      "revId": "4b40841dae4f259c94107e0a26335e4bbda586ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f0532e7a_c88bcf2d",
        "filename": "osp/public/message_demuxer.h",
        "patchSetId": 2
      },
      "lineNbr": 127,
      "author": {
        "id": 1363709
      },
      "writtenOn": "2024-08-30T04:47:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "32e41925_56f73f67",
      "range": {
        "startLine": 127,
        "startChar": 0,
        "endLine": 127,
        "endChar": 55
      },
      "revId": "4b40841dae4f259c94107e0a26335e4bbda586ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e23fed07_75554ef6",
        "filename": "osp/public/message_demuxer_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2024-08-29T14:23:14Z",
      "side": 1,
      "message": "Can you make sure that this unit test exercises the move and copy operators for the MessageWatch.  Thanks.",
      "revId": "4b40841dae4f259c94107e0a26335e4bbda586ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5e3fbc3b_ebfe74ab",
        "filename": "osp/public/message_demuxer_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1363709
      },
      "writtenOn": "2024-08-30T04:47:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e23fed07_75554ef6",
      "revId": "4b40841dae4f259c94107e0a26335e4bbda586ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}