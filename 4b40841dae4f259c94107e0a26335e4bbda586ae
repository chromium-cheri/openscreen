{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9f99cd5d_86cb13ca",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1363709
      },
      "writtenOn": "2024-08-23T07:26:57Z",
      "side": 1,
      "message": "Hi, mark. PTAL, thanks.",
      "revId": "4b40841dae4f259c94107e0a26335e4bbda586ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74937ae2_7e1d1330",
        "filename": "osp/impl/message_demuxer.cc",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2024-08-26T13:49:29Z",
      "side": 1,
      "message": "Do we actually need a move operator for this type?  It might be clearer if the code that manages MessageWatch would keep a single instance per watch.",
      "revId": "4b40841dae4f259c94107e0a26335e4bbda586ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc4bcdb3_d9f1c69e",
        "filename": "osp/impl/message_demuxer.cc",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 1363709
      },
      "writtenOn": "2024-08-27T01:06:39Z",
      "side": 1,
      "message": "Because we return MessageWatch instance in both MessageDemuxer::WatchMessageType and MessageDemuxer::SetDefaultMessageTypeWatch methods now. If we delete the move operator, we need to pass MessageWatch\u0026 to they. Besides, MessageWatch needs an interface to set its members.\n\nCurrent way is clearer to me, WDYT?",
      "parentUuid": "74937ae2_7e1d1330",
      "revId": "4b40841dae4f259c94107e0a26335e4bbda586ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "14319edb_fa87fb8d",
        "filename": "osp/impl/message_demuxer.cc",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2024-08-27T15:42:34Z",
      "side": 1,
      "message": "An alternative would be passing by unique_ptr.  I agree that if we need to pass these around, then a correct move operator is better.",
      "parentUuid": "dc4bcdb3_d9f1c69e",
      "revId": "4b40841dae4f259c94107e0a26335e4bbda586ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a18b15b0_e665b1ff",
        "filename": "osp/impl/message_demuxer.cc",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2024-08-27T15:42:34Z",
      "side": 1,
      "message": "This is somewhat surprising.  The following code stops the watching started by `a`.\n\n```\nMessageWatch a \u003d WatchMessageType(...);\nMessageWatch b \u003d std::move(a);\n```\n\nI think the move operator should just reset the fields in `a` but not call `StopWatch`.  Instead the dtor should call `StopWatch` when `parent_` is not null.  Then when `b` is out of scope, that ends the watch.",
      "revId": "4b40841dae4f259c94107e0a26335e4bbda586ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ae7795a_2622cf50",
        "filename": "osp/impl/message_demuxer.cc",
        "patchSetId": 2
      },
      "lineNbr": 103,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2024-08-27T15:42:34Z",
      "side": 1,
      "message": "Do we need to call other.Reset() here to clear out the other fields?",
      "revId": "4b40841dae4f259c94107e0a26335e4bbda586ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "935ca97c_ddc54634",
        "filename": "osp/impl/message_demuxer.cc",
        "patchSetId": 2
      },
      "lineNbr": 112,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2024-08-27T15:42:34Z",
      "side": 1,
      "message": "I don\u0027t think this should stop the watch, see above.",
      "revId": "4b40841dae4f259c94107e0a26335e4bbda586ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "473fd9e3_754396b4",
        "filename": "osp/public/message_demuxer.h",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 1363709
      },
      "writtenOn": "2024-08-27T01:26:21Z",
      "side": 1,
      "message": "Rename to StopWatching in next patchset.",
      "range": {
        "startLine": 60,
        "startChar": 9,
        "endLine": 60,
        "endChar": 18
      },
      "revId": "4b40841dae4f259c94107e0a26335e4bbda586ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32e41925_56f73f67",
        "filename": "osp/public/message_demuxer.h",
        "patchSetId": 2
      },
      "lineNbr": 127,
      "author": {
        "id": 1363709
      },
      "writtenOn": "2024-08-27T01:23:28Z",
      "side": 1,
      "message": "Do we still need this interface? We can use MessageWatch::Reset() directly.",
      "range": {
        "startLine": 127,
        "startChar": 0,
        "endLine": 127,
        "endChar": 55
      },
      "revId": "4b40841dae4f259c94107e0a26335e4bbda586ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}