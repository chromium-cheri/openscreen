{
  "comments": [
    {
      "key": {
        "uuid": "19f91ac8_31b5bc2f",
        "filename": "platform/impl/stream_socket_posix.h",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-10-07T20:22:03Z",
      "side": 1,
      "message": "Changes needed to support move constructor\n\nSince the rest of the class isn\u0027t thread safe, changing last_error_code to non-atomic shouldn\u0027t have any side effects",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 70,
        "endChar": 30
      },
      "revId": "9465de1417fe2358494217ae6a4fd37f10110876",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7c7d953_3c94cbec",
        "filename": "platform/impl/tls_data_router_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-10-08T17:29:14Z",
      "side": 1,
      "message": "If vector is resized, StreamSocketPosix entities will be moved to a new memory location, which means that pointers that have been previously returned to them are no longer valid.\n\nI suggest doing a vector of unique pointers in this case. This way objects have permanent location in memory and only owning smart pointers are moved around, which we don\u0027t care about.",
      "range": {
        "startLine": 38,
        "startChar": 4,
        "endLine": 38,
        "endChar": 57
      },
      "revId": "9465de1417fe2358494217ae6a4fd37f10110876",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5e2e576_6017c509",
        "filename": "platform/impl/tls_data_router_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-10-08T18:31:12Z",
      "side": 1,
      "message": "Good catch! Updated as suggested",
      "parentUuid": "d7c7d953_3c94cbec",
      "range": {
        "startLine": 38,
        "startChar": 4,
        "endLine": 38,
        "endChar": 57
      },
      "revId": "9465de1417fe2358494217ae6a4fd37f10110876",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6fb831eb_bf7ba41c",
        "filename": "platform/impl/tls_data_router_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-10-08T19:35:45Z",
      "side": 1,
      "message": "In an unorderd map, can\u0027t you just erase by key? It will return 0 if nothing removed.\n\nsocket_mapping_.erase(socket);",
      "revId": "9465de1417fe2358494217ae6a4fd37f10110876",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df156e3c_b43830b1",
        "filename": "platform/impl/tls_data_router_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-10-08T20:52:45Z",
      "side": 1,
      "message": "I didn\u0027t know this was an option - awesome! Not being able to do this has been one of my biggest disappointments about C++ :)",
      "parentUuid": "6fb831eb_bf7ba41c",
      "revId": "9465de1417fe2358494217ae6a4fd37f10110876",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ff06351_b2e2ee4d",
        "filename": "platform/impl/tls_data_router_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-10-07T20:22:03Z",
      "side": 1,
      "message": "std::find_if copies the socket when calling the provided predicate, so it doesn\u0027t work here",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 72,
        "endChar": 5
      },
      "revId": "9465de1417fe2358494217ae6a4fd37f10110876",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a1786d6_162b6294",
        "filename": "platform/impl/tls_data_router_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-10-08T19:35:45Z",
      "side": 1,
      "message": "Can you find_if with the std::unique_ptr now?",
      "parentUuid": "6ff06351_b2e2ee4d",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 72,
        "endChar": 5
      },
      "revId": "9465de1417fe2358494217ae6a4fd37f10110876",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fed710ac_50fdd196",
        "filename": "platform/impl/tls_data_router_posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-10-08T20:52:45Z",
      "side": 1,
      "message": "See comment on the newest iteration",
      "parentUuid": "5a1786d6_162b6294",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 72,
        "endChar": 5
      },
      "revId": "9465de1417fe2358494217ae6a4fd37f10110876",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}