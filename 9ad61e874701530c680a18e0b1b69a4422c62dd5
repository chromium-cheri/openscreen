{
  "comments": [
    {
      "key": {
        "uuid": "fbc8124d_37522094",
        "filename": "msgs/BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 5,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-09-27T03:45:37Z",
      "side": 1,
      "message": "It doesn\u0027t really matter, but \"messages\" seems just as good here, and more clear.",
      "revId": "9ad61e874701530c680a18e0b1b69a4422c62dd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c27371ad_425f4dc4",
        "filename": "msgs/BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 5,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-09-27T20:45:10Z",
      "side": 1,
      "message": "It\u0027s named like the directory to let it be automatically referenced as a target with \"//msgs\" instead of \"//msgs:messages\", and the directory is msgs because the namespace is msgs, which is msgs to keep it short since it might be repeated a lot.\n\nWith that being said, I don\u0027t feel strongly either way, and we can always do things like \"using messages::PresentationUrlAvailabilityRequest\" to remove the namespace in certain files.",
      "parentUuid": "fbc8124d_37522094",
      "revId": "9ad61e874701530c680a18e0b1b69a4422c62dd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f2b60fb_1e474c9e",
        "filename": "msgs/BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 5,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-10-10T05:53:10Z",
      "side": 1,
      "message": "Well, if we keep a separate namespace because of enums, we might as well make it short.",
      "parentUuid": "c27371ad_425f4dc4",
      "revId": "9ad61e874701530c680a18e0b1b69a4422c62dd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2063428_e007952a",
        "filename": "msgs/messages.cc",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-09-27T03:45:37Z",
      "side": 1,
      "message": "Does this need the \"do{stmt}while(false)\" trick in case the stmt is multi-line?",
      "range": {
        "startLine": 19,
        "startChar": 27,
        "endLine": 19,
        "endChar": 72
      },
      "revId": "9ad61e874701530c680a18e0b1b69a4422c62dd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c4fc3f7_94ebb83b",
        "filename": "msgs/messages.cc",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-09-27T20:45:10Z",
      "side": 1,
      "message": "No, stmt needs to be a single statement so we can check the return value.",
      "parentUuid": "e2063428_e007952a",
      "range": {
        "startLine": 19,
        "startChar": 27,
        "endLine": 19,
        "endChar": 72
      },
      "revId": "9ad61e874701530c680a18e0b1b69a4422c62dd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf6ddd41_3ac13161",
        "filename": "msgs/messages.cc",
        "patchSetId": 3
      },
      "lineNbr": 26,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-09-27T03:45:37Z",
      "side": 1,
      "message": "Why do we check for out of memory here?",
      "revId": "9ad61e874701530c680a18e0b1b69a4422c62dd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7add5edd_84f19b95",
        "filename": "msgs/messages.cc",
        "patchSetId": 3
      },
      "lineNbr": 26,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-09-27T20:45:10Z",
      "side": 1,
      "message": "CborErrorOutOfMemory is an encoder error that just means the buffer we provided for encoding was too small.  This can be used to tell how much space we _would_ need though.  You can look at any generated encoder epilogue for an example.",
      "parentUuid": "cf6ddd41_3ac13161",
      "revId": "9ad61e874701530c680a18e0b1b69a4422c62dd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1169b807_d33b8068",
        "filename": "msgs/messages.cc",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-09-27T03:45:37Z",
      "side": 1,
      "message": "Actually, since this code is auto-generated anyway, can we just auto-generate what the C preprocessor would spit out anyway?  That would make the generated code easier to read.",
      "revId": "9ad61e874701530c680a18e0b1b69a4422c62dd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21e5eaee_f2edb32d",
        "filename": "msgs/messages.cc",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-09-27T20:45:10Z",
      "side": 1,
      "message": "I disagree that it would be easier to read without the macros since it\u0027s primarily error checking duplication.",
      "parentUuid": "1169b807_d33b8068",
      "revId": "9ad61e874701530c680a18e0b1b69a4422c62dd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd845835_c345e2d8",
        "filename": "msgs/messages.cc",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-10-10T05:53:10Z",
      "side": 1,
      "message": "Well then could you have the tool generate the macros?  I\u0027d feel more comfortable with all the code being generated and not a mix of generated and non-generated code mixed together.  It makes it easier to review (we should be more strict with review of runtime code vs. generator/tool code).\n\nOh... it looks like that\u0027s what you did :).",
      "parentUuid": "21e5eaee_f2edb32d",
      "revId": "9ad61e874701530c680a18e0b1b69a4422c62dd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b3926e9_b280647d",
        "filename": "msgs/messages.cc",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-09-27T03:45:37Z",
      "side": 1,
      "message": "Why doesn\u0027t this just return a bool?",
      "revId": "9ad61e874701530c680a18e0b1b69a4422c62dd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4cef5fc2_1580c5af",
        "filename": "msgs/messages.cc",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-09-27T20:45:10Z",
      "side": 1,
      "message": "To make it work with CBOR_RETURN_ON_ERROR.  I changed it to return bool.",
      "parentUuid": "9b3926e9_b280647d",
      "revId": "9ad61e874701530c680a18e0b1b69a4422c62dd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59e7ffb1_c0383a55",
        "filename": "msgs/messages.cc",
        "patchSetId": 3
      },
      "lineNbr": 65,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-09-27T03:45:37Z",
      "side": 1,
      "message": "It seems like it would be better to just have this code generated by the tool as well.  Then the whole thing generated would be standalone, which would be nice.",
      "revId": "9ad61e874701530c680a18e0b1b69a4422c62dd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64fdbb03_c77cb323",
        "filename": "msgs/messages.cc",
        "patchSetId": 3
      },
      "lineNbr": 65,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-09-27T20:45:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "59e7ffb1_c0383a55",
      "revId": "9ad61e874701530c680a18e0b1b69a4422c62dd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff9cd182_c4feec17",
        "filename": "msgs/messages.h",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-09-27T03:45:37Z",
      "side": 1,
      "message": "Why bother with a separate namespace?  Seems like opensscreen:: would be just as good.",
      "revId": "9ad61e874701530c680a18e0b1b69a4422c62dd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "818eebed_07171249",
        "filename": "msgs/messages.h",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-09-27T20:45:10Z",
      "side": 1,
      "message": "Although this was added for the first message, I think it\u0027s a good idea to keep it in light of the fact that we are generating plain enums with fairly simple constant names (e.g. kSuccess).",
      "parentUuid": "ff9cd182_c4feec17",
      "revId": "9ad61e874701530c680a18e0b1b69a4422c62dd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01cd147d_0c28db32",
        "filename": "msgs/messages.h",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-09-27T03:45:37Z",
      "side": 1,
      "message": "Why not just have this whole file generated by the tool?",
      "revId": "9ad61e874701530c680a18e0b1b69a4422c62dd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2323a0af_b3de9fc2",
        "filename": "msgs/messages.h",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-09-27T20:45:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "01cd147d_0c28db32",
      "revId": "9ad61e874701530c680a18e0b1b69a4422c62dd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e28c457_f5a16377",
        "filename": "tools/cddl/README.md",
        "patchSetId": 3
      },
      "lineNbr": 125,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-09-27T03:45:37Z",
      "side": 1,
      "message": "Hmm.... can we use optional\u003cT\u003e and have that be std::optional if it\u0027s available and a user-provided optional if not?  I think it would be quite a bit nicer to use.",
      "revId": "9ad61e874701530c680a18e0b1b69a4422c62dd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b176e74_c56b0181",
        "filename": "tools/cddl/README.md",
        "patchSetId": 3
      },
      "lineNbr": 125,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-09-27T20:45:10Z",
      "side": 1,
      "message": "It probably would be but we don\u0027t have an optional\u003cT\u003e at the moment.  I left a TODO for when we land an optional type.",
      "parentUuid": "0e28c457_f5a16377",
      "revId": "9ad61e874701530c680a18e0b1b69a4422c62dd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9bd2cfc_3330675b",
        "filename": "tools/cddl/README.md",
        "patchSetId": 3
      },
      "lineNbr": 169,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-09-27T03:45:37Z",
      "side": 1,
      "message": "I removed the one use we had for this, so perhaps we don\u0027t need this...",
      "revId": "9ad61e874701530c680a18e0b1b69a4422c62dd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a94312f2_86066890",
        "filename": "tools/cddl/README.md",
        "patchSetId": 3
      },
      "lineNbr": 169,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-09-27T20:45:10Z",
      "side": 1,
      "message": "Given that it\u0027s (mostly) implemented, would you still opt to remove that use?  It seems clearer semantically to specify \u0027bytes / text\u0027 and not too difficult to implement.",
      "parentUuid": "b9bd2cfc_3330675b",
      "revId": "9ad61e874701530c680a18e0b1b69a4422c62dd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0ec579a_2e86aeb4",
        "filename": "tools/cddl/README.md",
        "patchSetId": 3
      },
      "lineNbr": 228,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-09-27T03:45:37Z",
      "side": 1,
      "message": "Can we use enum class where inclusion is not used?",
      "revId": "9ad61e874701530c680a18e0b1b69a4422c62dd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a31bad7_a7afdf84",
        "filename": "tools/cddl/README.md",
        "patchSetId": 3
      },
      "lineNbr": 228,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-09-27T20:45:10Z",
      "side": 1,
      "message": "The enum would have to neither include nor _be_ included anywhere.  I think I\u0027d prefer not to add that special case but I can leave a TODO if you\u0027d still like it.",
      "parentUuid": "b0ec579a_2e86aeb4",
      "revId": "9ad61e874701530c680a18e0b1b69a4422c62dd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a00b814_3757f7d1",
        "filename": "tools/cddl/cddl.py",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-09-27T03:45:37Z",
      "side": 1,
      "message": "Why do we need a python file to run a binary?\n\nActually, makes we wonder why you didn\u0027t write the whole tool in python...",
      "revId": "9ad61e874701530c680a18e0b1b69a4422c62dd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9058a933_4a3cbea8",
        "filename": "tools/cddl/cddl.py",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-09-27T20:45:10Z",
      "side": 1,
      "message": "This is purely a wrapper to let the tool be called from gn, which will only run python scripts as \"actions\".\n\nI\u0027m not nearly as comfortable with python as C++, but if someone wants to port it...",
      "parentUuid": "2a00b814_3757f7d1",
      "revId": "9ad61e874701530c680a18e0b1b69a4422c62dd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e30c178b_f5dc153e",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-09-27T03:45:37Z",
      "side": 1,
      "message": "Even though the code is fairly obvious, comments like \"convert \u0027-\u0027 to \u0027_\u0027\" might be nice",
      "revId": "9ad61e874701530c680a18e0b1b69a4422c62dd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4dd9c924_bb83daee",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-09-27T20:45:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e30c178b_f5dc153e",
      "revId": "9ad61e874701530c680a18e0b1b69a4422c62dd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7e40949_23431ed7",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-09-27T03:45:37Z",
      "side": 1,
      "message": "A comment here about going to camel case would be nice.",
      "revId": "9ad61e874701530c680a18e0b1b69a4422c62dd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f2e3c5f_eb8a8763",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-09-27T20:45:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7e40949_23431ed7",
      "revId": "9ad61e874701530c680a18e0b1b69a4422c62dd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b146f007_03999edd",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-09-27T03:45:37Z",
      "side": 1,
      "message": "Could you use toupper?",
      "revId": "9ad61e874701530c680a18e0b1b69a4422c62dd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9d7bbca_d12cfeb6",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-09-27T20:45:10Z",
      "side": 1,
      "message": "Done.  Note that toupper technically handles the user\u0027s locale, supports utf-16, etc.",
      "parentUuid": "b146f007_03999edd",
      "revId": "9ad61e874701530c680a18e0b1b69a4422c62dd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd6573d3_c6ef89df",
        "filename": "tools/cddl/grammar.md",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-09-27T03:45:37Z",
      "side": 1,
      "message": "Why markdown instead of just some kind of .ebnf?",
      "revId": "9ad61e874701530c680a18e0b1b69a4422c62dd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8311d730_0c0edc52",
        "filename": "tools/cddl/grammar.md",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2018-09-27T20:45:10Z",
      "side": 1,
      "message": "I thought other documentation might get added here, but then it didn\u0027t.  I suppose it could just be .abnf.",
      "parentUuid": "bd6573d3_c6ef89df",
      "revId": "9ad61e874701530c680a18e0b1b69a4422c62dd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}