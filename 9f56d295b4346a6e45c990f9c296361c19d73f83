{
  "comments": [
    {
      "key": {
        "uuid": "01f1e9c6_0e202ecd",
        "filename": "platform/api/network_runner.h",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-05-20T22:04:31Z",
      "side": 1,
      "message": "Instead of using a unique_ptr, how about just a regular pointer and we make it part of the call contract that we expect the caller to delete the object?\n\nThe reason for this is that unique_ptr is non-copyable, which means we can\u0027t use std::bind(...) to bind this function to a function\u003cvoid()\u003e, so it will be difficult to push OnRead(...) to the TaskQueue (which expects function\u003cvoid()\u003e) for later processing",
      "range": {
        "startLine": 40,
        "startChar": 22,
        "endLine": 40,
        "endChar": 50
      },
      "revId": "9f56d295b4346a6e45c990f9c296361c19d73f83",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41d28fd5_a5f2b98c",
        "filename": "platform/api/network_runner.h",
        "patchSetId": 4
      },
      "lineNbr": 42,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-05-17T16:47:24Z",
      "side": 1,
      "message": "I\u0027m in favor of pulling this out to its own top-level class in a different header file. Specifically the definition of Packet should be moved elsewhere so we can update UdpSocket.RecieveMessage to return data in this form",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 42,
        "endChar": 2
      },
      "revId": "9f56d295b4346a6e45c990f9c296361c19d73f83",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44b37461_68cdb0cf",
        "filename": "platform/api/network_runner.h",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-05-17T16:58:09Z",
      "side": 1,
      "message": "Why are we combining the interfaces for the TaskRunner and the Network Waiter? I am 100% for having the same object handle both, but I think having separate interfaces would be better - that way we can pass all TaskRunner calls to an internal TaskRunner object (previously TaskRunnerImpl) and all NetworkWaiter calls to an internal NetworkWaiter object.\n\nThen the UdpReadCallback can directly refer to the internal NetworkWaiter, rather than adding an extra level of indirection and std::bind call before passing all processing along to the internal NetworkWaiter",
      "range": {
        "startLine": 55,
        "startChar": 6,
        "endLine": 55,
        "endChar": 19
      },
      "revId": "9f56d295b4346a6e45c990f9c296361c19d73f83",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86626789_319df86c",
        "filename": "platform/api/network_runner_factory.h",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-05-15T17:59:29Z",
      "side": 1,
      "message": "Why forward declare here instead of referencing network_runner.h?",
      "range": {
        "startLine": 15,
        "startChar": 6,
        "endLine": 15,
        "endChar": 19
      },
      "revId": "9f56d295b4346a6e45c990f9c296361c19d73f83",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1037a5e5_5fc79a99",
        "filename": "platform/api/network_runner_factory.h",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-05-15T18:16:26Z",
      "side": 1,
      "message": "chromium style: https://chromium.googlesource.com/chromium/src/+/master/styleguide/c++/c++.md#forward-declarations-vs_includes",
      "parentUuid": "86626789_319df86c",
      "range": {
        "startLine": 15,
        "startChar": 6,
        "endLine": 15,
        "endChar": 19
      },
      "revId": "9f56d295b4346a6e45c990f9c296361c19d73f83",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}