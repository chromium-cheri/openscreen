{
  "comments": [
    {
      "key": {
        "uuid": "e9834c04_cf0a0a8e",
        "filename": "discovery/BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-30T19:24:58Z",
      "side": 1,
      "message": "Both of these files seem to be part of the public API to discovery.\nCan they go into discovery/public and avoid creating another folder?",
      "revId": "6e4f8facc9b3a48ec7becaca8c85a8bc286e115b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30aa8dfb_7157a370",
        "filename": "discovery/BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-30T20:04:44Z",
      "side": 1,
      "message": "They can\u0027t go in discovery/public due to DEPS rules\n\nThe current structure is discovery/public -\u003e discovery/dnssd -\u003ediscovery/mdns\nBecause we need access to these files at public, dnssd, and mdns layers, it would introduce circular dependencies and we\u0027d need to eliminate all DEPS rules\nThe DEPS changes got in after the CL went up, so they were not accurately reflected in this patch. It will be clearer once I rebase on master.\n\nIf you\u0027d still like it moved, I will do that and modify DEPS in a follow-up CL",
      "parentUuid": "e9834c04_cf0a0a8e",
      "revId": "6e4f8facc9b3a48ec7becaca8c85a8bc286e115b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7cffcdd_e6149061",
        "filename": "discovery/common/configuration_parameters.h",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-30T19:24:58Z",
      "side": 1,
      "message": "I would be okay shortening this to just \"Configuration\" or \"Config\".",
      "revId": "6e4f8facc9b3a48ec7becaca8c85a8bc286e115b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ab0c84b_4088e3d9",
        "filename": "discovery/common/configuration_parameters.h",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-30T20:04:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f7cffcdd_e6149061",
      "revId": "6e4f8facc9b3a48ec7becaca8c85a8bc286e115b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a09a6cd0_b5d08faa",
        "filename": "discovery/common/reporting_client.h",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-30T19:24:58Z",
      "side": 1,
      "message": "Would it be more accurate to say:\n\n\"This class is implemented by the discovery client.  The discovery implementation will report errors and metrics to it.\"\n\nOr something like that?",
      "revId": "6e4f8facc9b3a48ec7becaca8c85a8bc286e115b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f9d569e_fd9f2100",
        "filename": "discovery/common/reporting_client.h",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-30T20:04:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a09a6cd0_b5d08faa",
      "revId": "6e4f8facc9b3a48ec7becaca8c85a8bc286e115b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bb046cb7_50115db9",
        "filename": "discovery/common/reporting_client.h",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-30T19:24:58Z",
      "side": 1,
      "message": "Maybe add a specific case, like:\n\nFor example, an error binding a multicast socket.",
      "revId": "6e4f8facc9b3a48ec7becaca8c85a8bc286e115b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58835915_8ff806e5",
        "filename": "discovery/common/reporting_client.h",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-30T20:04:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bb046cb7_50115db9",
      "revId": "6e4f8facc9b3a48ec7becaca8c85a8bc286e115b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3034ff6d_4c51a7cc",
        "filename": "discovery/common/reporting_client.h",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-30T19:24:58Z",
      "side": 1,
      "message": "OnFatalError?",
      "revId": "6e4f8facc9b3a48ec7becaca8c85a8bc286e115b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb30c0a2_f785606d",
        "filename": "discovery/common/reporting_client.h",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-30T20:04:44Z",
      "side": 1,
      "message": "Done\n\nIn a follow-up CL, we can discuss how we want to handle non-fatal errors (such as conversion failures), but that can be done later",
      "parentUuid": "3034ff6d_4c51a7cc",
      "revId": "6e4f8facc9b3a48ec7becaca8c85a8bc286e115b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0990f0c6_4dc1a8f2",
        "filename": "discovery/mdns/mdns_publisher.cc",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-30T19:24:58Z",
      "side": 1,
      "message": "s/target/max/ ?",
      "revId": "6e4f8facc9b3a48ec7becaca8c85a8bc286e115b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45dac5d9_ed6ef781",
        "filename": "discovery/mdns/mdns_publisher.cc",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-30T20:04:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0990f0c6_4dc1a8f2",
      "revId": "6e4f8facc9b3a48ec7becaca8c85a8bc286e115b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be10be48_a620257e",
        "filename": "discovery/mdns/mdns_publisher.cc",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2020-01-30T00:56:55Z",
      "side": 1,
      "message": "nit/FYI: OSP_DCHECK_GE() does this but logs both values on failure.",
      "revId": "6e4f8facc9b3a48ec7becaca8c85a8bc286e115b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8781fcf_24637fa2",
        "filename": "discovery/mdns/mdns_publisher.cc",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-30T20:04:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "be10be48_a620257e",
      "revId": "6e4f8facc9b3a48ec7becaca8c85a8bc286e115b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}