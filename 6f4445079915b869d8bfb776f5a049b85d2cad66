{
  "comments": [
    {
      "key": {
        "uuid": "256a483a_86edab18",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-09-16T16:30:32Z",
      "side": 1,
      "message": "PTAL",
      "revId": "6f4445079915b869d8bfb776f5a049b85d2cad66",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a2a3e531_a067f821",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1300967
      },
      "writtenOn": "2020-09-16T17:01:37Z",
      "side": 1,
      "message": "LGTM, but has some issue when unregistering the service. We can address this in a separate CL.",
      "revId": "6f4445079915b869d8bfb776f5a049b85d2cad66",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c46508f_4894562f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-18T17:49:57Z",
      "side": 1,
      "message": "I believe NSEC is an optimization, so if the goal is to unblock usage by a client, then the short term fix may be to disable NSEC handling globally, until we can implement a more comprehensive fix to \nsuppress conflicting NSEC records.\n\nIIRC, records are dispatched to different parts of the library by type, so the more comprehensive fix will likely require more bookkeeping and/or coordination between those methods :-(\n",
      "revId": "6f4445079915b869d8bfb776f5a049b85d2cad66",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "537e99b2_4df9b69e",
        "filename": "discovery/common/config.h",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2020-09-17T10:56:57Z",
      "side": 1,
      "message": "IMHO a config parameter isn\u0027t actually very practical because the embedder doesn\u0027t necessarily know a priori there will or won\u0027t be a buggy publisher on the network.  This particular bug seems like it could be mitigated by just suppressing NSEC records that conflict within a single MdnsMessage.",
      "revId": "6f4445079915b869d8bfb776f5a049b85d2cad66",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "13b90219_24fd5db7",
        "filename": "discovery/common/config.h",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-18T17:49:57Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "537e99b2_4df9b69e",
      "revId": "6f4445079915b869d8bfb776f5a049b85d2cad66",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d6bd179_b1da841e",
        "filename": "discovery/common/config.h",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-09-21T19:02:10Z",
      "side": 1,
      "message": "That SGTM. I\u0027m happy to go that route and parsing the full request (though it won\u0027t be the prettiest like Mark said). Will try to push a follow-up CL with this change later today\n\nBut I would like to leave this flag in too in case it\u0027s needed in future - if this bug exists, I can see similar cases where specific senders don\u0027t respect NSEC records correctly and I\u0027d like to maximize the usability of the library since it\u0027s open source. And so people don\u0027t get blocked with similar bugs.\n\nie the bug here only seems to affect old versions of the MdnsResponder library - other similar bugs might occur, and it\u0027s reasonable to say \"don\u0027t use the old buggy version of that library\" if an external user of the open-source library hits issues (or say \"that\u0027s not to spec, which I\u0027ve been told before when reporting similar bugs), but giving this kind of workaround if they know that their application is forced to rely on it also seems like a helpful middle-ground.\n\nWDYT?",
      "parentUuid": "13b90219_24fd5db7",
      "revId": "6f4445079915b869d8bfb776f5a049b85d2cad66",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}