{
  "comments": [
    {
      "key": {
        "uuid": "c8642e93_97afc244",
        "filename": "tools/cddl/main.cc",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-20T01:59:14Z",
      "side": 1,
      "message": "Check the return value here.",
      "revId": "655a79b55625505ca9375b7024ddcef3535fdc1c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b5944b6_f6715ad5",
        "filename": "tools/cddl/main.cc",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-03-22T16:21:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c8642e93_97afc244",
      "revId": "655a79b55625505ca9375b7024ddcef3535fdc1c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca9171d5_5f38b1ec",
        "filename": "tools/cddl/sema.cc",
        "patchSetId": 1
      },
      "lineNbr": 618,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-20T01:59:14Z",
      "side": 1,
      "message": "auto\u0026, no need to copy.",
      "range": {
        "startLine": 618,
        "startChar": 7,
        "endLine": 618,
        "endChar": 11
      },
      "revId": "655a79b55625505ca9375b7024ddcef3535fdc1c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf1b7d25_703a99f8",
        "filename": "tools/cddl/sema.cc",
        "patchSetId": 1
      },
      "lineNbr": 618,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-03-22T16:21:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ca9171d5_5f38b1ec",
      "range": {
        "startLine": 618,
        "startChar": 7,
        "endLine": 618,
        "endChar": 11
      },
      "revId": "655a79b55625505ca9375b7024ddcef3535fdc1c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8cd2706_69197fa3",
        "filename": "tools/cddl/sema.cc",
        "patchSetId": 1
      },
      "lineNbr": 619,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-20T01:59:14Z",
      "side": 1,
      "message": "This would be caught as a compile error later, but not bad to catch it here.",
      "revId": "655a79b55625505ca9375b7024ddcef3535fdc1c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a37ab77_467c89be",
        "filename": "tools/cddl/sema.cc",
        "patchSetId": 1
      },
      "lineNbr": 626,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-20T01:59:14Z",
      "side": 1,
      "message": "I\u0027m a little conflicted here: the wire names are in a separate namespace (i.e. wire names can\u0027t conflict with C++ names) so they should use a separate set, but allowing that case is also a little crazy.  Here\u0027s an example of what I\u0027m thinking:\n\nalpha \u003d {\n  beta: uint ; gamma\n  1: text ; beta\n}\n\nSince we shouldn\u0027t be mixing string and integer keys, and when we do there\u0027s no reason to do the above (i.e. renaming an already-string-keyed item), I\u0027d say no change is required.",
      "revId": "655a79b55625505ca9375b7024ddcef3535fdc1c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "938d59d5_9e97a409",
        "filename": "tools/cddl/sema.cc",
        "patchSetId": 1
      },
      "lineNbr": 626,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-03-22T16:21:27Z",
      "side": 1,
      "message": "There were actually 2 cases I was worried about. The first was the one you pointed out. The second is that since CDDL doesn\u0027t understand the difference between an integer and string key. String key \"1\" is the same as integer key 1 in the spec. I can\u0027t forsee any way that we would get string key \"1\", but since checking for that case is easy I don\u0027t see any reason not to do it",
      "parentUuid": "5a37ab77_467c89be",
      "revId": "655a79b55625505ca9375b7024ddcef3535fdc1c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01c4b31b_42b38fc1",
        "filename": "tools/cddl/sema.cc",
        "patchSetId": 1
      },
      "lineNbr": 637,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-20T01:59:14Z",
      "side": 1,
      "message": "style: cpp_symbols",
      "range": {
        "startLine": 637,
        "startChar": 44,
        "endLine": 637,
        "endChar": 54
      },
      "revId": "655a79b55625505ca9375b7024ddcef3535fdc1c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fcdfda93_de0b4dd9",
        "filename": "tools/cddl/sema.cc",
        "patchSetId": 1
      },
      "lineNbr": 637,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-03-22T16:21:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "01c4b31b_42b38fc1",
      "range": {
        "startLine": 637,
        "startChar": 44,
        "endLine": 637,
        "endChar": 54
      },
      "revId": "655a79b55625505ca9375b7024ddcef3535fdc1c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a99dc17_07a686eb",
        "filename": "tools/cddl/sema.cc",
        "patchSetId": 1
      },
      "lineNbr": 638,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-03-18T21:10:39Z",
      "side": 1,
      "message": "Why use int here? Why not std::size_t, I think that\u0027s generally more appropriate.\n\nI would also vote for moving the static cast to a separate line.",
      "revId": "655a79b55625505ca9375b7024ddcef3535fdc1c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac6e815a_0a4ac285",
        "filename": "tools/cddl/sema.cc",
        "patchSetId": 1
      },
      "lineNbr": 638,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-20T01:59:14Z",
      "side": 1,
      "message": "Better yet, this could just be a range-based for.",
      "parentUuid": "3a99dc17_07a686eb",
      "revId": "655a79b55625505ca9375b7024ddcef3535fdc1c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "716a2935_80648e5a",
        "filename": "tools/cddl/sema.cc",
        "patchSetId": 1
      },
      "lineNbr": 638,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-03-22T16:21:27Z",
      "side": 1,
      "message": "Updated to a range-based for",
      "parentUuid": "ac6e815a_0a4ac285",
      "revId": "655a79b55625505ca9375b7024ddcef3535fdc1c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cfa231eb_f72706b5",
        "filename": "tools/cddl/sema.h",
        "patchSetId": 1
      },
      "lineNbr": 195,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-03-18T21:10:39Z",
      "side": 1,
      "message": "Why return bool if we just ignore the return value?",
      "revId": "655a79b55625505ca9375b7024ddcef3535fdc1c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dbcaf5da_2820f3db",
        "filename": "tools/cddl/sema.h",
        "patchSetId": 1
      },
      "lineNbr": 195,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-03-22T16:21:27Z",
      "side": 1,
      "message": "Added check in main. Good catch.",
      "parentUuid": "cfa231eb_f72706b5",
      "revId": "655a79b55625505ca9375b7024ddcef3535fdc1c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}