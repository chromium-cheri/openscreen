{
  "comments": [
    {
      "key": {
        "uuid": "61bb3b29_6f34aba4",
        "filename": "build/config/arm.gni",
        "patchSetId": 7
      },
      "lineNbr": 17,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-12-19T19:01:19Z",
      "side": 1,
      "message": "OOC: How is a failure surfaced if the caller provides an invalid value here or in other parameters?",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 17,
        "endChar": 16
      },
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7253bd89_16df9b44",
        "filename": "build/config/arm.gni",
        "patchSetId": 7
      },
      "lineNbr": 17,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-19T22:45:29Z",
      "side": 1,
      "message": "Some have asserts, like arm_float_abi. Other ones that we don\u0027t necessarily know all of the options will cause a buildtime failure.",
      "parentUuid": "61bb3b29_6f34aba4",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 17,
        "endChar": 16
      },
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4e8d427_6ed32619",
        "filename": "build/config/arm.gni",
        "patchSetId": 7
      },
      "lineNbr": 84,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-12-19T19:01:19Z",
      "side": 1,
      "message": "Add an else {\n  assert(false)\n}\n\njust in case?",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 84,
        "endChar": 3
      },
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93f97466_29f58ea8",
        "filename": "build/config/arm.gni",
        "patchSetId": 7
      },
      "lineNbr": 84,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-19T22:45:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c4e8d427_6ed32619",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 84,
        "endChar": 3
      },
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9831ab93_0afad96a",
        "filename": "build/config/sysroot.gni",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-12-19T19:01:19Z",
      "side": 1,
      "message": "OOC: Is this image ever updated outside of our control?",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 19,
        "endChar": 28
      },
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e2b3412_a58a6943",
        "filename": "build/config/sysroot.gni",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-19T22:45:29Z",
      "side": 1,
      "message": "Infrequently, but when it does we will have to roll our sysroots.json. If it ends up being a pain we may need to refactor.",
      "parentUuid": "9831ab93_0afad96a",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 19,
        "endChar": 28
      },
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f942504_afcc1937",
        "filename": "build/scripts/dir_exists.py",
        "patchSetId": 7
      },
      "lineNbr": 5,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-12-19T19:01:19Z",
      "side": 1,
      "message": "Your python script headers don\u0027t match, so one must be wrong",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 5,
        "endChar": 28
      },
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b311d96d_2b3fb9eb",
        "filename": "build/scripts/dir_exists.py",
        "patchSetId": 7
      },
      "lineNbr": 5,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-19T22:45:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9f942504_afcc1937",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 5,
        "endChar": 28
      },
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63c7ab1a_38bee75c",
        "filename": "build/scripts/install-sysroot.py",
        "patchSetId": 7
      },
      "lineNbr": 58,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-12-19T19:01:19Z",
      "side": 1,
      "message": "These helper methods could use some comments - especially for those of us who haven\u0027t used much python :)",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74353e5b_c6505159",
        "filename": "build/scripts/install-sysroot.py",
        "patchSetId": 7
      },
      "lineNbr": 58,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-19T22:45:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "63c7ab1a_38bee75c",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf75fdaf_cdabc54d",
        "filename": "build/scripts/install-sysroot.py",
        "patchSetId": 7
      },
      "lineNbr": 72,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-12-19T19:01:19Z",
      "side": 1,
      "message": "It might be useful to preface all log / error statement in this file with some string (ie: \u0027INSTALLING ROOT: \u0027) - so we know what we\u0027re looking at if we ever need to look this up in the build log and also can easily find these statements",
      "range": {
        "startLine": 72,
        "startChar": 21,
        "endLine": 72,
        "endChar": 28
      },
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b47f19e_904893e8",
        "filename": "build/scripts/install-sysroot.py",
        "patchSetId": 7
      },
      "lineNbr": 72,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-19T22:45:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf75fdaf_cdabc54d",
      "range": {
        "startLine": 72,
        "startChar": 21,
        "endLine": 72,
        "endChar": 28
      },
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "21939b75_d3f5a72c",
        "filename": "build/scripts/install-sysroot.py",
        "patchSetId": 7
      },
      "lineNbr": 98,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-12-19T19:01:19Z",
      "side": 1,
      "message": "How do errors get surfaced to the user? Will this show up in the trybot build log?",
      "range": {
        "startLine": 98,
        "startChar": 14,
        "endLine": 98,
        "endChar": 19
      },
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c00bf0c_5e1ee129",
        "filename": "build/scripts/install-sysroot.py",
        "patchSetId": 7
      },
      "lineNbr": 98,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-19T22:45:29Z",
      "side": 1,
      "message": "Yeah, it should since trybot picks up stderr on failure. If you look at the bottom of this file, the if __name__ \u003d\u003d \"__main__\" check captures errors and reports them to stderr, as well as returns a bad exit code.\n\n\nif __name__ \u003d\u003d \u0027__main__\u0027:\n    try:\n        sys.exit(main(sys.argv[1:]))\n    except Error as e:\n        sys.stderr.write(str(e) + \u0027\\n\u0027)\n        sys.exit(1)",
      "parentUuid": "21939b75_d3f5a72c",
      "range": {
        "startLine": 98,
        "startChar": 14,
        "endLine": 98,
        "endChar": 19
      },
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "61d91c0d_c91f88b7",
        "filename": "third_party/abseil/BUILD.gn",
        "patchSetId": 7
      },
      "lineNbr": 112,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-12-19T22:40:23Z",
      "side": 1,
      "message": "Would it help keep this a single source set to make this `!build_with_chromium \u0026\u0026 current_toolchain \u003d\u003d host_toolchain`?  Or the `host_toolchain` check could even be done for the `runtime_libraries` target directly (i.e. nop it for `host_toolchain`) since it seems like this check will get sprinkled multiple places.  I\u0027m not really sure how GN handles that when host \u003d\u003d target though, so just some ideas.",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39ad819b_82f2269b",
        "filename": "third_party/abseil/BUILD.gn",
        "patchSetId": 7
      },
      "lineNbr": 112,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-19T22:45:29Z",
      "side": 1,
      "message": "No--for cross compiling we actually generally use the current_toolchain as the host_toolchain, e.g. building on Linux from x64 to ARM. We need to have two copies, period:\n\n1. for CDDL to have in the host architecture (e.g. x64)\n2. for the compiled binaries, in the target architecture (e.g. ARM).",
      "parentUuid": "61d91c0d_c91f88b7",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}