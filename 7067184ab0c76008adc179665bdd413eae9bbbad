{
  "comments": [
    {
      "key": {
        "uuid": "10eb7f5b_873bc4d8",
        "filename": "build/config/BUILD.gn",
        "patchSetId": 7
      },
      "lineNbr": 174,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-20T05:41:08Z",
      "side": 1,
      "message": "arm_runtime_libraries?",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3dcc098_b4ab37be",
        "filename": "build/config/BUILD.gn",
        "patchSetId": 7
      },
      "lineNbr": 174,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-20T20:28:21Z",
      "side": 1,
      "message": "I\u0027m thinking sysroot_runtime_libraries?",
      "parentUuid": "10eb7f5b_873bc4d8",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39370578_47bad824",
        "filename": "build/config/BUILD.gn",
        "patchSetId": 7
      },
      "lineNbr": 174,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-20T21:19:33Z",
      "side": 1,
      "message": "SGTM",
      "parentUuid": "f3dcc098_b4ab37be",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "08425155_f7684896",
        "filename": "build/config/BUILD.gn",
        "patchSetId": 7
      },
      "lineNbr": 175,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-20T05:41:08Z",
      "side": 1,
      "message": "assert(current_cpu \u003d\u003d \"arm\" || current_cpu \u003d\u003d \"arm64\") before doing anything else",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c658ecd_aae4154f",
        "filename": "build/config/BUILD.gn",
        "patchSetId": 7
      },
      "lineNbr": 175,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-20T20:28:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "08425155_f7684896",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc9a3abb_0551ce00",
        "filename": "build/config/BUILDCONFIG.gn",
        "patchSetId": 7
      },
      "lineNbr": 137,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-20T05:41:08Z",
      "side": 1,
      "message": "Is this necessary for non-ARM?",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1952a26_cfb255c2",
        "filename": "build/config/BUILDCONFIG.gn",
        "patchSetId": 7
      },
      "lineNbr": 137,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-20T20:28:21Z",
      "side": 1,
      "message": "No. It\u0027s easier to just have the config here, and the whole config is wrapped in a \"sysroot !\u003d \"\"\" check.",
      "parentUuid": "bc9a3abb_0551ce00",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1efde90f_4af11ced",
        "filename": "build/config/BUILDCONFIG.gn",
        "patchSetId": 7
      },
      "lineNbr": 137,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-20T21:19:33Z",
      "side": 1,
      "message": "SGTM",
      "parentUuid": "e1952a26_cfb255c2",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "61bb3b29_6f34aba4",
        "filename": "build/config/arm.gni",
        "patchSetId": 7
      },
      "lineNbr": 17,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-12-19T19:01:19Z",
      "side": 1,
      "message": "OOC: How is a failure surfaced if the caller provides an invalid value here or in other parameters?",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 17,
        "endChar": 16
      },
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7253bd89_16df9b44",
        "filename": "build/config/arm.gni",
        "patchSetId": 7
      },
      "lineNbr": 17,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-19T22:45:29Z",
      "side": 1,
      "message": "Some have asserts, like arm_float_abi. Other ones that we don\u0027t necessarily know all of the options will cause a buildtime failure.",
      "parentUuid": "61bb3b29_6f34aba4",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 17,
        "endChar": 16
      },
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1473e465_24016ee1",
        "filename": "build/config/arm.gni",
        "patchSetId": 7
      },
      "lineNbr": 17,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-20T05:41:08Z",
      "side": 1,
      "message": "It would be helpful to document the valid values for this (or where to find them).",
      "parentUuid": "61bb3b29_6f34aba4",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 17,
        "endChar": 16
      },
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e71eb0b7_aefbf7f4",
        "filename": "build/config/arm.gni",
        "patchSetId": 7
      },
      "lineNbr": 17,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-20T20:28:21Z",
      "side": 1,
      "message": "I\u0027ve made an attempt. Apparently this is an open ended, annoying problem. I found a few internal LLVM powerpoints around trying to fix this, but nothing implementented.",
      "parentUuid": "1473e465_24016ee1",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 17,
        "endChar": 16
      },
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc178338_c7eb5b16",
        "filename": "build/config/arm.gni",
        "patchSetId": 7
      },
      "lineNbr": 17,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-20T23:51:36Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e71eb0b7_aefbf7f4",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 17,
        "endChar": 16
      },
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2689bbb9_20722a42",
        "filename": "build/config/arm.gni",
        "patchSetId": 7
      },
      "lineNbr": 21,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-20T05:41:08Z",
      "side": 1,
      "message": "Same comment here.",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2af175f0_c70397b6",
        "filename": "build/config/arm.gni",
        "patchSetId": 7
      },
      "lineNbr": 21,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-20T20:28:21Z",
      "side": 1,
      "message": "Same problem here.",
      "parentUuid": "2689bbb9_20722a42",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "228b0585_dbaf66cb",
        "filename": "build/config/arm.gni",
        "patchSetId": 7
      },
      "lineNbr": 21,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-20T23:51:36Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2af175f0_c70397b6",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7957994_f35cb9f1",
        "filename": "build/config/arm.gni",
        "patchSetId": 7
      },
      "lineNbr": 26,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-20T05:41:08Z",
      "side": 1,
      "message": "Same comment here.",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c094c1b1_ce4c2c93",
        "filename": "build/config/arm.gni",
        "patchSetId": 7
      },
      "lineNbr": 26,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-20T20:28:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7957994_f35cb9f1",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "301f1118_9596780d",
        "filename": "build/config/arm.gni",
        "patchSetId": 7
      },
      "lineNbr": 31,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-20T05:41:08Z",
      "side": 1,
      "message": "And here.",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b83318de_a8c99134",
        "filename": "build/config/arm.gni",
        "patchSetId": 7
      },
      "lineNbr": 31,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-20T20:28:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "301f1118_9596780d",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e5f90ac0_115a001a",
        "filename": "build/config/arm.gni",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-20T05:41:08Z",
      "side": 1,
      "message": "Can this be derived from arm_fpu?",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0a9397e_c35ae659",
        "filename": "build/config/arm.gni",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-20T20:28:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e5f90ac0_115a001a",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90547988_4f260126",
        "filename": "build/config/arm.gni",
        "patchSetId": 7
      },
      "lineNbr": 37,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-20T05:41:08Z",
      "side": 1,
      "message": "How is this different from arm_use_neon?  When would that be true and this be false?",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf9703ee_353e9beb",
        "filename": "build/config/arm.gni",
        "patchSetId": 7
      },
      "lineNbr": 37,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-20T20:28:21Z",
      "side": 1,
      "message": "Good question! It\u0027s not really useful to have both.",
      "parentUuid": "90547988_4f260126",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1993ce2_ca504121",
        "filename": "build/config/arm.gni",
        "patchSetId": 7
      },
      "lineNbr": 44,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-20T05:41:08Z",
      "side": 1,
      "message": "Relevant to the question below, is this executed before or after overrides in args.gn?\n\nIf it\u0027s executed before, then not sure it\u0027s needed: you control the values that are set via the code below.\n\nIf it\u0027s executed after, then I would move this to the end of the file and add checks for all of the arm_ variables, since the developer could put nonsense in them.",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39698c84_d905d33b",
        "filename": "build/config/arm.gni",
        "patchSetId": 7
      },
      "lineNbr": 44,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-20T20:28:21Z",
      "side": 1,
      "message": "Moved to bottom, added version check. For the other fields, it\u0027s challenging/not worth it IMO to have a check,since they have 20+ values which change as more get added.",
      "parentUuid": "e1993ce2_ca504121",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c58afba_64a56cea",
        "filename": "build/config/arm.gni",
        "patchSetId": 7
      },
      "lineNbr": 63,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-20T05:41:08Z",
      "side": 1,
      "message": "Are arguments from args.gn applied before or after this executed?\n\nIt would be simpler to just always apply defaults here and then let args.gn override if the developer wants to.  (i.e., remove the empty string check.)",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "877100d3_1a37dfa9",
        "filename": "build/config/arm.gni",
        "patchSetId": 7
      },
      "lineNbr": 63,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-20T20:28:21Z",
      "side": 1,
      "message": "Args.gn are applied before this is executed:\n\n  \"Introduces the given arguments into the current scope. If they are not\n  specified on the command line or in a toolchain\u0027s arguments, the default\n  values given in the declare_args block will be used. However, these defaults\n  will not override command-line values.\"\n\nhttps://gn.googlesource.com/gn/+/master/docs/reference.md#func_declare_args\n\nSo after the declare_args() block but before the rest of the GNI I am pretty sure.",
      "parentUuid": "7c58afba_64a56cea",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4e8d427_6ed32619",
        "filename": "build/config/arm.gni",
        "patchSetId": 7
      },
      "lineNbr": 84,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-12-19T19:01:19Z",
      "side": 1,
      "message": "Add an else {\n  assert(false)\n}\n\njust in case?",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 84,
        "endChar": 3
      },
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93f97466_29f58ea8",
        "filename": "build/config/arm.gni",
        "patchSetId": 7
      },
      "lineNbr": 84,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-19T22:45:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c4e8d427_6ed32619",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 84,
        "endChar": 3
      },
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9831ab93_0afad96a",
        "filename": "build/config/sysroot.gni",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-12-19T19:01:19Z",
      "side": 1,
      "message": "OOC: Is this image ever updated outside of our control?",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 19,
        "endChar": 28
      },
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e2b3412_a58a6943",
        "filename": "build/config/sysroot.gni",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-19T22:45:29Z",
      "side": 1,
      "message": "Infrequently, but when it does we will have to roll our sysroots.json. If it ends up being a pain we may need to refactor.",
      "parentUuid": "9831ab93_0afad96a",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 19,
        "endChar": 28
      },
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f942504_afcc1937",
        "filename": "build/scripts/dir_exists.py",
        "patchSetId": 7
      },
      "lineNbr": 5,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-12-19T19:01:19Z",
      "side": 1,
      "message": "Your python script headers don\u0027t match, so one must be wrong",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 5,
        "endChar": 28
      },
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b311d96d_2b3fb9eb",
        "filename": "build/scripts/dir_exists.py",
        "patchSetId": 7
      },
      "lineNbr": 5,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-19T22:45:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9f942504_afcc1937",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 5,
        "endChar": 28
      },
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0f8e751_37518ef1",
        "filename": "build/scripts/install-sysroot.py",
        "patchSetId": 7
      },
      "lineNbr": 17,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-20T05:41:08Z",
      "side": 1,
      "message": "s/the chromium//",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36aef153_66f1ec9b",
        "filename": "build/scripts/install-sysroot.py",
        "patchSetId": 7
      },
      "lineNbr": 17,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-20T20:28:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b0f8e751_37518ef1",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a5325ab_8d238218",
        "filename": "build/scripts/install-sysroot.py",
        "patchSetId": 7
      },
      "lineNbr": 18,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-12-20T05:41:08Z",
      "side": 1,
      "message": "Update this sentence for relevance to the OSL?",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12a43173_83f928c1",
        "filename": "build/scripts/install-sysroot.py",
        "patchSetId": 7
      },
      "lineNbr": 18,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-20T20:28:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1a5325ab_8d238218",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63c7ab1a_38bee75c",
        "filename": "build/scripts/install-sysroot.py",
        "patchSetId": 7
      },
      "lineNbr": 58,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-12-19T19:01:19Z",
      "side": 1,
      "message": "These helper methods could use some comments - especially for those of us who haven\u0027t used much python :)",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74353e5b_c6505159",
        "filename": "build/scripts/install-sysroot.py",
        "patchSetId": 7
      },
      "lineNbr": 58,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-19T22:45:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "63c7ab1a_38bee75c",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf75fdaf_cdabc54d",
        "filename": "build/scripts/install-sysroot.py",
        "patchSetId": 7
      },
      "lineNbr": 72,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-12-19T19:01:19Z",
      "side": 1,
      "message": "It might be useful to preface all log / error statement in this file with some string (ie: \u0027INSTALLING ROOT: \u0027) - so we know what we\u0027re looking at if we ever need to look this up in the build log and also can easily find these statements",
      "range": {
        "startLine": 72,
        "startChar": 21,
        "endLine": 72,
        "endChar": 28
      },
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b47f19e_904893e8",
        "filename": "build/scripts/install-sysroot.py",
        "patchSetId": 7
      },
      "lineNbr": 72,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-19T22:45:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf75fdaf_cdabc54d",
      "range": {
        "startLine": 72,
        "startChar": 21,
        "endLine": 72,
        "endChar": 28
      },
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "21939b75_d3f5a72c",
        "filename": "build/scripts/install-sysroot.py",
        "patchSetId": 7
      },
      "lineNbr": 98,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-12-19T19:01:19Z",
      "side": 1,
      "message": "How do errors get surfaced to the user? Will this show up in the trybot build log?",
      "range": {
        "startLine": 98,
        "startChar": 14,
        "endLine": 98,
        "endChar": 19
      },
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c00bf0c_5e1ee129",
        "filename": "build/scripts/install-sysroot.py",
        "patchSetId": 7
      },
      "lineNbr": 98,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-19T22:45:29Z",
      "side": 1,
      "message": "Yeah, it should since trybot picks up stderr on failure. If you look at the bottom of this file, the if __name__ \u003d\u003d \"__main__\" check captures errors and reports them to stderr, as well as returns a bad exit code.\n\n\nif __name__ \u003d\u003d \u0027__main__\u0027:\n    try:\n        sys.exit(main(sys.argv[1:]))\n    except Error as e:\n        sys.stderr.write(str(e) + \u0027\\n\u0027)\n        sys.exit(1)",
      "parentUuid": "21939b75_d3f5a72c",
      "range": {
        "startLine": 98,
        "startChar": 14,
        "endLine": 98,
        "endChar": 19
      },
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "61d91c0d_c91f88b7",
        "filename": "third_party/abseil/BUILD.gn",
        "patchSetId": 7
      },
      "lineNbr": 112,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-12-19T22:40:23Z",
      "side": 1,
      "message": "Would it help keep this a single source set to make this `!build_with_chromium \u0026\u0026 current_toolchain \u003d\u003d host_toolchain`?  Or the `host_toolchain` check could even be done for the `runtime_libraries` target directly (i.e. nop it for `host_toolchain`) since it seems like this check will get sprinkled multiple places.  I\u0027m not really sure how GN handles that when host \u003d\u003d target though, so just some ideas.",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39ad819b_82f2269b",
        "filename": "third_party/abseil/BUILD.gn",
        "patchSetId": 7
      },
      "lineNbr": 112,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-19T22:45:29Z",
      "side": 1,
      "message": "No--for cross compiling we actually generally use the current_toolchain as the host_toolchain, e.g. building on Linux from x64 to ARM. We need to have two copies, period:\n\n1. for CDDL to have in the host architecture (e.g. x64)\n2. for the compiled binaries, in the target architecture (e.g. ARM).",
      "parentUuid": "61d91c0d_c91f88b7",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67e49107_1292a3dc",
        "filename": "third_party/abseil/BUILD.gn",
        "patchSetId": 7
      },
      "lineNbr": 112,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-12-19T22:54:31Z",
      "side": 1,
      "message": "Wouldn\u0027t manually specifying the toolchain for case 1 accomplish that?  For example, if the abseil dep in cddl still references an ARM version of the target even though cddl is only defined for the host toolchain (seems like a GN bug?), you could still change the dep to `abseil:abseil($host_toolchain)`.",
      "parentUuid": "39ad819b_82f2269b",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "691f04bf_d9035378",
        "filename": "third_party/abseil/BUILD.gn",
        "patchSetId": 7
      },
      "lineNbr": 112,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-20T00:30:19Z",
      "side": 1,
      "message": "Currently this is configured to just use the host toolchain period--the toolchain is set based on OS, currently not on ARCH. Since this compilation is only Linux x64/x86 for Linux arm/arm64, the toolchains are the same. We could try moving to a separate toolchain declaration, but I\u0027m not sure how to do that yet. Thoughts?",
      "parentUuid": "67e49107_1292a3dc",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "823644c9_53d7129b",
        "filename": "third_party/abseil/BUILD.gn",
        "patchSetId": 7
      },
      "lineNbr": 112,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-12-20T01:56:45Z",
      "side": 1,
      "message": "Some things were cleared up over chat + further digging.  Specifically, my assumption about host_toolchain vs. default_toolchain was wrong because this CL overloads the runtime_libraries target with a toolchain-like change via flags instead of using the Chromium pattern of per-target toolchains.\n\nMy $0.02 then would be to change to Chromium\u0027s toolchain pattern by converting our toolchain definition to a GN template (which can have no variables other than extra command line flags to keep it simple).  I think this is more consistent with GN\u0027s use of toolchain-specific targets.  proto_library.gni and osp/msgs make use of this if it\u0027s not clear what I mean.  You can also see it as a deps tree from a Chromium ARM build:\n\n//third_party/openscreen/src/osp/msgs:cddl_gen\n  //third_party/openscreen/src/tools/cddl:cddl(//build/toolchain/linux:clang_x64)\n    //build/config:executable_deps(//build/toolchain/linux:clang_x64)\n      //build/config:common_deps(//build/toolchain/linux:clang_x64)\n        //buildtools/third_party/libc++:libc++(//build/toolchain/linux:clang_x64)\n          //buildtools/third_party/libc++abi:libc++abi(//build/toolchain/linux:clang_x64)\n    //third_party/openscreen/src/third_party/abseil:abseil(//build/toolchain/linux:clang_x64)\n      //third_party/abseil-cpp/absl/hash:hash(//build/toolchain/linux:clang_x64)\n      ...\n//third_party/openscreen/src/third_party/abseil:abseil\n  //third_party/abseil-cpp/absl/hash:hash\n  ...\n\nNote the two different versions of abseil here.\n\nIf you think that sounds good but still aren\u0027t sure how that would be implemented, you can always land this as-is and I can follow-up with how I think it would go for further discussion.",
      "parentUuid": "691f04bf_d9035378",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "941a5872_df84441c",
        "filename": "third_party/abseil/BUILD.gn",
        "patchSetId": 7
      },
      "lineNbr": 112,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-12-20T20:28:21Z",
      "side": 1,
      "message": "I would love to split this up into a separate follow up patch. I\u0027ll add a TODO to the spreadsheet.",
      "parentUuid": "823644c9_53d7129b",
      "revId": "7067184ab0c76008adc179665bdd413eae9bbbad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}