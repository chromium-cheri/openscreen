{
  "comments": [
    {
      "key": {
        "uuid": "f50f4ae1_c2b6381d",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-07T23:17:59Z",
      "side": 1,
      "message": "inline?",
      "range": {
        "startLine": 20,
        "startChar": 5,
        "endLine": 20,
        "endChar": 27
      },
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd22c226_6e229f90",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-08T23:29:12Z",
      "side": 1,
      "message": "Can you use bool CastMessage_ProtocolVersion_IsValid(int value) from the generated code?",
      "parentUuid": "f50f4ae1_c2b6381d",
      "range": {
        "startLine": 20,
        "startChar": 5,
        "endLine": 20,
        "endChar": 27
      },
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58918978_aec1afe1",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-11-19T02:17:11Z",
      "side": 1,
      "message": "inline doesn\u0027t really mean anything (but _can_ be required in headers to avoid duplicate definitions).\n\nRe generated code: done.",
      "parentUuid": "cd22c226_6e229f90",
      "range": {
        "startLine": 20,
        "startChar": 5,
        "endLine": 20,
        "endChar": 27
      },
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a9de2a55_119dd33b",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-08T23:29:12Z",
      "side": 1,
      "message": "IMO, this would be more natural as returning either absl::Optional\u003cint\u003e or ErrorOr\u003cint\u003e, instead of a bool and output argument.",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5b8fdcb_af6a5f0d",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-11-19T02:17:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a9de2a55_119dd33b",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d58cb716_2861825f",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-08T23:29:12Z",
      "side": 1,
      "message": "*max_version \u003d CastMessage_ProtocolVersion_CASTV2_1_0",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5cf3621_7272f4d1",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-11-19T02:17:11Z",
      "side": 1,
      "message": "This is in conflict with the optional/ErrorOr suggestion.",
      "parentUuid": "d58cb716_2861825f",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "517cc395_f8a36f2b",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-07T23:17:59Z",
      "side": 1,
      "message": "const ref? or comment on the using definition if this is an integer type",
      "range": {
        "startLine": 32,
        "startChar": 4,
        "endLine": 32,
        "endChar": 14
      },
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c087a39_74371c4a",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-11-19T02:17:11Z",
      "side": 1,
      "message": "Added static_assert that this is an integral type.",
      "parentUuid": "517cc395_f8a36f2b",
      "range": {
        "startLine": 32,
        "startChar": 4,
        "endLine": 32,
        "endChar": 14
      },
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "982e6671_f4a158ae",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-08T23:29:12Z",
      "side": 1,
      "message": "File-level aliases should go at the top of the file.",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "949bbea4_c87c709d",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-11-19T02:17:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "982e6671_f4a158ae",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cbf81f6f_e5c046f2",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-08T23:29:12Z",
      "side": 1,
      "message": "Is kKeyType the name of a JSON dictionary key?\nCan it be named something more descriptive - maybe kMessageTypeKey?",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "503971ab_784e7fc8",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-11-19T02:17:11Z",
      "side": 1,
      "message": "Done: kMessageKeyType for consistency with other constants.",
      "parentUuid": "cbf81f6f_e5c046f2",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37ad8443_974c84e2",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-08T23:29:12Z",
      "side": 1,
      "message": "Can you provide some thoughts on error reporting and handling?\n\nDropping bad messages won\u0027t really give us any indication something is wrong in the field, or protection against misbehaving or malicious endpoints.\n\nLet\u0027s consider the options and come back with later patches to implement the approach.",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f392d0d_13de0042",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-11-19T02:17:11Z",
      "side": 1,
      "message": "It seems like a decent place for this would be to call something like router-\u003eReportMessageError() which could be forwarded to either the existing SocketErrorHandler or a new kind of error-handling client.  I\u0027ll leave a TODO for that.",
      "parentUuid": "37ad8443_974c84e2",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5dd66b4e_1e227104",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-08T23:29:12Z",
      "side": 1,
      "message": "- Does asString() return a copy of the contents?  Can it be a const ref, const char* or absl::string_view instead?\n\n- The code to extract a string value from a JSON dictionary is likely to be common in our codebase.  Consider factoring out a utility function to return a absl::optional\u003cabsl::string_view\u003e (or similar) given an JSON object and a key name.",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ae59048_1cdb6060",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-11-19T02:17:11Z",
      "side": 1,
      "message": "1. asString always copies, but it looks like getString into a string_view is what we want.\n2. Done.",
      "parentUuid": "5dd66b4e_1e227104",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb597306_cc13019d",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-07T23:17:59Z",
      "side": 1,
      "message": "Should this be an OSP_NOTREACHED or did you forget a case?",
      "range": {
        "startLine": 97,
        "startChar": 3,
        "endLine": 98,
        "endChar": 3
      },
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b69eb2ed_3f7381a7",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-11-19T02:17:11Z",
      "side": 1,
      "message": "OSP_NOTREACHED doesn\u0027t seem appropriate since it\u0027s fatal in all builds.  I added a comment about adding this to the above future error reporting cases.",
      "parentUuid": "fb597306_cc13019d",
      "range": {
        "startLine": 97,
        "startChar": 3,
        "endLine": 98,
        "endChar": 3
      },
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c34824b_68661a99",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-08T23:29:12Z",
      "side": 1,
      "message": "Utility function to return an optional int from an object and a key?",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "860572de_a61a4859",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-11-19T02:17:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7c34824b_68661a99",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "974c5517_c59d0966",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 124,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-08T23:29:12Z",
      "side": 1,
      "message": "It might be helpful to factor out a function like GetConectionType(value) for readability.  It would help encapsulate all of the static_casting back and forth.",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f056b7aa_45797a15",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 124,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-11-19T02:17:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "974c5517_c59d0966",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da481cc3_8956ee6b",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 142,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-08T23:29:12Z",
      "side": 1,
      "message": "Is sender_info_value used anywhere?",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e8e6c67_0c313dda",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 142,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-11-19T02:17:11Z",
      "side": 1,
      "message": "On the receiver it\u0027s used in metrics/logging.  Additionally, they make some guesses about what its contents _would_ be if it\u0027s missing.  I was just going to leave this as a TODO for now.  Is there something else you\u0027d like to see?",
      "parentUuid": "da481cc3_8956ee6b",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a0d3168_41ec2895",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 151,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-08T23:29:12Z",
      "side": 1,
      "message": "The code seems to imply that if the other side does not supply a version, then it defaults to 1.0.\n\nDoes \"has_version\" mean that version negotiation was successful?",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61032d4f_49af102a",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 151,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-11-19T02:17:11Z",
      "side": 1,
      "message": "Yes.",
      "parentUuid": "7a0d3168_41ec2895",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "879e1626_13acd568",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 155,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-08T23:29:12Z",
      "side": 1,
      "message": "I would assume?",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1804ecc0_ba8accf7",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 155,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-11-19T02:17:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "879e1626_13acd568",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "88064556_3bc5633d",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 161,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-08T23:29:12Z",
      "side": 1,
      "message": "Is the response only required when version negotiation happened?",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d50eecc5_e4d68b79",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 161,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-11-19T02:17:11Z",
      "side": 1,
      "message": "It\u0027s only required if the sender actually sent a version.  Added a comment.",
      "parentUuid": "88064556_3bc5633d",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2fa2787e_031a3bde",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 178,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-08T23:29:12Z",
      "side": 1,
      "message": "Can this be encapsulated into GetCloseReason(value)?",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60696ce1_2b05d6e7",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 178,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-11-19T02:17:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2fa2787e_031a3bde",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a1366b0_76091321",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 185,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-07T23:17:59Z",
      "side": 1,
      "message": "Due to the order they are defined in, isn\u0027t CloseReason::kUnknown \u003d\u003d 0 and CloseReason::kTransportClosed \u003d\u003d 1, so this is never true?\n\nThis seems less-readable and potentially error-prone without explicitly assigned values on the CloseReason enum (especially if we ever add new enum values).",
      "range": {
        "startLine": 184,
        "startChar": 0,
        "endLine": 185,
        "endChar": 66
      },
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62c78544_bf518f83",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 185,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-11-19T02:17:11Z",
      "side": 1,
      "message": "Good catch; this broke when kUnknown moved up.  Added kFirstReason/kLastReason to help this bounds check stay consistent.",
      "parentUuid": "1a1366b0_76091321",
      "range": {
        "startLine": 184,
        "startChar": 0,
        "endLine": 185,
        "endChar": 66
      },
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8c708d4_3d871e18",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-08T23:29:12Z",
      "side": 1,
      "message": "If the other side may support a higher protocol version, but we are always sending 1.0?",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd1e27c9_20280c97",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-11-19T02:17:11Z",
      "side": 1,
      "message": "Correct.  This matches current receiver behavior.  It seems to be assumed safe to downgrade (i.e. if we don\u0027t need chunking).",
      "parentUuid": "b8c708d4_3d871e18",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2870e49b_0a8a349e",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 219,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-08T23:29:12Z",
      "side": 1,
      "message": "Is max_protocol_version already part of vconn.data?",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53170795_992d2fe1",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 219,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-11-19T02:17:11Z",
      "side": 1,
      "message": "There is no vconn.data?  VirtualConnection::AssociatedData is stored separately.",
      "parentUuid": "2870e49b_0a8a349e",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7706abc1_527507e9",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 231,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-08T23:29:12Z",
      "side": 1,
      "message": "Please encapsulate message construction into a utility function.",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11679157_95e0a6a4",
        "filename": "cast/common/channel/connection_namespace_handler.cc",
        "patchSetId": 1
      },
      "lineNbr": 231,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-11-19T02:17:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7706abc1_527507e9",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "010bffa0_4c7a67b3",
        "filename": "cast/common/channel/connection_namespace_handler.h",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-08T23:29:12Z",
      "side": 1,
      "message": "Can this be const?",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0cae578e_b7658769",
        "filename": "cast/common/channel/connection_namespace_handler.h",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-11-19T02:17:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "010bffa0_4c7a67b3",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66518c9e_00d71baf",
        "filename": "cast/common/channel/connection_namespace_handler.h",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-08T23:29:12Z",
      "side": 1,
      "message": "Please document lifetime assumptions about passed-in pointers.  It looks like they are assumed to outlive this class.",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7bd85ca2_bea9f2d5",
        "filename": "cast/common/channel/connection_namespace_handler.h",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-11-19T02:17:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "66518c9e_00d71baf",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bb68bf06_e803d1fc",
        "filename": "cast/common/channel/connection_namespace_handler.h",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-08T23:29:12Z",
      "side": 1,
      "message": "Forward declare or #include VirtualConnectionRouter?",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e63aaec3_2132113f",
        "filename": "cast/common/channel/connection_namespace_handler.h",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-11-19T02:17:11Z",
      "side": 1,
      "message": "Done but cast_message_handler.h also forward declares, which we already depend on.",
      "parentUuid": "bb68bf06_e803d1fc",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3377df1c_c6a259fe",
        "filename": "cast/common/channel/connection_namespace_handler.h",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-08T23:29:12Z",
      "side": 1,
      "message": "Is |value| parsed from |message|?\n\nSo the message still owns the original string, which has been parsed and moved into |value|?\n\nIs the idea that the handler will take ownership and destroy both of them when it exits?",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2ce1923_0417a1de",
        "filename": "cast/common/channel/connection_namespace_handler.h",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-11-19T02:17:11Z",
      "side": 1,
      "message": "Yes, |value| is a parsed form of |message|\u0027s payload.\n\nAlso yes, but nothing is \"moved\" into |value|; it\u0027s new memory.\n\nYes, the each handler is the next/last step in the processing chain so it\u0027s free to modify/move these values as necessary.",
      "parentUuid": "3377df1c_c6a259fe",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e8e9dbb_480eae95",
        "filename": "cast/common/channel/connection_namespace_handler.h",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-08T23:29:12Z",
      "side": 1,
      "message": "Can you name |value| something more meaningful?",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89b58138_7d1f14e5",
        "filename": "cast/common/channel/connection_namespace_handler.h",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-11-19T02:17:11Z",
      "side": 1,
      "message": "Done: parsed_message.",
      "parentUuid": "6e8e9dbb_480eae95",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0bcd11c1_55eee212",
        "filename": "cast/common/channel/connection_namespace_handler.h",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-08T23:29:12Z",
      "side": 1,
      "message": "Ditto",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ca6c864_d14d8abd",
        "filename": "cast/common/channel/connection_namespace_handler.h",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-11-19T02:17:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0bcd11c1_55eee212",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e4710ea_b700f0cc",
        "filename": "cast/common/channel/connection_namespace_handler.h",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-08T23:29:12Z",
      "side": 1,
      "message": "It\u0027s a little odd to have some methods take a VirtualConnection by rvalue reference and others by const reference.  Is the idea that SendClose() is going to destroy it?",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b60cfed_4c0d1402",
        "filename": "cast/common/channel/connection_namespace_handler.h",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-11-19T02:17:11Z",
      "side": 1,
      "message": "I guess I was thinking that since the fields are to construct an outgoing message, we could std::move() them into the CastMessage (SendClose occurs at a place where vconn is about to be destroyed anyway and SendConnectedResponse doesn\u0027t).  However, the router only accepts a const-ref actually, so without also changing that this distinction is meaningless.\n\nFor now I\u0027ll just make both of these const-ref for consistency but if anyway cares about the perf I can go make the router change to get move to work.",
      "parentUuid": "3e4710ea_b700f0cc",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d483df2_6d6e25a0",
        "filename": "cast/common/channel/connection_namespace_handler_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-08T23:29:12Z",
      "side": 1,
      "message": "This could almost be moved verbatim into the implementation :-)",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ec08326_f405dd7a",
        "filename": "cast/common/channel/connection_namespace_handler_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-11-19T02:17:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0d483df2_6d6e25a0",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4b8fe9f_c7fe6bf4",
        "filename": "cast/common/channel/connection_namespace_handler_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-08T23:29:12Z",
      "side": 1,
      "message": "This only differs from MakeConnectMessage by one string in the message payload.",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4bfbb408_a12d6ef8",
        "filename": "cast/common/channel/connection_namespace_handler_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-11-19T02:17:11Z",
      "side": 1,
      "message": "Slightly collapsed with MakeConnectMessage in message_util.cc.",
      "parentUuid": "c4b8fe9f_c7fe6bf4",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3bb837e0_b1e68da9",
        "filename": "cast/common/channel/connection_namespace_handler_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 115,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-08T23:29:12Z",
      "side": 1,
      "message": "There is some duplication in the expectations in ExpectXXXMessage.\n\nCan basic validation and extraction of the content be factored out, leaving expectations that are specific to each message type?",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31e783c0_2707a6f4",
        "filename": "cast/common/channel/connection_namespace_handler_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 115,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-11-19T02:17:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3bb837e0_b1e68da9",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "22d4c1b4_3fa7485e",
        "filename": "cast/common/channel/message_util.h",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-08T23:29:12Z",
      "side": 1,
      "message": "kKeyMessageType",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee20a492_314eaeb5",
        "filename": "cast/common/channel/message_util.h",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-11-19T02:17:11Z",
      "side": 1,
      "message": "Done as kMessageKeyType + others here.",
      "parentUuid": "22d4c1b4_3fa7485e",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "82832e7f_ce8c8d41",
        "filename": "cast/common/channel/message_util.h",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-08T23:29:12Z",
      "side": 1,
      "message": "IIRC these are all upper case in the original spec.",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27274a67_ed7f45cf",
        "filename": "cast/common/channel/message_util.h",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-11-19T02:17:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "82832e7f_ce8c8d41",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66af5961_792c4233",
        "filename": "cast/common/channel/namespace_router.h",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-08T23:29:12Z",
      "side": 1,
      "message": "namespace",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7cb74227_6e6f7dd2",
        "filename": "cast/common/channel/namespace_router.h",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-11-19T02:17:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "66af5961_792c4233",
      "revId": "c15add90764c3099f0f29161d2b1a08a424468a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}