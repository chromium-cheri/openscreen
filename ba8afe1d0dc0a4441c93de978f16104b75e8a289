{
  "comments": [
    {
      "key": {
        "uuid": "e0c7c305_aa026f13",
        "filename": "discovery/dnssd/public/dns_sd_instance.cc",
        "patchSetId": 4
      },
      "lineNbr": 18,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-06-17T18:48:31Z",
      "side": 1,
      "message": "Why 63?",
      "revId": "ba8afe1d0dc0a4441c93de978f16104b75e8a289",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04a14112_2d20ad7f",
        "filename": "discovery/dnssd/public/dns_sd_instance.cc",
        "patchSetId": 4
      },
      "lineNbr": 18,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-06-18T00:05:56Z",
      "side": 1,
      "message": "Done\n\nAdded documentation, and renamed to match constant in mdns_constants (which we unfortunately can\u0027t reference due to DEPS rules)",
      "parentUuid": "e0c7c305_aa026f13",
      "revId": "ba8afe1d0dc0a4441c93de978f16104b75e8a289",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2814e5e9_970929ca",
        "filename": "discovery/dnssd/public/dns_sd_instance.h",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-06-17T18:48:31Z",
      "side": 1,
      "message": "This template is a little confusing IMO. It\u0027s a variable args template where TSubstypes can be anything, as long as it\u0027s convertible to a std::vector? Any reason to not just take a std::vector?",
      "revId": "ba8afe1d0dc0a4441c93de978f16104b75e8a289",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef8947c3_c16cf0a2",
        "filename": "discovery/dnssd/public/dns_sd_instance.h",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-06-18T00:05:56Z",
      "side": 1,
      "message": "Guessing this is a poor variable naming issue (since you\u0027ve reviewed other CLs with similar variadic template -\u003e vector parameter passing trick recently)\n\nIt\u0027s a vector of Subtypes, which the parameter type is TSubtype. renaming to T instead of TSubtype for clarity",
      "parentUuid": "2814e5e9_970929ca",
      "revId": "ba8afe1d0dc0a4441c93de978f16104b75e8a289",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b09aa987_1c6c06bc",
        "filename": "discovery/dnssd/public/dns_sd_instance.h",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-06-18T18:20:45Z",
      "side": 1,
      "message": "This definitely helps, thanks.",
      "parentUuid": "ef8947c3_c16cf0a2",
      "revId": "ba8afe1d0dc0a4441c93de978f16104b75e8a289",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e8bd7c7c_28725e2b",
        "filename": "discovery/dnssd/public/dns_sd_instance_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 187,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-06-17T18:48:31Z",
      "side": 1,
      "message": "What are these char sets testing? I\u0027m not sure what the significance of each line is.",
      "revId": "ba8afe1d0dc0a4441c93de978f16104b75e8a289",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c625783f_3525e5ed",
        "filename": "discovery/dnssd/public/dns_sd_instance_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 187,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-06-18T00:05:56Z",
      "side": 1,
      "message": "Added documentation\n\nNo specific line has any specific meaning - they are all just various byte strings that don\u0027t match the expected form of UTF8 encoded chars.",
      "parentUuid": "e8bd7c7c_28725e2b",
      "revId": "ba8afe1d0dc0a4441c93de978f16104b75e8a289",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eb17162e_e31eee24",
        "filename": "discovery/dnssd/public/dns_sd_instance_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 210,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-06-17T18:48:31Z",
      "side": 1,
      "message": "const kCharsAlmostMaxLength?",
      "revId": "ba8afe1d0dc0a4441c93de978f16104b75e8a289",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3710fb7_ded020ac",
        "filename": "discovery/dnssd/public/dns_sd_instance_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 210,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-06-18T00:05:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eb17162e_e31eee24",
      "revId": "ba8afe1d0dc0a4441c93de978f16104b75e8a289",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "12a56b2a_f4ed90c5",
        "filename": "discovery/dnssd/public/dns_sd_instance_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 222,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-06-17T18:48:31Z",
      "side": 1,
      "message": "const kIn1 or kInOne?",
      "revId": "ba8afe1d0dc0a4441c93de978f16104b75e8a289",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01a908eb_105c039b",
        "filename": "discovery/dnssd/public/dns_sd_instance_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 222,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-06-18T00:05:56Z",
      "side": 1,
      "message": "Done here and below",
      "parentUuid": "12a56b2a_f4ed90c5",
      "revId": "ba8afe1d0dc0a4441c93de978f16104b75e8a289",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3135e5aa_450fbaf1",
        "filename": "util/std_util.h",
        "patchSetId": 4
      },
      "lineNbr": 61,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-06-17T18:48:31Z",
      "side": 1,
      "message": "This is the base case, right? Might be worth a comment on this template specialization.\n\nIdeally you could reserve the size of all of the elements to avoid copies, but I get that that\u0027s difficult/impossible.\n\nhttps://stackoverflow.com/questions/47941837/c-variadic-template-sum",
      "revId": "ba8afe1d0dc0a4441c93de978f16104b75e8a289",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "538dd164_538dafba",
        "filename": "util/std_util.h",
        "patchSetId": 4
      },
      "lineNbr": 61,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-06-18T00:05:56Z",
      "side": 1,
      "message": "\u003e This is the base case, right? Might be worth a comment on this template specialization.\n\nDone\n\n\u003e Ideally you could reserve the size of all of the elements to avoid copies, but I get that that\u0027s difficult/impossible.\n\nInitially I didn\u0027t think it was possible either. But think I\u0027ve got something - It over-allocates both vectors, but don\u0027t think that\u0027s a problem given that vector already does so internally when resizing. PTAL @ newest iteration",
      "parentUuid": "3135e5aa_450fbaf1",
      "revId": "ba8afe1d0dc0a4441c93de978f16104b75e8a289",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}