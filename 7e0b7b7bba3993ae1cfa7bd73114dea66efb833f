{
  "comments": [
    {
      "key": {
        "uuid": "9d580905_4ab7ae5f",
        "filename": "cast/common/mdns/mdns_parsing.cc",
        "patchSetId": 12
      },
      "lineNbr": 47,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-05-31T00:19:29Z",
      "side": 1,
      "message": "Bounds check for label_index?",
      "revId": "7e0b7b7bba3993ae1cfa7bd73114dea66efb833f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe9c1849_afaffca8",
        "filename": "cast/common/mdns/mdns_parsing.h",
        "patchSetId": 12
      },
      "lineNbr": 1,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-05-31T00:19:29Z",
      "side": 1,
      "message": "Fix copyright date here and in other files",
      "revId": "7e0b7b7bba3993ae1cfa7bd73114dea66efb833f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7873d2c_623f4678",
        "filename": "cast/common/mdns/mdns_parsing.h",
        "patchSetId": 12
      },
      "lineNbr": 5,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-05-31T00:19:29Z",
      "side": 1,
      "message": "Nit: mdns_parser.h would be more consistent with the names of similar files elsewhere in Chromium.  I don\u0027t feel strongly however.",
      "revId": "7e0b7b7bba3993ae1cfa7bd73114dea66efb833f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06009411_a649e2fc",
        "filename": "cast/common/mdns/mdns_parsing.h",
        "patchSetId": 12
      },
      "lineNbr": 18,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-05-31T00:19:29Z",
      "side": 1,
      "message": "Note that DEPS means this will be internal to cast/common.  If it is going to be used outside of cast/common, you\u0027ll need to check in an API to cast/common/public.",
      "revId": "7e0b7b7bba3993ae1cfa7bd73114dea66efb833f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dfbda14f_4e13e2bd",
        "filename": "cast/common/mdns/mdns_parsing.h",
        "patchSetId": 12
      },
      "lineNbr": 24,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-05-31T00:19:29Z",
      "side": 1,
      "message": "We have a similar class in osp/.  Maybe we can move this to osp_base and eliminate the other one if we like this one better.",
      "revId": "7e0b7b7bba3993ae1cfa7bd73114dea66efb833f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0659d68e_3b2f9204",
        "filename": "cast/common/mdns/mdns_parsing.h",
        "patchSetId": 12
      },
      "lineNbr": 37,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-05-31T00:19:29Z",
      "side": 1,
      "message": "1/Please document the return value.\n2/What happens if the caller constructs an invalid name (too long, empty label, bad characters, etc.)?",
      "revId": "7e0b7b7bba3993ae1cfa7bd73114dea66efb833f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbe10f8c_31330ac2",
        "filename": "cast/common/mdns/mdns_parsing.h",
        "patchSetId": 12
      },
      "lineNbr": 79,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-05-31T00:19:29Z",
      "side": 1,
      "message": "Shouldn\u0027t the value be a size_t to match the writer API?",
      "revId": "7e0b7b7bba3993ae1cfa7bd73114dea66efb833f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}