{
  "comments": [
    {
      "key": {
        "uuid": "24ffcfd8_9c4bbb91",
        "filename": "base/error.h",
        "patchSetId": 4
      },
      "lineNbr": 98,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-09-27T04:20:25Z",
      "side": 1,
      "message": "The WebRTC ErrorOr just uses Value here.  The chromium optional (and google3 StatusOr) do something like this:\n\n  union {\n    // |empty_| exists so that the union will always be initialized, even when\n    // it doesn\u0027t contain a value. Union members must be initialized for the\n    // constructor to be \u0027constexpr\u0027.\n    char empty_;\n    T value_;\n  };\n\n\n\nAnd if we want to save a few bytes, we could do \n\nunion {\n  Error error_;\n  Value value_;\n}\n\n\nI\u0027d be happy just using optional\u003cValue\u003e and then whether that\u0027s set or not indicates if we don\u0027t have an error or if we do.  It pretty much comes down to the same thing but is more readable.",
      "revId": "f9d856dcc6bed2223b1acbf85e4ea911b53506f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d9e53ea_cffe222b",
        "filename": "base/error.h",
        "patchSetId": 4
      },
      "lineNbr": 98,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2018-09-27T19:11:48Z",
      "side": 1,
      "message": "C++11 doesn\u0027t have std::optional yet.\n\nI tried the union approach, but adding a unrestricted (non-POD) union as a class member carries a lot of baggage, because the compiler deletes all the default constructor/destructor/move operations, so you have to define them yourself, resulting in some ugly code.\n\nstd::variant would be the best solution, as it\u0027s a native discriminated union, but it\u0027s not available until C++17.\n\nI think this is good enough for now.  If we want to shave bits in the future, we have a few options, like implementing our own optional, dealing with the non-POD union, or waiting for std::variant.",
      "parentUuid": "24ffcfd8_9c4bbb91",
      "revId": "f9d856dcc6bed2223b1acbf85e4ea911b53506f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "265d7458_e654ee9c",
        "filename": "base/error.h",
        "patchSetId": 4
      },
      "lineNbr": 98,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2018-09-28T18:24:07Z",
      "side": 1,
      "message": "We should add optional to our base classes just like Chromium did :).\n\nI\u0027m fine if you land this patch and we come back later to improve this.  But it\u0027s weird that it only supports pointers and not any other values.  Could you at least make it just \"Value value_\" and then for your current use case use ErrorOr\u003cunique_ptr\u003cT\u003e\u003e?  That seems like an improvement.  \n\nBut again, go ahead and land and improve it later.",
      "parentUuid": "2d9e53ea_cffe222b",
      "revId": "f9d856dcc6bed2223b1acbf85e4ea911b53506f9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}