{
  "comments": [
    {
      "key": {
        "uuid": "a45f46c6_49562ea9",
        "filename": "discovery/mdns/mdns_publisher.cc",
        "patchSetId": 5
      },
      "lineNbr": 77,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-07T22:00:12Z",
      "side": 1,
      "message": "Can you do this with methods like CanBeRegistered(type) in mdns_records.h with switch statements?  That avoid allocating/iterating over vectors.\n\nThe compiler will hopefully optimize them down to:\n\nif (dns_type \u003e \u003cvalue\u003e) return Error",
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19bf0b30_5f4fd837",
        "filename": "discovery/mdns/mdns_publisher.cc",
        "patchSetId": 5
      },
      "lineNbr": 77,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-06-09T02:49:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a45f46c6_49562ea9",
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "14f3ea1b_f0ab9ef3",
        "filename": "discovery/mdns/mdns_publisher.h",
        "patchSetId": 5
      },
      "lineNbr": 61,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-07T22:00:12Z",
      "side": 1,
      "message": "SGTM to not support publishing OPT records for the time being.",
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6721daae_1f77121b",
        "filename": "discovery/mdns/mdns_querier.cc",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-07T22:00:12Z",
      "side": 1,
      "message": "I would just add CanBeRegistered(), CanBeQueried(), CanBeProcessed() etc. to mdns_records.h",
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e2dfb47_9424b615",
        "filename": "discovery/mdns/mdns_querier.cc",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-06-09T02:49:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6721daae_1f77121b",
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1964782c_797bf281",
        "filename": "discovery/mdns/mdns_records.h",
        "patchSetId": 5
      },
      "lineNbr": 85,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-07T22:00:12Z",
      "side": 1,
      "message": "Prefer IsRoot()",
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "456ae367_5657555f",
        "filename": "discovery/mdns/mdns_records.h",
        "patchSetId": 5
      },
      "lineNbr": 85,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-06-09T02:49:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1964782c_797bf281",
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e2e1a2e_6c155f04",
        "filename": "discovery/mdns/mdns_records.h",
        "patchSetId": 5
      },
      "lineNbr": 375,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-07T22:00:12Z",
      "side": 1,
      "message": "I believe these are kept by IANA.  Can you link to the appropriate part of the registry?  I can dig it up if you are not sure of where that is.",
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd9d71ab_33f9a656",
        "filename": "discovery/mdns/mdns_records.h",
        "patchSetId": 5
      },
      "lineNbr": 375,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-06-09T02:49:25Z",
      "side": 1,
      "message": "I wasn\u0027t able to find them, but I did find some examples of OPT code RFCs:\n- https://tools.ietf.org/html/rfc7828\n- https://tools.ietf.org/html/rfc7830\n- https://tools.ietf.org/html/rfc7871\n\nCan link these if you\u0027d like\n\nThe line here is directly from RFC6891. Adding a link to that section.",
      "parentUuid": "8e2e1a2e_6c155f04",
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7850b3d4_3abe224a",
        "filename": "discovery/mdns/mdns_records.h",
        "patchSetId": 5
      },
      "lineNbr": 375,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-09T18:31:26Z",
      "side": 1,
      "message": "Here is the link I was referring to.\n\nhttps://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-11",
      "parentUuid": "dd9d71ab_33f9a656",
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb33922c_e1745d2b",
        "filename": "discovery/mdns/mdns_records.h",
        "patchSetId": 5
      },
      "lineNbr": 375,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-06-10T18:35:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7850b3d4_3abe224a",
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "087e5bb0_7ab043d1",
        "filename": "discovery/mdns/mdns_records.h",
        "patchSetId": 5
      },
      "lineNbr": 379,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-07T22:00:12Z",
      "side": 1,
      "message": "Maybe data_size?  I don\u0027t feel strongly",
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b673de2_97c7a51e",
        "filename": "discovery/mdns/mdns_records.h",
        "patchSetId": 5
      },
      "lineNbr": 379,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-06-09T02:49:25Z",
      "side": 1,
      "message": "I used length here because \"option length\" is the name used in the RFC, so it seems clearer IMHO: https://tools.ietf.org/html/rfc6891#section-6.1.2\nAdding this link to the struct itself for clarity\n\nDefinitely open to changing - your call.\n\nWDYT?",
      "parentUuid": "087e5bb0_7ab043d1",
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46c68e00_df41e3ba",
        "filename": "discovery/mdns/mdns_records.h",
        "patchSetId": 5
      },
      "lineNbr": 379,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-09T18:31:26Z",
      "side": 1,
      "message": "SGTM",
      "parentUuid": "2b673de2_97c7a51e",
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "603db04e_85ec0cc4",
        "filename": "discovery/mdns/mdns_records.h",
        "patchSetId": 5
      },
      "lineNbr": 391,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-07T22:00:12Z",
      "side": 1,
      "message": "Can this just take std::vector\u003cOption\u003e since you are moving the values into one anyway?",
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01c49d84_a3137092",
        "filename": "discovery/mdns/mdns_records.h",
        "patchSetId": 5
      },
      "lineNbr": 391,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-06-09T02:49:25Z",
      "side": 1,
      "message": "I also have an overload for that below. To clarify, would you like me to remove this ctor?\n\nI included both here because in the case of NSEC records, having this ctor option too made for much more readable code in places",
      "parentUuid": "603db04e_85ec0cc4",
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "404660e5_8ab35691",
        "filename": "discovery/mdns/mdns_records.h",
        "patchSetId": 5
      },
      "lineNbr": 391,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-09T18:31:26Z",
      "side": 1,
      "message": "Can you point out the code that uses the variable length arguments ctor?",
      "parentUuid": "01c49d84_a3137092",
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4aa6c6ec_a61c93bb",
        "filename": "discovery/mdns/mdns_records.h",
        "patchSetId": 5
      },
      "lineNbr": 391,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-06-10T18:35:09Z",
      "side": 1,
      "message": "The short version is this makes ctor calls with only 1 or 2 elements more readable. An alternative is to special-case those out as separate ctors, if you prefer.\n\nFor OPT, see Unit Tests file below (lines 458, 478-480) in this CL iteration\n\nFor NSEC, this is actually the primary ctor used. I can dig up UT occurrences if you like, but outside of UTs, though, we rarely create NSEC records (they are only used to respond negatively to incoming queries):\nhttps://source.chromium.org/chromium/chromium/src/+/master:third_party/openscreen/src/discovery/mdns/mdns_responder.cc;l\u003d53?q\u003dmdns_responder.cc\u0026ss\u003dchromium\u0026originalUrl\u003dhttps:%2F%2Fcs.chromium.org%2F",
      "parentUuid": "404660e5_8ab35691",
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57c7b876_77d1cec8",
        "filename": "discovery/mdns/mdns_records.h",
        "patchSetId": 5
      },
      "lineNbr": 412,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-07T22:00:12Z",
      "side": 1,
      "message": "Can you use public fields vs. getters like the the other Rdata structs?",
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ec87c64_9cb4cfb1",
        "filename": "discovery/mdns/mdns_records.h",
        "patchSetId": 5
      },
      "lineNbr": 412,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-06-09T02:49:25Z",
      "side": 1,
      "message": "These fields have been removed per below comment. Leaving open pending your response to that.",
      "parentUuid": "57c7b876_77d1cec8",
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2cfd9e6_c5dd2638",
        "filename": "discovery/mdns/mdns_records.h",
        "patchSetId": 5
      },
      "lineNbr": 430,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-06-06T07:40:03Z",
      "side": 1,
      "message": "The alternative here is to expose these details as a function\n\n\u003e static uint8_T GetExtendedRcode(const MdsnRecord\u0026 record) {....}\n\nAnd similar for the other functions. Couldn\u0027t decide which approach would be cleaner (Because these details really only apply to one specific MdnsRecord Type\n\nWDYT?",
      "range": {
        "startLine": 410,
        "startChar": 0,
        "endLine": 430,
        "endChar": 33
      },
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0de68c82_2149bea2",
        "filename": "discovery/mdns/mdns_records.h",
        "patchSetId": 5
      },
      "lineNbr": 430,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-07T22:00:12Z",
      "side": 1,
      "message": "This approach LGTM.",
      "parentUuid": "b2cfd9e6_c5dd2638",
      "range": {
        "startLine": 410,
        "startChar": 0,
        "endLine": 430,
        "endChar": 33
      },
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0df653d5_c0c0af6a",
        "filename": "discovery/mdns/mdns_records.h",
        "patchSetId": 5
      },
      "lineNbr": 430,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-06-09T02:49:25Z",
      "side": 1,
      "message": "After looking at the reader code, I think the above alternative would be much cleaner and much more consistent with the other rdata classes.\n\nFor now, I\u0027ve switched to that. If you prefer, I can change back to the approach in this iteration.",
      "parentUuid": "0de68c82_2149bea2",
      "range": {
        "startLine": 410,
        "startChar": 0,
        "endLine": 430,
        "endChar": 33
      },
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce24b198_490c319c",
        "filename": "discovery/mdns/mdns_records.h",
        "patchSetId": 5
      },
      "lineNbr": 430,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-09T18:31:26Z",
      "side": 1,
      "message": "I can\u0027t really tell without seeing the code that would use these functions.  In general, though, it is much preferred to define class-specific functions on the class itself.",
      "parentUuid": "0df653d5_c0c0af6a",
      "range": {
        "startLine": 410,
        "startChar": 0,
        "endLine": 430,
        "endChar": 33
      },
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa8389d5_4037fb22",
        "filename": "discovery/mdns/mdns_records.h",
        "patchSetId": 5
      },
      "lineNbr": 430,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-06-10T18:35:09Z",
      "side": 1,
      "message": "Good point about \"seeing the code\". I agree it\u0027s hard to know before that - right now, these functions are being added for completeness rather than for use.\n\nWDYT about removing them from this CL entirely and filing a bug with a link to this CL? Then, when they are needed, we will have both approaches documented and can pick whichever one is better suited to the using code",
      "parentUuid": "ce24b198_490c319c",
      "range": {
        "startLine": 410,
        "startChar": 0,
        "endLine": 430,
        "endChar": 33
      },
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f31a3204_f1bfd743",
        "filename": "discovery/mdns/mdns_records.h",
        "patchSetId": 5
      },
      "lineNbr": 430,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-10T22:51:26Z",
      "side": 1,
      "message": "Removing SGTM, best to include them in a patch that actually uses them.",
      "parentUuid": "aa8389d5_4037fb22",
      "range": {
        "startLine": 410,
        "startChar": 0,
        "endLine": 430,
        "endChar": 33
      },
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2108a499_121d433d",
        "filename": "discovery/mdns/mdns_records.h",
        "patchSetId": 5
      },
      "lineNbr": 444,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-07T22:00:12Z",
      "side": 1,
      "message": "Nit: extra newline",
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0691f614_bc97410b",
        "filename": "discovery/mdns/mdns_records.h",
        "patchSetId": 5
      },
      "lineNbr": 444,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-06-09T02:49:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2108a499_121d433d",
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "723abca0_48dfce94",
        "filename": "discovery/mdns/mdns_responder.cc",
        "patchSetId": 5
      },
      "lineNbr": 49,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-07T22:00:12Z",
      "side": 1,
      "message": "I usually prefer using default: as a not-reachable fallthrough... not sure if there is a style consensus on this...",
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04dde375_5786fd75",
        "filename": "discovery/mdns/mdns_responder.cc",
        "patchSetId": 5
      },
      "lineNbr": 49,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-06-09T02:49:25Z",
      "side": 1,
      "message": "The reason I want to avoid default here is that this approach will trigger a compiler failure if further DnsType enum values are added and not handled in the switch. It\u0027s easy to forget to update this switch statement otherwise, which can lead to unexpected bugs\n\nAdding comment to this effect.\n\nWDYT?",
      "parentUuid": "723abca0_48dfce94",
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88495267_387e5f45",
        "filename": "discovery/mdns/mdns_responder.cc",
        "patchSetId": 5
      },
      "lineNbr": 49,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-09T18:31:26Z",
      "side": 1,
      "message": "Compiler checks are even better.\n\nI\u0027m still a little confused by this function because it calls NOTREACHED() for some legitimate DNS types.",
      "parentUuid": "04dde375_5786fd75",
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "542f490b_935cf7ff",
        "filename": "discovery/mdns/mdns_responder.cc",
        "patchSetId": 5
      },
      "lineNbr": 49,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-06-10T18:35:09Z",
      "side": 1,
      "message": "This GetTtlForRecordType() method will only be called when creating NSEC record types. We never expect an incoming query to be asking for NSEC or OPT records (the former doesn\u0027t make sense, and the latter we don\u0027t support), so we should never be adding a negative response for either of the two record types. Because NSEC records are only used for this case, these two unsupported types should never get hit\n\nUpdating method name and adding comment to this effect",
      "parentUuid": "88495267_387e5f45",
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34a4d5ef_9894d1ca",
        "filename": "discovery/mdns/mdns_responder.cc",
        "patchSetId": 5
      },
      "lineNbr": 49,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-10T22:51:26Z",
      "side": 1,
      "message": "Okay, that makes sense. Maybe write:\n\nOSP_NOTREACHED() \u003c\u003c \"NSEC TTL not supported for \" \u003c\u003c type",
      "parentUuid": "542f490b_935cf7ff",
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd13263c_38657314",
        "filename": "discovery/mdns/mdns_writer.cc",
        "patchSetId": 5
      },
      "lineNbr": 212,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-06-07T22:00:12Z",
      "side": 1,
      "message": "OSP_NOTIMPLEMENTED()",
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a3865da_762242ad",
        "filename": "discovery/mdns/mdns_writer.cc",
        "patchSetId": 5
      },
      "lineNbr": 212,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-06-09T02:49:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bd13263c_38657314",
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "69b8f99f_225d57ab",
        "filename": "discovery/mdns/public/mdns_constants.h",
        "patchSetId": 5
      },
      "lineNbr": 337,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-06-06T04:09:46Z",
      "side": 1,
      "message": "I am intentionally waiting until the follow-up parsing patch to change this to include kOPT",
      "range": {
        "startLine": 335,
        "startChar": 0,
        "endLine": 337,
        "endChar": 50
      },
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d036a4e3_a92d8acc",
        "filename": "discovery/mdns/public/mdns_constants.h",
        "patchSetId": 5
      },
      "lineNbr": 337,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-06-09T02:49:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "69b8f99f_225d57ab",
      "range": {
        "startLine": 335,
        "startChar": 0,
        "endLine": 337,
        "endChar": 50
      },
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6480f5a6_df211ae2",
        "filename": "third_party/abseil/BUILD.gn",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-06-06T04:09:46Z",
      "side": 1,
      "message": "Leaving this as is pending the resolution of discussion in chat",
      "range": {
        "startLine": 48,
        "startChar": 6,
        "endLine": 48,
        "endChar": 37
      },
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "215ba0e2_7c78cbc5",
        "filename": "third_party/abseil/BUILD.gn",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-06-09T02:49:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6480f5a6_df211ae2",
      "range": {
        "startLine": 48,
        "startChar": 6,
        "endLine": 48,
        "endChar": 37
      },
      "revId": "95c43a0c2eaeb9ede2178dbf73c5cde9b4e441d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}