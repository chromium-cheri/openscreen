{
  "comments": [
    {
      "key": {
        "uuid": "1cbcf557_d9f82f34",
        "filename": "platform/base/tls_credentials.cc",
        "patchSetId": 5
      },
      "lineNbr": 37,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-09-09T23:22:38Z",
      "side": 1,
      "message": "This would copy whatever is in field and then destroy the copy after the call to X509_NAME_add_entry_by_txt. If X509_NAME_add_entry_by_txt holds onto the pointer for whatever reason, that would result in memory corruption.",
      "range": {
        "startLine": 37,
        "startChar": 31,
        "endLine": 37,
        "endChar": 57
      },
      "revId": "f05613f2d708daf1d3efb45bbd49b761846871fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6236e01_e3812281",
        "filename": "platform/base/tls_credentials.cc",
        "patchSetId": 5
      },
      "lineNbr": 38,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-09-08T19:47:48Z",
      "side": 1,
      "message": "Is this making a copy?  string_view doesn\u0027t have ownership over its contents IIRC.",
      "revId": "f05613f2d708daf1d3efb45bbd49b761846871fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c19ed8f_3b2561c1",
        "filename": "platform/base/tls_credentials.cc",
        "patchSetId": 5
      },
      "lineNbr": 39,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-09-08T19:47:48Z",
      "side": 1,
      "message": "Is this always the byte length of data()?  (Are we sure value doesn\u0027t have multibyte characters?)",
      "revId": "f05613f2d708daf1d3efb45bbd49b761846871fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c93992b2_611bf7a1",
        "filename": "platform/base/tls_credentials.cc",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-09-08T19:47:48Z",
      "side": 1,
      "message": "Unique in what scope?  An integer counter isn\u0027t very unique.",
      "revId": "f05613f2d708daf1d3efb45bbd49b761846871fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68617ecc_6ca013ac",
        "filename": "platform/base/tls_credentials.cc",
        "patchSetId": 5
      },
      "lineNbr": 49,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-09-09T23:22:38Z",
      "side": 1,
      "message": "atomic?",
      "range": {
        "startLine": 49,
        "startChar": 2,
        "endLine": 49,
        "endChar": 26
      },
      "revId": "f05613f2d708daf1d3efb45bbd49b761846871fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d166342_26e781c0",
        "filename": "platform/base/tls_credentials.cc",
        "patchSetId": 5
      },
      "lineNbr": 53,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-09-08T19:47:48Z",
      "side": 1,
      "message": "It should be legal to use std::chrono here.  Can you do that and convert to time_t?",
      "revId": "f05613f2d708daf1d3efb45bbd49b761846871fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bdfc40c1_7d4d0707",
        "filename": "platform/base/tls_credentials.cc",
        "patchSetId": 5
      },
      "lineNbr": 75,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-09-09T23:22:38Z",
      "side": 1,
      "message": "Could you please put it in bssl::UniquePtr?",
      "range": {
        "startLine": 75,
        "startChar": 2,
        "endLine": 75,
        "endChar": 41
      },
      "revId": "f05613f2d708daf1d3efb45bbd49b761846871fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74f25231_395f95b8",
        "filename": "platform/base/tls_credentials.cc",
        "patchSetId": 5
      },
      "lineNbr": 82,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-09-09T23:22:38Z",
      "side": 1,
      "message": "Can you use EVP_Digest to perform complete hashing in one call?",
      "range": {
        "startLine": 76,
        "startChar": 2,
        "endLine": 82,
        "endChar": 27
      },
      "revId": "f05613f2d708daf1d3efb45bbd49b761846871fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33fc5d41_ab214cc8",
        "filename": "platform/base/tls_credentials.cc",
        "patchSetId": 5
      },
      "lineNbr": 92,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-09-08T19:47:48Z",
      "side": 1,
      "message": "Can we use ErrorOr here instead of magic values?",
      "revId": "f05613f2d708daf1d3efb45bbd49b761846871fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f55b422c_fc338e1e",
        "filename": "platform/base/tls_credentials.cc",
        "patchSetId": 5
      },
      "lineNbr": 127,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-09-08T19:47:48Z",
      "side": 1,
      "message": "WriteOutKey might be simpler by taking the vector as an output parameter and returning an Error.",
      "revId": "f05613f2d708daf1d3efb45bbd49b761846871fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05faed95_e99c021f",
        "filename": "platform/base/tls_credentials.cc",
        "patchSetId": 5
      },
      "lineNbr": 145,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-09-08T19:47:48Z",
      "side": 1,
      "message": "In the current code, this could be empty, in which case the hash is meaningless.",
      "revId": "f05613f2d708daf1d3efb45bbd49b761846871fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c054a57_1b683f5c",
        "filename": "platform/base/tls_credentials.cc",
        "patchSetId": 5
      },
      "lineNbr": 157,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-09-08T19:47:48Z",
      "side": 1,
      "message": "What is this function doing with the address of a null pointer?  Is it an output parameter?",
      "revId": "f05613f2d708daf1d3efb45bbd49b761846871fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89f9bc6d_64a74bcc",
        "filename": "platform/base/tls_credentials.cc",
        "patchSetId": 5
      },
      "lineNbr": 160,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-09-08T19:47:48Z",
      "side": 1,
      "message": "Prefer ErrorOr to returning magic values.",
      "revId": "f05613f2d708daf1d3efb45bbd49b761846871fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "677ca312_fe200878",
        "filename": "platform/base/tls_credentials.cc",
        "patchSetId": 5
      },
      "lineNbr": 169,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-09-08T19:47:48Z",
      "side": 1,
      "message": "Is this just a roll of our dependency?  Can we do that now before writing code that makes me cringe a bit?",
      "revId": "f05613f2d708daf1d3efb45bbd49b761846871fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0776ca45_c0ca8835",
        "filename": "platform/base/tls_credentials.cc",
        "patchSetId": 5
      },
      "lineNbr": 177,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-09-08T19:47:48Z",
      "side": 1,
      "message": "Does bssl::UniquePtr have a move constructor?",
      "revId": "f05613f2d708daf1d3efb45bbd49b761846871fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26797907_4409c57b",
        "filename": "platform/base/tls_credentials.cc",
        "patchSetId": 5
      },
      "lineNbr": 177,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-09-09T23:22:38Z",
      "side": 1,
      "message": "It has to, otherwise ownership wouldn\u0027t be transferrable",
      "parentUuid": "0776ca45_c0ca8835",
      "revId": "f05613f2d708daf1d3efb45bbd49b761846871fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a081a822_1e537a34",
        "filename": "platform/base/tls_credentials.cc",
        "patchSetId": 5
      },
      "lineNbr": 177,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-09-10T00:14:11Z",
      "side": 1,
      "message": "bssl::UniquePtr is just an alias provided as part of boringSSL for std::UniquePtr\u003cT, CustomDeleter\u003cT\u003e\u003e, since all of the BoringSSL types have custom deleters that are written into the library",
      "parentUuid": "26797907_4409c57b",
      "revId": "f05613f2d708daf1d3efb45bbd49b761846871fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52545a33_bfb85adb",
        "filename": "platform/base/tls_credentials.h",
        "patchSetId": 5
      },
      "lineNbr": 47,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-09-09T23:22:38Z",
      "side": 1,
      "message": "key_pair?",
      "range": {
        "startLine": 47,
        "startChar": 18,
        "endLine": 47,
        "endChar": 25
      },
      "revId": "f05613f2d708daf1d3efb45bbd49b761846871fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65d7502d_3e6f8d0d",
        "filename": "platform/base/tls_credentials.h",
        "patchSetId": 5
      },
      "lineNbr": 67,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-09-08T19:47:48Z",
      "side": 1,
      "message": "s/lazy loaded/initialized/ ?",
      "revId": "f05613f2d708daf1d3efb45bbd49b761846871fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4fe63d47_1b26e20e",
        "filename": "platform/base/tls_credentials.h",
        "patchSetId": 5
      },
      "lineNbr": 68,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-09-10T00:14:11Z",
      "side": 1,
      "message": "Can we persist the private key in memory unencrypted? I know this is a security risk, but I\u0027m not sure that matters for our purposes",
      "range": {
        "startLine": 68,
        "startChar": 40,
        "endLine": 68,
        "endChar": 59
      },
      "revId": "f05613f2d708daf1d3efb45bbd49b761846871fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05fc7b02_260eb551",
        "filename": "util/std_util.h",
        "patchSetId": 5
      },
      "lineNbr": 29,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-09-09T23:22:38Z",
      "side": 1,
      "message": "I\u0027m against adding this method to std_util.\nIf I see a method ToString called on a vector, I have no idea what it does. Does it put elements into a stringstream to make it readable/printable? If yes, does it use a separator? Or does it make a byte string of everything appended together? And so on.\nI think others would have a similar confusion.",
      "range": {
        "startLine": 29,
        "startChar": 18,
        "endLine": 29,
        "endChar": 26
      },
      "revId": "f05613f2d708daf1d3efb45bbd49b761846871fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}