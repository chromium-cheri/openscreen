{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "decdb82d_84273252",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2021-01-27T20:20:06Z",
      "side": 1,
      "message": "This patch was a little big to grok in one go.  IMO it would be helpful to split it into a relation chain where the platform/ changes are separate from the streaming and discovery changes.  If you keep it in one patch, that\u0027s okay, but it may take longer to get through review for me.",
      "revId": "f2af5322bc709c226860ba1cf6daf5f372c60852",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8d94bec_bb35e9c9",
        "filename": "cast/streaming/environment.cc",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2021-01-27T20:20:06Z",
      "side": 1,
      "message": "Please DCHECK() that socket_subcribers_ is empty in the dtor.",
      "revId": "f2af5322bc709c226860ba1cf6daf5f372c60852",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "56ff2232_dc11e1ee",
        "filename": "cast/streaming/environment.cc",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-01-28T00:07:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d8d94bec_bb35e9c9",
      "revId": "f2af5322bc709c226860ba1cf6daf5f372c60852",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0282d6a1_5ecbfe62",
        "filename": "cast/streaming/environment.h",
        "patchSetId": 6
      },
      "lineNbr": 36,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2021-01-27T20:20:06Z",
      "side": 1,
      "message": "As a caller, I\u0027m not sure what to do with this state. Presumably some methods are okay to call in specific state(s).  Can you document that more explicitly?\n\nOr is this intended to be internal to the implementation of the Environment?",
      "revId": "f2af5322bc709c226860ba1cf6daf5f372c60852",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23cd9ccc_f7a35272",
        "filename": "cast/streaming/environment.h",
        "patchSetId": 6
      },
      "lineNbr": 36,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-01-28T00:07:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0282d6a1_5ecbfe62",
      "revId": "f2af5322bc709c226860ba1cf6daf5f372c60852",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca048f77_4c1ccdb4",
        "filename": "cast/streaming/environment.h",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2021-01-27T20:20:06Z",
      "side": 1,
      "message": "bikeshed: kStarting?",
      "revId": "f2af5322bc709c226860ba1cf6daf5f372c60852",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e487776b_152e87e6",
        "filename": "cast/streaming/environment.h",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-01-28T00:07:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ca048f77_4c1ccdb4",
      "revId": "f2af5322bc709c226860ba1cf6daf5f372c60852",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e44f15e_ce34c464",
        "filename": "cast/streaming/environment.h",
        "patchSetId": 6
      },
      "lineNbr": 46,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2021-01-27T20:20:06Z",
      "side": 1,
      "message": "kInvalid",
      "revId": "f2af5322bc709c226860ba1cf6daf5f372c60852",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "47e306d3_cad38c53",
        "filename": "cast/streaming/environment.h",
        "patchSetId": 6
      },
      "lineNbr": 46,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-01-28T00:07:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7e44f15e_ce34c464",
      "revId": "f2af5322bc709c226860ba1cf6daf5f372c60852",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4602daf7_ba46e0aa",
        "filename": "cast/streaming/environment.h",
        "patchSetId": 6
      },
      "lineNbr": 89,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2021-01-27T20:20:06Z",
      "side": 1,
      "message": "Is this always state of the socket, or the state of the environment as a whole?  I think if it\u0027s just for the socket, the naming should reflect that: SocketCallbacks, SocketState...",
      "revId": "f2af5322bc709c226860ba1cf6daf5f372c60852",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "28f6f12b_da04a813",
        "filename": "cast/streaming/environment.h",
        "patchSetId": 6
      },
      "lineNbr": 89,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-01-28T00:07:05Z",
      "side": 1,
      "message": "Fair enough, I went back and forth on this.",
      "parentUuid": "4602daf7_ba46e0aa",
      "revId": "f2af5322bc709c226860ba1cf6daf5f372c60852",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "688af13b_b9b8ec88",
        "filename": "cast/streaming/environment.h",
        "patchSetId": 6
      },
      "lineNbr": 91,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2021-01-27T20:20:06Z",
      "side": 1,
      "message": "bikeshed: since you don\u0027t need to mock behavior for tests, just override the state, I would declare the tests as private friends and have them set the variable directly (or add a private SetForTest() API).\n\nThis avoids adding another vtable redirection to production code.",
      "revId": "f2af5322bc709c226860ba1cf6daf5f372c60852",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e12cfa51_09780219",
        "filename": "cast/streaming/environment.h",
        "patchSetId": 6
      },
      "lineNbr": 91,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-01-28T00:07:05Z",
      "side": 1,
      "message": "Makes sense to me, I can do that.",
      "parentUuid": "688af13b_b9b8ec88",
      "revId": "f2af5322bc709c226860ba1cf6daf5f372c60852",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48de38d1_8b5917f5",
        "filename": "cast/streaming/environment.h",
        "patchSetId": 6
      },
      "lineNbr": 93,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2021-01-27T20:20:06Z",
      "side": 1,
      "message": "I only see one possible subscriber in this patch, unless I missed something.  Can this be accomplished by using a single Callbacks object instead of an observer pattern?",
      "revId": "f2af5322bc709c226860ba1cf6daf5f372c60852",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "921f8bf0_bafcb143",
        "filename": "cast/streaming/environment.h",
        "patchSetId": 6
      },
      "lineNbr": 93,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-01-28T00:07:05Z",
      "side": 1,
      "message": "I think you are right, I can\u0027t see a point currently where we would have multiple subscribers. I\u0027m not sure if our long term plan is to always do this though.",
      "parentUuid": "48de38d1_8b5917f5",
      "revId": "f2af5322bc709c226860ba1cf6daf5f372c60852",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0bd72a1b_de0cbf91",
        "filename": "cast/streaming/receiver_session.cc",
        "patchSetId": 6
      },
      "lineNbr": 42,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2021-01-27T20:20:06Z",
      "side": 1,
      "message": "Is Stream moveable?  That would simplify this code vs. having to wrap in unique_ptr",
      "revId": "f2af5322bc709c226860ba1cf6daf5f372c60852",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e88ee853_7eb6dd4b",
        "filename": "cast/streaming/receiver_session.cc",
        "patchSetId": 6
      },
      "lineNbr": 42,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-01-28T00:07:05Z",
      "side": 1,
      "message": "Yes, it is, however the stream may be not present in some cases and since we can\u0027t use optional I think we should expose as a unique pointer.",
      "parentUuid": "0bd72a1b_de0cbf91",
      "revId": "f2af5322bc709c226860ba1cf6daf5f372c60852",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a6b4b2b_4db4287f",
        "filename": "cast/streaming/receiver_session.cc",
        "patchSetId": 6
      },
      "lineNbr": 157,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2021-01-27T20:20:06Z",
      "side": 1,
      "message": "!IsValid()?",
      "revId": "f2af5322bc709c226860ba1cf6daf5f372c60852",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ca5a13b_1695767c",
        "filename": "cast/streaming/receiver_session.cc",
        "patchSetId": 6
      },
      "lineNbr": 157,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-01-28T00:07:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6a6b4b2b_4db4287f",
      "revId": "f2af5322bc709c226860ba1cf6daf5f372c60852",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d876c5c_c2d88b00",
        "filename": "cast/streaming/receiver_session.cc",
        "patchSetId": 6
      },
      "lineNbr": 166,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2021-01-27T20:20:06Z",
      "side": 1,
      "message": "Should this check be done first, before processing the message?",
      "revId": "f2af5322bc709c226860ba1cf6daf5f372c60852",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51bfe8d6_88789906",
        "filename": "cast/streaming/receiver_session.cc",
        "patchSetId": 6
      },
      "lineNbr": 166,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-01-28T00:07:05Z",
      "side": 1,
      "message": "I don\u0027t think so--we need to send a message regardless. We have to get the sequence number from the message to respond as well.",
      "parentUuid": "3d876c5c_c2d88b00",
      "revId": "f2af5322bc709c226860ba1cf6daf5f372c60852",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19650a9a_ae5657e0",
        "filename": "cast/streaming/receiver_session.cc",
        "patchSetId": 6
      },
      "lineNbr": 193,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2021-01-27T20:20:06Z",
      "side": 1,
      "message": "Do we need to check the socket state before sending the answer?",
      "revId": "f2af5322bc709c226860ba1cf6daf5f372c60852",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cbbcc4cf_03864853",
        "filename": "cast/streaming/receiver_session.cc",
        "patchSetId": 6
      },
      "lineNbr": 193,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-01-28T00:07:05Z",
      "side": 1,
      "message": "I\u0027ll rename the environment state to socket state to clarify this.",
      "parentUuid": "19650a9a_ae5657e0",
      "revId": "f2af5322bc709c226860ba1cf6daf5f372c60852",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "742e0efa_cc84cc6a",
        "filename": "cast/streaming/receiver_session.h",
        "patchSetId": 6
      },
      "lineNbr": 118,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2021-01-27T20:20:06Z",
      "side": 1,
      "message": "Do these need to be public?",
      "revId": "f2af5322bc709c226860ba1cf6daf5f372c60852",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "466a718b_169f26a6",
        "filename": "cast/streaming/receiver_session.h",
        "patchSetId": 6
      },
      "lineNbr": 118,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-01-28T00:07:05Z",
      "side": 1,
      "message": "Yes, and they should be override methods as well.\n\nFor one, it\u0027s part of the API of the class (even if we could make its implementation of Subscriber private) and two it\u0027s necessary for testing.",
      "parentUuid": "742e0efa_cc84cc6a",
      "revId": "f2af5322bc709c226860ba1cf6daf5f372c60852",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03df7a49_d77abc93",
        "filename": "cast/streaming/receiver_session.h",
        "patchSetId": 6
      },
      "lineNbr": 167,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2021-01-27T20:20:06Z",
      "side": 1,
      "message": "Nit: If you value-initialized sequence_number, you could just hold this as a normal member variable and set its values later, which avoids the overhead of allocating a unique_ptr.\n\nI don\u0027t feel strongly though.",
      "revId": "f2af5322bc709c226860ba1cf6daf5f372c60852",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8c31e865_3d006c59",
        "filename": "cast/streaming/receiver_session.h",
        "patchSetId": 6
      },
      "lineNbr": 167,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-01-28T00:07:05Z",
      "side": 1,
      "message": "I like this better because it\u0027s obvious it can be null or not set. This is definitely a place where I would want to use std::optional.",
      "parentUuid": "03df7a49_d77abc93",
      "revId": "f2af5322bc709c226860ba1cf6daf5f372c60852",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23c5c496_9395eb43",
        "filename": "platform/api/udp_socket.h",
        "patchSetId": 6
      },
      "lineNbr": 37,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-01-27T18:41:07Z",
      "side": 1,
      "message": "I don\u0027t think I\u0027ve seen us provide an \"optional\" callback but I think it might be a good idea here. Open to opinions.",
      "revId": "f2af5322bc709c226860ba1cf6daf5f372c60852",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d233864d_22671b5d",
        "filename": "platform/api/udp_socket.h",
        "patchSetId": 6
      },
      "lineNbr": 37,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2021-01-27T20:20:06Z",
      "side": 1,
      "message": "I would prefer consistency here with the existing API unless there is a compelling reason (i.e. backwards compatibility with embedders)",
      "parentUuid": "23c5c496_9395eb43",
      "revId": "f2af5322bc709c226860ba1cf6daf5f372c60852",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d81b381_4ad7da89",
        "filename": "platform/api/udp_socket.h",
        "patchSetId": 6
      },
      "lineNbr": 37,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-01-28T00:07:05Z",
      "side": 1,
      "message": "Backwards compatibility is the major reason. If we require all embedders to implement, I\u0027ll have to edit the autoroll patch to include the definitions (which is fine, I think).",
      "parentUuid": "d233864d_22671b5d",
      "revId": "f2af5322bc709c226860ba1cf6daf5f372c60852",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "54a9207e_8e805c38",
        "filename": "platform/api/udp_socket.h",
        "patchSetId": 6
      },
      "lineNbr": 37,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2021-01-28T18:11:59Z",
      "side": 1,
      "message": "Seems fine, as this callback is optional to implement.",
      "parentUuid": "9d81b381_4ad7da89",
      "revId": "f2af5322bc709c226860ba1cf6daf5f372c60852",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}