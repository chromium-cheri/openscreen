{
  "comments": [
    {
      "key": {
        "uuid": "cce9ae88_1a69c9fe",
        "filename": "cast/common/channel/cast_socket.cc",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-05T23:34:33Z",
      "side": 1,
      "message": "Will a message that caused the socket to block be left in message_queue_?",
      "revId": "809a130e018fb17f6e944f40629bf4d83842a531",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c28a206c_ae4a2b2c",
        "filename": "platform/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-05T23:34:33Z",
      "side": 1,
      "message": "I didn\u0027t see any uses from the platform API (nor should there be, as clients shouldn\u0027t need to know about our object management details.)\n\nCan this go into util/?",
      "revId": "809a130e018fb17f6e944f40629bf4d83842a531",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ba977d7_7d29bb53",
        "filename": "platform/api/tls_connection.h",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-05T23:34:33Z",
      "side": 1,
      "message": "Nit: s/null/nullptr/",
      "revId": "809a130e018fb17f6e944f40629bf4d83842a531",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39e884ec_022ca8cb",
        "filename": "platform/base/weak_ptr.h",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-05T23:34:33Z",
      "side": 1,
      "message": "nit: Open Screen\u0027s",
      "revId": "809a130e018fb17f6e944f40629bf4d83842a531",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d375f5e_f3d6e700",
        "filename": "platform/base/weak_ptr.h",
        "patchSetId": 2
      },
      "lineNbr": 95,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-06T18:05:45Z",
      "side": 1,
      "message": "nit: Should the default ctor call into this?",
      "range": {
        "startLine": 95,
        "startChar": 0,
        "endLine": 95,
        "endChar": 28
      },
      "revId": "809a130e018fb17f6e944f40629bf4d83842a531",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c3d6ec0_0d100015",
        "filename": "platform/base/weak_ptr.h",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-06T18:05:45Z",
      "side": 1,
      "message": "std::forward?\n\nHere and below",
      "range": {
        "startLine": 108,
        "startChar": 14,
        "endLine": 108,
        "endChar": 23
      },
      "revId": "809a130e018fb17f6e944f40629bf4d83842a531",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f67877d6_d6bc3b7e",
        "filename": "platform/impl/tls_connection_factory_posix.cc",
        "patchSetId": 2
      },
      "lineNbr": 91,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-05T23:34:33Z",
      "side": 1,
      "message": "Since OnConnected is getting a raw (not a weak pointer), what assumptions can client_ make about the lifetime of the |self| that\u0027s being passed into it?\n\nSimilar comment applies to other uses of this pattern here.",
      "revId": "809a130e018fb17f6e944f40629bf4d83842a531",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "caca0211_6be4e358",
        "filename": "platform/impl/tls_connection_factory_posix.cc",
        "patchSetId": 2
      },
      "lineNbr": 137,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-06T18:05:45Z",
      "side": 1,
      "message": "Why this change in logic?\n\nWith the previous approach: This method posts a task to the task runner to:\n1) Accept the new connection (if it wasn\u0027t already accepted previously - because threading)\n2) Calls OnSocketAccepted(...) on the new connection\n\nThe processing then is done on the task runner when this task is popped, not when this method is initially called, so the caller doesn\u0027t need to worry about blocking the thread\n\nBased on my most recent reading of the documentation (http://man7.org/linux/man-pages/man2/select.2.html), it sounds like we should be using PSELECT rather than SELECT to ensure thread safety, but if we do that it sounds like parallel calls to SELECT and ACCEPT (which I assume was your concern with the previous approach) should be a non-issue",
      "range": {
        "startLine": 133,
        "startChar": 0,
        "endLine": 137,
        "endChar": 3
      },
      "revId": "809a130e018fb17f6e944f40629bf4d83842a531",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97abc12d_8375e338",
        "filename": "platform/impl/tls_connection_factory_posix.cc",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-11-05T23:34:33Z",
      "side": 1,
      "message": "It looks like you\u0027re creating a WeakPtr on one thread and passing it to another.\n\nIn Chromium, weak_ptr\u0027s aren\u0027t threadsafe; the factory that vends them is bound to one thread (or sequence).  Is the std:: equivalent different?",
      "revId": "809a130e018fb17f6e944f40629bf4d83842a531",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35ad11fe_1252d11a",
        "filename": "platform/impl/tls_connection_factory_posix.h",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-06T18:05:45Z",
      "side": 1,
      "message": "Wouldn\u0027t different connections have different ports (so different IPEndpoints)?",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 34,
        "endChar": 63
      },
      "revId": "809a130e018fb17f6e944f40629bf4d83842a531",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed0d88ee_d7383624",
        "filename": "platform/impl/tls_connection_posix.cc",
        "patchSetId": 2
      },
      "lineNbr": 143,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-06T18:05:45Z",
      "side": 1,
      "message": "These should be called on the TaskRunner thread (same pattern used above). Same for below calls\n\nIMHO the code is more readable with these as separate functions than written inline, but I don\u0027t have a strong opinion either way",
      "range": {
        "startLine": 143,
        "startChar": 6,
        "endLine": 143,
        "endChar": 36
      },
      "revId": "809a130e018fb17f6e944f40629bf4d83842a531",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}