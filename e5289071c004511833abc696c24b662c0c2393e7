{
  "comments": [
    {
      "key": {
        "uuid": "8ad54ce8_0ba08016",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 4
      },
      "lineNbr": 383,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-03-12T21:53:45Z",
      "side": 1,
      "message": "Need space between \"if\" and \"(\" (here and later).",
      "range": {
        "startLine": 383,
        "startChar": 23,
        "endLine": 383,
        "endChar": 26
      },
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5913f13_fe787168",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 4
      },
      "lineNbr": 383,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-12T22:09:28Z",
      "side": 1,
      "message": "nit: \"if (\" here and below",
      "range": {
        "startLine": 383,
        "startChar": 23,
        "endLine": 383,
        "endChar": 26
      },
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47af2aac_ca023757",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 4
      },
      "lineNbr": 383,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-03-14T17:34:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8ad54ce8_0ba08016",
      "range": {
        "startLine": 383,
        "startChar": 23,
        "endLine": 383,
        "endChar": 26
      },
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d87a80ef_5a630170",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 4
      },
      "lineNbr": 383,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-03-14T17:34:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b5913f13_fe787168",
      "range": {
        "startLine": 383,
        "startChar": 23,
        "endLine": 383,
        "endChar": 26
      },
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32e7cbf0_aaa0e02a",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 4
      },
      "lineNbr": 385,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-12T22:09:28Z",
      "side": 1,
      "message": "More just a note, as we\u0027re doing this in other places, but we may want to revisit how we return errors from our cbor functions.  tinycbor actually uses these two errors to mean \"you declared a map with 2 pair entries, but there were actually less/more in the stream\".  Basically, we may need to return semantic errors separate from parsing errors.",
      "range": {
        "startLine": 385,
        "startChar": 33,
        "endLine": 385,
        "endChar": 53
      },
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9aa827_c60abb86",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 4
      },
      "lineNbr": 392,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-03-12T21:53:45Z",
      "side": 1,
      "message": "nit: Maybe this change, or maybe in a future clean-up patch (since this seems to be all over the existing code): We shouldn\u0027t have multiple calls to dprintf() when one will do. It both bloats the code and is less readable.\n\nFor example, the code could be:\n\n        dprintf(fd, \"  if(%s.size() \u003e %d) {\\n\"\n                    \"    return -CborErrorTooManyItems;\\n\"\n                    \"  }\\n\", cid.c_str(), cpp_type.vector_type.max_length);\n\n(BTW--If clang-format messes-up the code, sometimes surrounding the multi-line string literal with parens will make it behave.)",
      "range": {
        "startLine": 389,
        "startChar": 0,
        "endLine": 392,
        "endChar": 29
      },
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a632f7a0_37a63df8",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 4
      },
      "lineNbr": 392,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-03-14T17:34:45Z",
      "side": 1,
      "message": "I like this idea, but it seems like a larger change outside of the scope of this CL\nFor now, I\u0027d prefer to add the code in this format (to match the rest of the file) then update the whole file at once\n\nIf it\u0027s important I can change the new additions here though :)",
      "parentUuid": "da9aa827_c60abb86",
      "range": {
        "startLine": 389,
        "startChar": 0,
        "endLine": 392,
        "endChar": 29
      },
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aeb12f97_d0f50e5d",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 4
      },
      "lineNbr": 392,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-19T08:54:47Z",
      "side": 1,
      "message": "Yeah, no action needed now.  After looking at more of the code it\u0027s pretty entrenched here.",
      "parentUuid": "a632f7a0_37a63df8",
      "range": {
        "startLine": 389,
        "startChar": 0,
        "endLine": 392,
        "endChar": 29
      },
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d2f00f1_454735a9",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 4
      },
      "lineNbr": 393,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-12T22:09:28Z",
      "side": 1,
      "message": "There should be a corresponding WriteDecoder change that checks for a valid size range.",
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2030830f_2b415ecc",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 4
      },
      "lineNbr": 393,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-03-14T17:34:45Z",
      "side": 1,
      "message": "I actually purposefully left it off the decoder\nMy worry was with backwards compatibility issues after we\u0027ve launched\n\nLet\u0027s say after release in version n we have an array, then in version n+1 we make that array have a min or max length. Since we don\u0027t control the upgrade schedules for third parties using our library, either the sender or the receiver could upgrade first.\nWith validation only on the sender side, then there is no case where the sender sends valid data and then the receiver receives invalid data, but if validation is on both ends then an old sender could send valid data (from version n before the min length addition) and then the receiver receives invalid data (from version n+1 where there is a min size)",
      "parentUuid": "4d2f00f1_454735a9",
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d397c9f_2f7c8e7d",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 4
      },
      "lineNbr": 393,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-19T08:54:47Z",
      "side": 1,
      "message": "Since this is all hypothetical, I guess it still depends on the real motivation for such a change, but I feel if we have move to n+1 by imposing a min, and then continue to accept below that, it\u0027s just inconsistent.  In cases it could be handled at layers above.  In some cases we may also want to handle this as part of version negotiation.  I\u0027ll try to get Peter or Mark\u0027s input on this.",
      "parentUuid": "2030830f_2b415ecc",
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d70eeaee_d2551a80",
        "filename": "tools/cddl/codegen.cc",
        "patchSetId": 4
      },
      "lineNbr": 393,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-03-21T23:33:00Z",
      "side": 1,
      "message": "Discussed offline with Peter and he recommended adding them on the decoder as well - adding them now",
      "parentUuid": "1d397c9f_2f7c8e7d",
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce2cc120_4422505b",
        "filename": "tools/cddl/parse.cc",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-03-12T21:53:45Z",
      "side": 1,
      "message": "IIUC, could this function just re-use existing string-searching functions? I\u0027m thinking something like:\n\n  const whitespace_idx \u003d std::min(view.find_first_of(\u0027 ;\\r\\n\u0027), view.size());\n  return view.substr(whitespace_idx).find_first_of(character_set) !\u003d string_view::npos;",
      "range": {
        "startLine": 67,
        "startChar": 5,
        "endLine": 67,
        "endChar": 33
      },
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a9fbdb1_ea161823",
        "filename": "tools/cddl/parse.cc",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-03-14T17:34:45Z",
      "side": 1,
      "message": "removing this method since it\u0027s no longer used :)",
      "parentUuid": "ce2cc120_4422505b",
      "range": {
        "startLine": 67,
        "startChar": 5,
        "endLine": 67,
        "endChar": 33
      },
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e6833507_cc515564",
        "filename": "tools/cddl/parse.cc",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-03-12T21:53:45Z",
      "side": 1,
      "message": "Is view[i] always valid (i.e., not reading past EOS)?",
      "range": {
        "startLine": 69,
        "startChar": 32,
        "endLine": 69,
        "endChar": 39
      },
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7113d51_19ac6302",
        "filename": "tools/cddl/parse.cc",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-12T22:09:28Z",
      "side": 1,
      "message": "Also check |i \u003c view.length()|",
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a375578_0790fc3b",
        "filename": "tools/cddl/parse.cc",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-03-14T17:34:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b7113d51_19ac6302",
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20b9f2d8_4bd67842",
        "filename": "tools/cddl/parse.cc",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-03-14T17:34:45Z",
      "side": 1,
      "message": "Modified it to also check for this case",
      "parentUuid": "e6833507_cc515564",
      "range": {
        "startLine": 69,
        "startChar": 32,
        "endLine": 69,
        "endChar": 39
      },
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c679308_5b2e5a4b",
        "filename": "tools/cddl/parse.cc",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-03-12T21:53:45Z",
      "side": 1,
      "message": "Did you mean to remove this after some debugging? :)",
      "range": {
        "startLine": 70,
        "startChar": 4,
        "endLine": 70,
        "endChar": 22
      },
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94af59f8_df916eec",
        "filename": "tools/cddl/parse.cc",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-12T22:09:28Z",
      "side": 1,
      "message": "Why is this here?  Copypasta?",
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84f658ca_1b9aa0c6",
        "filename": "tools/cddl/parse.cc",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-03-14T17:34:45Z",
      "side": 1,
      "message": "Accidentally left it in while debugging an issue - removed it",
      "parentUuid": "94af59f8_df916eec",
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "875c1f7f_6068eefa",
        "filename": "tools/cddl/parse.cc",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-03-14T17:34:45Z",
      "side": 1,
      "message": "Yeah - removed it now :)",
      "parentUuid": "0c679308_5b2e5a4b",
      "range": {
        "startLine": 70,
        "startChar": 4,
        "endLine": 70,
        "endChar": 22
      },
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bda82241_769252b0",
        "filename": "tools/cddl/parse.cc",
        "patchSetId": 4
      },
      "lineNbr": 230,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-12T22:09:28Z",
      "side": 1,
      "message": "Here and elsewhere (including any others of mine you find :P ): occurrence.",
      "range": {
        "startLine": 230,
        "startChar": 25,
        "endLine": 230,
        "endChar": 34
      },
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "967976b4_177b3ef5",
        "filename": "tools/cddl/parse.cc",
        "patchSetId": 4
      },
      "lineNbr": 230,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-03-14T17:34:45Z",
      "side": 1,
      "message": "spelling is hard :) Updated all comments and variable names",
      "parentUuid": "bda82241_769252b0",
      "range": {
        "startLine": 230,
        "startChar": 25,
        "endLine": 230,
        "endChar": 34
      },
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a066173_ec5bbdab",
        "filename": "tools/cddl/parse.cc",
        "patchSetId": 4
      },
      "lineNbr": 235,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-12T22:09:28Z",
      "side": 1,
      "message": "As it is now, this isn\u0027t strict; it would accept things like \"asdf+123dcd\".  I know it\u0027s handled further in sema.cc, but I think it would be easier just to check \"+\", \"?\", or SkipUint() \"*\" SkipUint().",
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3c82561_ba7b2c38",
        "filename": "tools/cddl/parse.cc",
        "patchSetId": 4
      },
      "lineNbr": 235,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-03-14T17:34:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4a066173_ec5bbdab",
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1324c104_7ba13df8",
        "filename": "tools/cddl/parse.cc",
        "patchSetId": 4
      },
      "lineNbr": 244,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-03-12T21:53:45Z",
      "side": 1,
      "message": "I could be mistaken, but it seems |p_speculative.nodes| is never populated with anything.",
      "range": {
        "startLine": 244,
        "startChar": 12,
        "endLine": 244,
        "endChar": 31
      },
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f61a1b0_3f5be058",
        "filename": "tools/cddl/parse.cc",
        "patchSetId": 4
      },
      "lineNbr": 244,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-03-14T17:34:45Z",
      "side": 1,
      "message": "copy-and-paste error. removed this",
      "parentUuid": "1324c104_7ba13df8",
      "range": {
        "startLine": 244,
        "startChar": 12,
        "endLine": 244,
        "endChar": 31
      },
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dde232d8_583f6dec",
        "filename": "tools/cddl/sema.cc",
        "patchSetId": 4
      },
      "lineNbr": 254,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-03-12T21:53:45Z",
      "side": 1,
      "message": "This looks like atoi(). How about we just use that or, better yet, absl::SimpleAtoi()?",
      "range": {
        "startLine": 250,
        "startChar": 0,
        "endLine": 254,
        "endChar": 58
      },
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbb4911c_a9b49596",
        "filename": "tools/cddl/sema.cc",
        "patchSetId": 4
      },
      "lineNbr": 254,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-03-14T17:34:45Z",
      "side": 1,
      "message": "I hit compilation issues when trying to import the header file for SimpleAtoi, so I\u0027d prefer to avoid using that if possible\n\nI updated it to use 2 Atoi calls and string parsing instead of relying on parsing character-by-character - this just seems to me to be more complex than the code I was already using\n\nThoughts?",
      "parentUuid": "dde232d8_583f6dec",
      "range": {
        "startLine": 250,
        "startChar": 0,
        "endLine": 254,
        "endChar": 58
      },
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e41be2b2_a4441a78",
        "filename": "tools/cddl/sema.cc",
        "patchSetId": 4
      },
      "lineNbr": 436,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-12T22:09:28Z",
      "side": 1,
      "message": "The meaning here has changed slightly.  I don\u0027t see why we\u0027d do this, and it\u0027s not even necessarily a problem, but this would now work when it wouldn\u0027t before:\n\nsome-enum \u003d \u0026( 1*1 alpha: 1, beta: 2)\n\nI\u0027ll leave it up to you whether to support/reject this example.",
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "767a518d_6add4074",
        "filename": "tools/cddl/sema.cc",
        "patchSetId": 4
      },
      "lineNbr": 436,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-03-14T17:34:45Z",
      "side": 1,
      "message": "Interesting. I didn\u0027t think of that case. Adding an extra bool to specify if it\u0027s explicitly set or not, and relying on that instead of the min and max values",
      "parentUuid": "e41be2b2_a4441a78",
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50fc56ca_ad228693",
        "filename": "tools/cddl/sema.cc",
        "patchSetId": 4
      },
      "lineNbr": 489,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-12T22:09:28Z",
      "side": 1,
      "message": "The same comment actually applies here:\n\nsome-map \u003d {\n  1*1 some-group,\n  alpha: text,\n  beta: uint,\n}\n\nnow works.",
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cdbddcc1_bdcda388",
        "filename": "tools/cddl/sema.cc",
        "patchSetId": 4
      },
      "lineNbr": 489,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-03-14T17:34:45Z",
      "side": 1,
      "message": "Adding an extra bool to specify if it\u0027s explicitly set or not, and relying on that instead of the min and max values",
      "parentUuid": "50fc56ca_ad228693",
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a4410fd_a93512b0",
        "filename": "tools/cddl/sema.cc",
        "patchSetId": 4
      },
      "lineNbr": 568,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-12T22:09:28Z",
      "side": 1,
      "message": "Good catch on the operator!",
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48297868_8e3fbaf8",
        "filename": "tools/cddl/sema.h",
        "patchSetId": 4
      },
      "lineNbr": 80,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-03-12T21:53:45Z",
      "side": 1,
      "message": "sp",
      "range": {
        "startLine": 80,
        "startChar": 54,
        "endLine": 80,
        "endChar": 63
      },
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba2e568e_bc7b586c",
        "filename": "tools/cddl/sema.h",
        "patchSetId": 4
      },
      "lineNbr": 80,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-03-14T17:34:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "48297868_8e3fbaf8",
      "range": {
        "startLine": 80,
        "startChar": 54,
        "endLine": 80,
        "endChar": 63
      },
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "72edff58_a791c02e",
        "filename": "tools/cddl/sema.h",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-12T22:09:28Z",
      "side": 1,
      "message": "I might just call these occurrence_{min,max} since (1, 1) is our default (and valid) occurrence.",
      "range": {
        "startLine": 81,
        "startChar": 9,
        "endLine": 81,
        "endChar": 26
      },
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "597e7dd1_39b35f65",
        "filename": "tools/cddl/sema.h",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-12T22:09:28Z",
      "side": 1,
      "message": "Here and below: uint32_t?",
      "range": {
        "startLine": 81,
        "startChar": 4,
        "endLine": 81,
        "endChar": 8
      },
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d599987_e0eb063b",
        "filename": "tools/cddl/sema.h",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-03-14T17:34:45Z",
      "side": 1,
      "message": "I\u0027d discussed this extensively with Peter - originally I had the same opinion as you\n\nIn some cases (ie arrays), the occurence_max is unbounded, so it is optional because it isn\u0027t always present. For that reason, it made more sense to call them both opt_occurence_type instead of making just the max opt_ - at least to me, having occurence_min and opt_occurence_max would be more confusing",
      "parentUuid": "72edff58_a791c02e",
      "range": {
        "startLine": 81,
        "startChar": 9,
        "endLine": 81,
        "endChar": 26
      },
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c987f0d_3cd0588b",
        "filename": "tools/cddl/sema.h",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-03-14T17:34:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "597e7dd1_39b35f65",
      "range": {
        "startLine": 81,
        "startChar": 4,
        "endLine": 81,
        "endChar": 8
      },
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c19c7656_b406ce6a",
        "filename": "tools/cddl/sema.h",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-19T08:54:47Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5d599987_e0eb063b",
      "range": {
        "startLine": 81,
        "startChar": 9,
        "endLine": 81,
        "endChar": 26
      },
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bfebbb24_c8e6c85a",
        "filename": "tools/cddl/sema.h",
        "patchSetId": 4
      },
      "lineNbr": 84,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-03-12T21:53:45Z",
      "side": 1,
      "message": "You\u0027ll probably want to chat with Brandon about this. IMHO, the max uint value (std::numeric_limits\u003cuint\u003e::max()) should signify \"unlimited\" rather than 0. Also, it may be useful, now or in the future, for users to specify a max of 0 to disable the use of a field (i.e., as a way to document that certain fields used to exist, but are no longer accepted).",
      "range": {
        "startLine": 83,
        "startChar": 64,
        "endLine": 84,
        "endChar": 28
      },
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c37f6163_b227363c",
        "filename": "tools/cddl/sema.h",
        "patchSetId": 4
      },
      "lineNbr": 84,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-03-14T17:34:45Z",
      "side": 1,
      "message": "discussed offline, and I am changing to std::numeric_limits\u003cuint\u003e::max() as suggested\n\nAlso, I defined constants to make this behavior with unbounded min and max clearer",
      "parentUuid": "bfebbb24_c8e6c85a",
      "range": {
        "startLine": 83,
        "startChar": 64,
        "endLine": 84,
        "endChar": 28
      },
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3acd94d1_cf71b1f5",
        "filename": "tools/cddl/sema.h",
        "patchSetId": 4
      },
      "lineNbr": 93,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-03-12T21:53:45Z",
      "side": 1,
      "message": "c++ style: https://google.github.io/styleguide/cppguide.html#Function_Names",
      "range": {
        "startLine": 93,
        "startChar": 9,
        "endLine": 93,
        "endChar": 10
      },
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2808164e_50e20ded",
        "filename": "tools/cddl/sema.h",
        "patchSetId": 4
      },
      "lineNbr": 93,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-03-12T21:53:45Z",
      "side": 1,
      "message": "Add const, please. https://google.github.io/styleguide/cppguide.html#Use_of_const",
      "range": {
        "startLine": 93,
        "startChar": 31,
        "endLine": 93,
        "endChar": 33
      },
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44175e3f_4a635655",
        "filename": "tools/cddl/sema.h",
        "patchSetId": 4
      },
      "lineNbr": 93,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-03-14T17:34:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3acd94d1_cf71b1f5",
      "range": {
        "startLine": 93,
        "startChar": 9,
        "endLine": 93,
        "endChar": 10
      },
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0530f87_032ad2de",
        "filename": "tools/cddl/sema.h",
        "patchSetId": 4
      },
      "lineNbr": 93,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-03-14T17:34:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2808164e_50e20ded",
      "range": {
        "startLine": 93,
        "startChar": 31,
        "endLine": 93,
        "endChar": 33
      },
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c84e3028_ff8fcaf1",
        "filename": "tools/cddl/sema.h",
        "patchSetId": 4
      },
      "lineNbr": 137,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-03-12T22:09:28Z",
      "side": 1,
      "message": "Since the codegen checks are just \"\u003e 0\" these could also be uint32_t.",
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da8f73ad_08aa0db3",
        "filename": "tools/cddl/sema.h",
        "patchSetId": 4
      },
      "lineNbr": 137,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-03-14T17:34:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c84e3028_ff8fcaf1",
      "revId": "e5289071c004511833abc696c24b662c0c2393e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}