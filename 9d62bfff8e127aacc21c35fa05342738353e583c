{
  "comments": [
    {
      "key": {
        "uuid": "a4acab3a_bb8f871b",
        "filename": "discovery/mdns/mdns_querier.cc",
        "patchSetId": 5
      },
      "lineNbr": 63,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2020-03-17T23:27:21Z",
      "side": 1,
      "message": "Maybe consider using std::list::splice, should work if source and destination lists are the same.\n\n\"No elements are copied or moved, only the internal pointers of the list nodes are re-pointed.\"\n\nI think then you also can have a list of MdnsRecordTracker instead of list of unique_ptr\u003cMdnsRecordTracker\u003e",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 63,
        "endChar": 1
      },
      "revId": "9d62bfff8e127aacc21c35fa05342738353e583c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9048241_6e6e5696",
        "filename": "discovery/mdns/mdns_querier.h",
        "patchSetId": 5
      },
      "lineNbr": 70,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2020-03-17T23:29:20Z",
      "side": 1,
      "message": "or maybe std::vector with std::rotate\nlists are usually quite bad performance wise, but hard to tell without actually measuring.",
      "range": {
        "startLine": 70,
        "startChar": 28,
        "endLine": 70,
        "endChar": 37
      },
      "revId": "9d62bfff8e127aacc21c35fa05342738353e583c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ee6e102_4dfb17b8",
        "filename": "discovery/mdns/mdns_querier.h",
        "patchSetId": 5
      },
      "lineNbr": 70,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-03-17T23:34:31Z",
      "side": 1,
      "message": "The reason I went with list here was because we need to remove elements from the middle of the list and put them at one of the two ends. Doing this with a vector (even with std::rotate) is O(n) but it\u0027s O(1) for a list\n\nWDYT?",
      "parentUuid": "e9048241_6e6e5696",
      "range": {
        "startLine": 70,
        "startChar": 28,
        "endLine": 70,
        "endChar": 37
      },
      "revId": "9d62bfff8e127aacc21c35fa05342738353e583c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3bdc289d_95f46279",
        "filename": "discovery/mdns/mdns_querier.h",
        "patchSetId": 5
      },
      "lineNbr": 145,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2020-03-17T23:27:21Z",
      "side": 1,
      "message": "It might be worth to create a class that encapsulates map with limits on how many elements are available for a key to reduce complexity in mDNS querier.",
      "range": {
        "startLine": 145,
        "startChar": 2,
        "endLine": 145,
        "endChar": 51
      },
      "revId": "9d62bfff8e127aacc21c35fa05342738353e583c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}