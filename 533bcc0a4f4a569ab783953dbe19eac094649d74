{
  "comments": [
    {
      "key": {
        "uuid": "ad155b2b_6965356e",
        "filename": "api/impl/internal_services.cc",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-01-31T01:18:10Z",
      "side": 1,
      "message": "#include \"base/error.h\" for IWYU here and elsewhere",
      "revId": "533bcc0a4f4a569ab783953dbe19eac094649d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d19d7a52_5b583ef9",
        "filename": "api/impl/internal_services.cc",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-01-31T02:37:16Z",
      "side": 1,
      "message": "Fair enough. Would love to get this as part of cl-format.",
      "parentUuid": "ad155b2b_6965356e",
      "revId": "533bcc0a4f4a569ab783953dbe19eac094649d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b41397e_2af065c8",
        "filename": "api/impl/internal_services.cc",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-01-31T01:18:10Z",
      "side": 1,
      "message": "Error is intended to be constructible directly from Error::Code.  Does returning a Code value work here?",
      "revId": "533bcc0a4f4a569ab783953dbe19eac094649d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cba53048_ee3c6947",
        "filename": "api/impl/internal_services.cc",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-01-31T02:37:16Z",
      "side": 1,
      "message": "Figured it out. The Error::Code constructor was marked explicit, explicitly prohibiting this conversion without a cast. I\u0027ve removed explicit (I don\u0027t see any obvious reason why not to)--if I\u0027m missing something please let me know.",
      "parentUuid": "1b41397e_2af065c8",
      "revId": "533bcc0a4f4a569ab783953dbe19eac094649d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c0652885_35b6e0df",
        "filename": "api/impl/internal_services.cc",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-01-31T01:18:10Z",
      "side": 1,
      "message": "Eventually we\u0027ll want to map more OS error codes to Error::Code enums so we don\u0027t have to return kGenericPlatformError for all of them.  Not necessary to do in this patch though.\n\nFeel like the mapping belongs in the platform later of the codebase (i.e. this code shouldn\u0027t know about EADDRINUSE).",
      "revId": "533bcc0a4f4a569ab783953dbe19eac094649d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0e56974_0af31451",
        "filename": "api/impl/internal_services.cc",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-01-31T02:37:16Z",
      "side": 1,
      "message": "Totally agree. I\u0027ve added an IOU, this should definitely be a separate patch.",
      "parentUuid": "c0652885_35b6e0df",
      "revId": "533bcc0a4f4a569ab783953dbe19eac094649d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d976732_ce289963",
        "filename": "api/impl/internal_services.cc",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-01-31T01:18:10Z",
      "side": 1,
      "message": "Can we add an Error::None() that returns a singleton \"no error\" value?",
      "revId": "533bcc0a4f4a569ab783953dbe19eac094649d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ddcf459_4b056111",
        "filename": "api/impl/internal_services.cc",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-01-31T02:37:16Z",
      "side": 1,
      "message": "Definitely! Done.",
      "parentUuid": "0d976732_ce289963",
      "revId": "533bcc0a4f4a569ab783953dbe19eac094649d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2887d13c_66a4a790",
        "filename": "api/impl/mdns_responder_service.cc",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-01-31T01:18:10Z",
      "side": 1,
      "message": "Nit: No need to update copyright on code that\u0027s being modified.",
      "revId": "533bcc0a4f4a569ab783953dbe19eac094649d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23a62347_e7e7c651",
        "filename": "api/impl/mdns_responder_service.cc",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-01-31T02:37:16Z",
      "side": 1,
      "message": "Sounds good -- good to know.",
      "parentUuid": "2887d13c_66a4a790",
      "revId": "533bcc0a4f4a569ab783953dbe19eac094649d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f823c04e_93338146",
        "filename": "api/impl/mdns_responder_service.cc",
        "patchSetId": 2
      },
      "lineNbr": 246,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-01-31T01:18:10Z",
      "side": 1,
      "message": "For consistency with Error, it might be nice to have an ok() method here too.",
      "revId": "533bcc0a4f4a569ab783953dbe19eac094649d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5bdaa19a_149c493e",
        "filename": "api/impl/mdns_responder_service.cc",
        "patchSetId": 2
      },
      "lineNbr": 246,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-01-31T02:37:16Z",
      "side": 1,
      "message": "I think we are safe with a bool operator for ErrorOr, so I\u0027ll just use that.",
      "parentUuid": "f823c04e_93338146",
      "revId": "533bcc0a4f4a569ab783953dbe19eac094649d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55a6feae_2c7a3493",
        "filename": "api/impl/receiver_list.cc",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-01-31T01:18:10Z",
      "side": 1,
      "message": "return empty ? Error::Code::kNoItemFound : Error::None()",
      "revId": "533bcc0a4f4a569ab783953dbe19eac094649d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9ee8ef0_f396d447",
        "filename": "api/impl/receiver_list.cc",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-01-31T02:37:16Z",
      "side": 1,
      "message": "Aye.",
      "parentUuid": "55a6feae_2c7a3493",
      "revId": "533bcc0a4f4a569ab783953dbe19eac094649d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "140dfada_ccfdd03d",
        "filename": "api/impl/receiver_list_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-01-31T01:18:10Z",
      "side": 1,
      "message": "We could add a boolean operator to Error.  That would make writing assertions and if statements nicer.",
      "revId": "533bcc0a4f4a569ab783953dbe19eac094649d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59f26a5f_7db1b57e",
        "filename": "api/impl/receiver_list_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-01-31T02:37:16Z",
      "side": 1,
      "message": "I\u0027m happy to discuss -- my current feelings are that a boolean operator for Error would be confusing. Consider this\n\nError foo();\n\nYou would expect if (foo()) to return true if there was no error, or false if there was an error.\n\nNow consider:\n\nError error;\n\nSeems to me here that if (error) should return true if there was an error, and false otherwise.\n\nI think the syntactic difficulties here make a bool operator dangerous.\n\nIf we rename Error to Status or something similar I would reconsider.",
      "parentUuid": "140dfada_ccfdd03d",
      "revId": "533bcc0a4f4a569ab783953dbe19eac094649d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "61b4053b_acedde41",
        "filename": "base/error.h",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-01-31T01:18:10Z",
      "side": 1,
      "message": "Nice :-)",
      "revId": "533bcc0a4f4a569ab783953dbe19eac094649d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bce32b1f_07bdae72",
        "filename": "base/error.h",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-01-31T01:18:10Z",
      "side": 1,
      "message": "I thought std::move was a no-op on an rvalue reference?  Or does passing value as a parameter somehow make it an lvalue?",
      "revId": "533bcc0a4f4a569ab783953dbe19eac094649d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3db88bdb_feb8f55b",
        "filename": "base/error.h",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-01-31T02:37:16Z",
      "side": 1,
      "message": "You would think, but the compiler is stupid here and ends up calling the (deleted) copy constructor without the explicit move syntax.",
      "parentUuid": "bce32b1f_07bdae72",
      "revId": "533bcc0a4f4a569ab783953dbe19eac094649d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff625d9a_cc4286cf",
        "filename": "base/error.h",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-01-31T01:18:10Z",
      "side": 1,
      "message": "An ok() and boolean operator here would save some typing in this patch :-)",
      "revId": "533bcc0a4f4a569ab783953dbe19eac094649d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bbafa324_4c8c06c3",
        "filename": "base/error.h",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-01-31T02:37:16Z",
      "side": 1,
      "message": "Fair enough, I can add those. I don\u0027t know if we need ok() too, I\u0027m just gonna add the bool operator for now.",
      "parentUuid": "ff625d9a_cc4286cf",
      "revId": "533bcc0a4f4a569ab783953dbe19eac094649d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd1d739b_cc7c0bb4",
        "filename": "base/ip_address.cc",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-01-31T01:18:10Z",
      "side": 1,
      "message": "Could be:\n\nreturn address ? address : ParseV6(s);\n\n(with a boolean operator)",
      "revId": "533bcc0a4f4a569ab783953dbe19eac094649d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3625a66_385ff987",
        "filename": "base/ip_address.cc",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-01-31T02:37:16Z",
      "side": 1,
      "message": "I can oneline it, iff I use explicit std::move -- otherwise we get a compiler error about using a deleted ctor.",
      "parentUuid": "cd1d739b_cc7c0bb4",
      "revId": "533bcc0a4f4a569ab783953dbe19eac094649d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d943770c_b50915a8",
        "filename": "discovery/mdns/domain_name.h",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-01-31T01:18:10Z",
      "side": 1,
      "message": "nice :-)",
      "revId": "533bcc0a4f4a569ab783953dbe19eac094649d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}