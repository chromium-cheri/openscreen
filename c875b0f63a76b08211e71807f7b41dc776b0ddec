{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e362c45a_5b1a5439",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-07-14T22:11:53Z",
      "side": 1,
      "message": "No periods in the title, please.",
      "revId": "c875b0f63a76b08211e71807f7b41dc776b0ddec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "215f5bb8_f22f39b8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1515352
      },
      "writtenOn": "2021-07-15T21:11:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e362c45a_5b1a5439",
      "revId": "c875b0f63a76b08211e71807f7b41dc776b0ddec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fcb93b5b_d83d7d47",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-07-14T22:11:53Z",
      "side": 1,
      "message": "Took an initial look. Definitely check into the unit test failures, they can be ran locally with:\n\n./out/Default/openscreen_unittests \n\nor \n\n./out/Default/openscreen_unittests --gtest_filter\u003d\"\u003cFailing test name\u003e\"",
      "revId": "c875b0f63a76b08211e71807f7b41dc776b0ddec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57965d36_3d4a9b60",
        "filename": "cast/standalone_sender/connection_settings.h",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-07-14T22:11:53Z",
      "side": 1,
      "message": "Nit: period at end please.\n\nWe try to always make sure our comments are complete sentences with proper punctuation.\n\nMaybe:\n\n// The codec used for encoding negotiated video streams.",
      "revId": "c875b0f63a76b08211e71807f7b41dc776b0ddec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5304ceb6_6e00a9eb",
        "filename": "cast/standalone_sender/connection_settings.h",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1515352
      },
      "writtenOn": "2021-07-15T21:11:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "57965d36_3d4a9b60",
      "revId": "c875b0f63a76b08211e71807f7b41dc776b0ddec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44421be2_375ec040",
        "filename": "cast/standalone_sender/looping_file_cast_agent.cc",
        "patchSetId": 1
      },
      "lineNbr": 264,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-07-14T22:11:53Z",
      "side": 1,
      "message": "Can the fields here be set on construction of the video config?",
      "revId": "c875b0f63a76b08211e71807f7b41dc776b0ddec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1772cbcc_026a5761",
        "filename": "cast/standalone_sender/looping_file_cast_agent.cc",
        "patchSetId": 1
      },
      "lineNbr": 264,
      "author": {
        "id": 1515352
      },
      "writtenOn": "2021-07-15T21:11:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "44421be2_375ec040",
      "revId": "c875b0f63a76b08211e71807f7b41dc776b0ddec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf561075_4e73c65d",
        "filename": "cast/standalone_sender/main.cc",
        "patchSetId": 1
      },
      "lineNbr": 177,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-07-14T22:11:53Z",
      "side": 1,
      "message": "StringToVideoCodec then assert vp8, vp9, or av1?\n\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/openscreen/src/cast/streaming/message_fields.h;drc\u003d46b7d128bc08fceae9d109c0f675bc98c73ddda9;l\u003d53",
      "revId": "c875b0f63a76b08211e71807f7b41dc776b0ddec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2565f3c4_f39fc590",
        "filename": "cast/standalone_sender/main.cc",
        "patchSetId": 1
      },
      "lineNbr": 177,
      "author": {
        "id": 1515352
      },
      "writtenOn": "2021-07-15T21:11:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf561075_4e73c65d",
      "revId": "c875b0f63a76b08211e71807f7b41dc776b0ddec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3fca6e1e_1771ec01",
        "filename": "cast/standalone_sender/streaming_vpx_encoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-07-14T22:11:53Z",
      "side": 1,
      "message": "Also want an OSP_DCHECK_EQ(params_.codec, VideoCodec::kVp8); here.",
      "revId": "c875b0f63a76b08211e71807f7b41dc776b0ddec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eaba5ae2_33c46f57",
        "filename": "cast/standalone_sender/streaming_vpx_encoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 1515352
      },
      "writtenOn": "2021-07-15T21:11:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3fca6e1e_1771ec01",
      "revId": "c875b0f63a76b08211e71807f7b41dc776b0ddec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97db49a8_f01d0482",
        "filename": "cast/standalone_sender/streaming_vpx_encoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-07-14T22:11:53Z",
      "side": 1,
      "message": "Nit: you could just set the context in the if check, e.g.\n\nauto ctx;\nif (params_.codec \u003d\u003d VideoCodec::kVp9) {\n  ctx \u003d vpx_codec_vp9_cx();\nelse {\n  OSP_DCHECK_EQ(params_.codec, VideoCodec::kVp8);\n  ctx \u003d vpx_codec_vp8_cx();\n}\n\nconst auto result \u003d vpx_codec_enc_config_default(ctx, \u0026config_, 0);\nOSP_CHECK_EQ(result, VPX_CODEC_OK);",
      "revId": "c875b0f63a76b08211e71807f7b41dc776b0ddec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb808bb4_287417ed",
        "filename": "cast/standalone_sender/streaming_vpx_encoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1515352
      },
      "writtenOn": "2021-07-15T21:11:29Z",
      "side": 1,
      "message": "Fixed, but we had to explicitly include the type of ctx to fix compilation issues.",
      "parentUuid": "97db49a8_f01d0482",
      "revId": "c875b0f63a76b08211e71807f7b41dc776b0ddec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ebce8fa1_380a3bc8",
        "filename": "cast/standalone_sender/streaming_vpx_encoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-07-15T23:23:57Z",
      "side": 1,
      "message": "Makes sense--I figured ðŸ˜Š",
      "parentUuid": "eb808bb4_287417ed",
      "revId": "c875b0f63a76b08211e71807f7b41dc776b0ddec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60918db8_f45909d3",
        "filename": "cast/standalone_sender/streaming_vpx_encoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 298,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-07-14T22:11:53Z",
      "side": 1,
      "message": "Same note as above, try to reduce duplicate code where possible.",
      "revId": "c875b0f63a76b08211e71807f7b41dc776b0ddec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ae4716f6_bac9056a",
        "filename": "cast/standalone_sender/streaming_vpx_encoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 298,
      "author": {
        "id": 1515352
      },
      "writtenOn": "2021-07-15T21:11:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "60918db8_f45909d3",
      "revId": "c875b0f63a76b08211e71807f7b41dc776b0ddec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f448c37_1bbd186e",
        "filename": "cast/standalone_sender/streaming_vpx_encoder.h",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-07-14T22:11:53Z",
      "side": 1,
      "message": "Comment on the codec and how it is used please.",
      "revId": "c875b0f63a76b08211e71807f7b41dc776b0ddec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "10ac9ddf_cf560989",
        "filename": "cast/standalone_sender/streaming_vpx_encoder.h",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1515352
      },
      "writtenOn": "2021-07-15T21:11:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0f448c37_1bbd186e",
      "revId": "c875b0f63a76b08211e71807f7b41dc776b0ddec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "668b485a_f48dc0f3",
        "filename": "cast/streaming/receiver_session.h",
        "patchSetId": 1
      },
      "lineNbr": 256,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-07-14T22:11:53Z",
      "side": 1,
      "message": "I don\u0027t think VP9 and AV1 should be added here--this is not intended to be a complete list, only the expected defaults.",
      "revId": "c875b0f63a76b08211e71807f7b41dc776b0ddec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "472b9b71_e8627c07",
        "filename": "cast/streaming/receiver_session.h",
        "patchSetId": 1
      },
      "lineNbr": 256,
      "author": {
        "id": 1515352
      },
      "writtenOn": "2021-07-15T21:11:29Z",
      "side": 1,
      "message": "Removing them caused the standalone implementations to crash when attempting to encode with VP9.",
      "parentUuid": "668b485a_f48dc0f3",
      "revId": "c875b0f63a76b08211e71807f7b41dc776b0ddec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2314633a_b0de2111",
        "filename": "cast/streaming/receiver_session.h",
        "patchSetId": 1
      },
      "lineNbr": 256,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-07-15T23:23:57Z",
      "side": 1,
      "message": "What is the crash? We might have to fix that.\n\nI think the change actually belongs in the standalone receiver:\n\nhttps://osscs.corp.google.com/chromium/chromium/src/+/main:third_party/openscreen/src/cast/standalone_receiver/mirroring_application.cc;drc\u003df6e2b5ea1dfca4fceb6e1d4004494a88006e1f9f;l\u003d59\n\nChange preferences.video_codecs to include VP9 and AV1.",
      "parentUuid": "472b9b71_e8627c07",
      "revId": "c875b0f63a76b08211e71807f7b41dc776b0ddec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "769e53fb_1d3b5186",
        "filename": "cast/streaming/receiver_session.h",
        "patchSetId": 1
      },
      "lineNbr": 256,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2021-07-15T23:47:33Z",
      "side": 1,
      "message": "The defaults should probably reflect what we expect all receivers to support, and I think Vp8 and H264 remain the baseline.  We\u0027ll need receivers to override this on a case-by-case basis when they want to get Vp9 offers, I think.\n\nDoes that sound right Jordan?",
      "parentUuid": "2314633a_b0de2111",
      "revId": "c875b0f63a76b08211e71807f7b41dc776b0ddec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3adeb3fd_87a72dcd",
        "filename": "cast/streaming/receiver_session.h",
        "patchSetId": 1
      },
      "lineNbr": 256,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-07-16T00:04:21Z",
      "side": 1,
      "message": "1000% agree. That was my initial intention and I think that\u0027s what I expect.",
      "parentUuid": "769e53fb_1d3b5186",
      "revId": "c875b0f63a76b08211e71807f7b41dc776b0ddec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}