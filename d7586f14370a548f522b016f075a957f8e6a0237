{
  "comments": [
    {
      "key": {
        "uuid": "765478ce_e1463e87",
        "filename": "discovery/dnssd/impl/conversion_layer.cc",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-07T01:31:16Z",
      "side": 1,
      "message": "I found a bug in this file, so I added a UT to the ConversionLayer UTs\nI can split this to a separate CL if you prefer",
      "range": {
        "startLine": 78,
        "startChar": 39,
        "endLine": 78,
        "endChar": 44
      },
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "74deb27c_e39d2c49",
        "filename": "discovery/dnssd/impl/conversion_layer_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "These are all named incorrectly. This should be kDomainName, kServiceName, etc.",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82658efb_92723463",
        "filename": "discovery/dnssd/impl/conversion_layer_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "I probably should have jumped into the original review for this file... I would prefer dns_class over clazz.",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a070ea55_c3f365a0",
        "filename": "discovery/dnssd/impl/conversion_layer_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "const std::vector\u003cstd::string\u003e kPtrLabels",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09f7cff4_d420dd7b",
        "filename": "discovery/dnssd/impl/conversion_layer_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "const?",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f081ab18_7a02b92b",
        "filename": "discovery/dnssd/impl/conversion_layer_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "kTtl",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "073ef8d0_16602206",
        "filename": "discovery/dnssd/impl/conversion_layer_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 107,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "const?",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "273cc0cd_9450009c",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "const?",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3fdfb015_3a74e456",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "What state are we in if we try to create a record and it fails? Does that mean we could get a callback later, or what? I\u0027m wondering if there should be some error handling/reporting here.",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2595751_ddcfc1ae",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 67,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "const auto",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9a829aa_9daf7e86",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "This method is rather large. I would be in favor of splitting it up. E.g. adding a separate ApplyEventChangesToRecord or similar.",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18ab1220_c620b5ee",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "Spelling.",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7abd02b6_02e2e1e0",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 128,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "Double nit:\n\nWe check extra conditions in this if/else set:\n\n    NOT AND NOT\n    IS AND NOT\n    NOT AND IS\n    // else\n    IS AND IS\n\nYou could do:\n\n    if (!old \u0026\u0026 !new) {\n       return;\n    }\n\n    if (old \u0026\u0026 new) {\n    \n    } else if (old) {\n    \n    } else (//new) {\n    \n    }",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f09def10_8afcd0ea",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 129,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "Nit: doesn\u0027t need to be else b/c we return in the if.",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17021c45_a6b36000",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 169,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "What is a \"keyed\" record?",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9be12eb3_370ca442",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 171,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "const?",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "385ff25c_740211ca",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 205,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "It\u0027s a bummer 14 doesn\u0027t have good filters.",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4298dbc7_6e04b7c0",
        "filename": "discovery/dnssd/impl/querier_impl.h",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "I\u0027d probably prefer #include over forward declarations from Abseil:\n\n\"Try to avoid forward declarations of entities defined in another project.\nWhen using a function declared in a header file, always #include that header.\nWhen using a class template, prefer to #include its header file.\"\n\nhttps://google.github.io/styleguide/cppguide.html#Forward_Declarations",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6b6de59_a09d08f4",
        "filename": "discovery/dnssd/impl/querier_impl.h",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-07T01:32:29Z",
      "side": 1,
      "message": "Removed in the most recent iteration and the import added back, since it\u0027s not passed by reference anymore\nChange will show up in the next iteration",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 24,
        "endChar": 1
      },
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bb71d9b8_b9b0a628",
        "filename": "discovery/dnssd/impl/querier_impl.h",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "Spelling.",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2124f46b_cab1d0cc",
        "filename": "discovery/dnssd/impl/querier_impl.h",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "Spelling.",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f264bcac_16ac7944",
        "filename": "discovery/dnssd/impl/querier_impl.h",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "%s/which represents/which represent cuz plural",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1aa1b04_42d93213",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "In unit tests, I\u0027d prefer these to be either (1) mock methods on a strict mock, or (2)  using FAIL() instead of OSP_UNIMPLEMENTED():\n\nhttps://github.com/google/googletest/blob/master/googletest/docs/advanced.md",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0c8573a_f1bf55e2",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "const kDomain? and elsewhere.",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6621aad9_56ff4351",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "const kPort?",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8e85cd3_b95af425",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 58,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "Style nit: for composition construction, I\u0027d prefer brackets for IPAddress, e.g.\n\nIPAddress{192, 168, 0, 0}\n\nYou don\u0027t need to create an anonymous array either. Same below for ipv6.",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5bd6a9bd_b5773fe1",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 84,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "Could you do DomainName ptr_domain(ptr_labels) instead?",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50526f9f_3952479a",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 90,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "kTtl",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b941ef30_409e15a8",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 132,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "Does InstanceKey actually hold refs to all of these? If not, a moveable string from the caller would likely result in an extra copy.\n\nGenerally speaking, I would say let\u0027s never have const std::string\u0026, either it\u0027s std::string or absl::string_view.",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e91a8150_553b778a",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 165,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "Why not just make a strict mock? This will already fail anyway since we expect it to be called only once, right?",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8f34579_bc9cab9f",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 178,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "Consider making this a StrictMock\u003cMockCallback\u003e. Here and elsewhere in this file.",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9b9b39c_026e64e8",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 198,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "Wait, do we actually use this dns_data? It looks like you can delete it...",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da31a806_ed22ea4e",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 233,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "const?",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3412db4_f5963479",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 263,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "Definitely a good candidate for StrictMock.",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc3e25dc_749cc0da",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 279,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "kDomainName",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ae47d17_2ee8a6f3",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 284,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "StrictMock here as well.",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e245e16_94dd739f",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 327,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "Name is confusing: OldInvalidValidRecords?",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b7b992b_f2f60510",
        "filename": "discovery/dnssd/public/querier.h",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "Thanks for this change. Const ref on string_view is no good.",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}