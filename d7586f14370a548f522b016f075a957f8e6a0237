{
  "comments": [
    {
      "key": {
        "uuid": "765478ce_e1463e87",
        "filename": "discovery/dnssd/impl/conversion_layer.cc",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-07T01:31:16Z",
      "side": 1,
      "message": "I found a bug in this file, so I added a UT to the ConversionLayer UTs\nI can split this to a separate CL if you prefer",
      "range": {
        "startLine": 78,
        "startChar": 39,
        "endLine": 78,
        "endChar": 44
      },
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "74deb27c_e39d2c49",
        "filename": "discovery/dnssd/impl/conversion_layer_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "These are all named incorrectly. This should be kDomainName, kServiceName, etc.",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4cd3eafc_8b59cc10",
        "filename": "discovery/dnssd/impl/conversion_layer_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-15T00:48:25Z",
      "side": 1,
      "message": "These are being moved to a separate file as part of a separate refactoring CL - I will plan a follow-up CL to rename these once that goes in",
      "parentUuid": "74deb27c_e39d2c49",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "82658efb_92723463",
        "filename": "discovery/dnssd/impl/conversion_layer_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "I probably should have jumped into the original review for this file... I would prefer dns_class over clazz.",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93c359bb_41355c7d",
        "filename": "discovery/dnssd/impl/conversion_layer_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-15T00:48:25Z",
      "side": 1,
      "message": "These are being moved to a separate file as part of a separate refactoring CL - I will plan a follow-up CL to rename these once that goes in",
      "parentUuid": "82658efb_92723463",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a070ea55_c3f365a0",
        "filename": "discovery/dnssd/impl/conversion_layer_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "const std::vector\u003cstd::string\u003e kPtrLabels",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1557f62a_5bc23161",
        "filename": "discovery/dnssd/impl/conversion_layer_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-15T00:48:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a070ea55_c3f365a0",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "09f7cff4_d420dd7b",
        "filename": "discovery/dnssd/impl/conversion_layer_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "const?",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5d8846a_522cfc61",
        "filename": "discovery/dnssd/impl/conversion_layer_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-15T00:48:25Z",
      "side": 1,
      "message": "Added std::move below so no longer const",
      "parentUuid": "09f7cff4_d420dd7b",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f081ab18_7a02b92b",
        "filename": "discovery/dnssd/impl/conversion_layer_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "kTtl",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b373eb3_f7a7d9e0",
        "filename": "discovery/dnssd/impl/conversion_layer_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-15T00:48:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f081ab18_7a02b92b",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "073ef8d0_16602206",
        "filename": "discovery/dnssd/impl/conversion_layer_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 107,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "const?",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26293c20_ba47e0d0",
        "filename": "discovery/dnssd/impl/conversion_layer_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 107,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-15T00:48:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "073ef8d0_16602206",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "273cc0cd_9450009c",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "const?",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "599e5366_c1b73f68",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-15T00:48:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "273cc0cd_9450009c",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fdfb015_3a74e456",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "What state are we in if we try to create a record and it fails? Does that mean we could get a callback later, or what? I\u0027m wondering if there should be some error handling/reporting here.",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1770ad03_aa321263",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-15T00:48:25Z",
      "side": 1,
      "message": "If we aren\u0027t able to create a record, that\u0027s a normal state - nothing that needs to be reported\n\nWe can only create a valid InstanceRecord after we\u0027ve received multiple DNS records (SRV, TXT, and A or AAAA) - so until that happens, this will return an error",
      "parentUuid": "3fdfb015_3a74e456",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c2595751_ddcfc1ae",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 67,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "const auto",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98d20f3f_31ef9dc0",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 67,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-15T00:48:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c2595751_ddcfc1ae",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e9a829aa_9daf7e86",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "This method is rather large. I would be in favor of splitting it up. E.g. adding a separate ApplyEventChangesToRecord or similar.",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9ac087e_81efae7a",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-15T00:48:25Z",
      "side": 1,
      "message": "Done\n\nBroke it up into a few methods\nThe HandleNonPtrRecordChange() method will also get a bit shorter after the refactor CL (being reviewed in parallel) goes in",
      "parentUuid": "e9a829aa_9daf7e86",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18ab1220_c620b5ee",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "Spelling.",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc998651_aeed3cfa",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-15T00:48:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "18ab1220_c620b5ee",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7abd02b6_02e2e1e0",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 128,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "Double nit:\n\nWe check extra conditions in this if/else set:\n\n    NOT AND NOT\n    IS AND NOT\n    NOT AND IS\n    // else\n    IS AND IS\n\nYou could do:\n\n    if (!old \u0026\u0026 !new) {\n       return;\n    }\n\n    if (old \u0026\u0026 new) {\n    \n    } else if (old) {\n    \n    } else (//new) {\n    \n    }",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8144880c_982ec335",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 128,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-15T00:48:25Z",
      "side": 1,
      "message": "Reorganized to remove the return condition entirely\n\nI agree it\u0027s checking extra conditions, but I feel that improves readability (and the compiler should be smart enough to get rid of them) - I\u0027m happy to change if you disagree about readability though",
      "parentUuid": "7abd02b6_02e2e1e0",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f09def10_8afcd0ea",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 129,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "Nit: doesn\u0027t need to be else b/c we return in the if.",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb0ce37c_e1616811",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 129,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-15T00:48:25Z",
      "side": 1,
      "message": "Closed as duplicate of above",
      "parentUuid": "f09def10_8afcd0ea",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17021c45_a6b36000",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 169,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "What is a \"keyed\" record?",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b632b70e_c6f21fa3",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 169,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-15T00:48:25Z",
      "side": 1,
      "message": "I\u0027d intended it here to mean \"Erase Records in map with key equal to the provided Key\".\n\nUpdated to EraseInstancesOf(ServiceKey service) - I think this works better because there is an IsInstanceOf() method to compare InstanceKey and ServiceKey objects",
      "parentUuid": "17021c45_a6b36000",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9be12eb3_370ca442",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 171,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "const?",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bbb218ad_19acf6e7",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 171,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-15T00:48:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9be12eb3_370ca442",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "385ff25c_740211ca",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 205,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "It\u0027s a bummer 14 doesn\u0027t have good filters.",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4298dbc7_6e04b7c0",
        "filename": "discovery/dnssd/impl/querier_impl.h",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "I\u0027d probably prefer #include over forward declarations from Abseil:\n\n\"Try to avoid forward declarations of entities defined in another project.\nWhen using a function declared in a header file, always #include that header.\nWhen using a class template, prefer to #include its header file.\"\n\nhttps://google.github.io/styleguide/cppguide.html#Forward_Declarations",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bdcd539a_9846701f",
        "filename": "discovery/dnssd/impl/querier_impl.h",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-15T00:48:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4298dbc7_6e04b7c0",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c6b6de59_a09d08f4",
        "filename": "discovery/dnssd/impl/querier_impl.h",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-07T01:32:29Z",
      "side": 1,
      "message": "Removed in the most recent iteration and the import added back, since it\u0027s not passed by reference anymore\nChange will show up in the next iteration",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 24,
        "endChar": 1
      },
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bb71d9b8_b9b0a628",
        "filename": "discovery/dnssd/impl/querier_impl.h",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "Spelling.",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa0b4831_ebc83d95",
        "filename": "discovery/dnssd/impl/querier_impl.h",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-15T00:48:25Z",
      "side": 1,
      "message": "Had to read this 5 times to figure out which word was spelled wrong :) Spelling is harder than coding sometimes",
      "parentUuid": "bb71d9b8_b9b0a628",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2124f46b_cab1d0cc",
        "filename": "discovery/dnssd/impl/querier_impl.h",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "Spelling.",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86b90549_4872a840",
        "filename": "discovery/dnssd/impl/querier_impl.h",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-15T00:48:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2124f46b_cab1d0cc",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f264bcac_16ac7944",
        "filename": "discovery/dnssd/impl/querier_impl.h",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "%s/which represents/which represent cuz plural",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "562daed0_8bf598c0",
        "filename": "discovery/dnssd/impl/querier_impl.h",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-15T00:48:25Z",
      "side": 1,
      "message": "Done, and also reworded the rest to make it clearer",
      "parentUuid": "f264bcac_16ac7944",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1aa1b04_42d93213",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "In unit tests, I\u0027d prefer these to be either (1) mock methods on a strict mock, or (2)  using FAIL() instead of OSP_UNIMPLEMENTED():\n\nhttps://github.com/google/googletest/blob/master/googletest/docs/advanced.md",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82f2111e_7a8d7425",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-15T00:48:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d1aa1b04_42d93213",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0c8573a_f1bf55e2",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "const kDomain? and elsewhere.",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00187b4f_57778097",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-15T00:48:25Z",
      "side": 1,
      "message": "changed to std::move",
      "parentUuid": "d0c8573a_f1bf55e2",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6621aad9_56ff4351",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "const kPort?",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd451e89_bceb0a4d",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-15T00:48:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6621aad9_56ff4351",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8e85cd3_b95af425",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 58,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "Style nit: for composition construction, I\u0027d prefer brackets for IPAddress, e.g.\n\nIPAddress{192, 168, 0, 0}\n\nYou don\u0027t need to create an anonymous array either. Same below for ipv6.",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43724df5_bade84fa",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 58,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-15T00:48:25Z",
      "side": 1,
      "message": "Done\n\nI hit a compilation issue for this before - though it seems to be working now!",
      "parentUuid": "a8e85cd3_b95af425",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5bd6a9bd_b5773fe1",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 84,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "Could you do DomainName ptr_domain(ptr_labels) instead?",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a075bc2_b8da2def",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 84,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-15T00:48:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5bd6a9bd_b5773fe1",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50526f9f_3952479a",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 90,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "kTtl",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "461cbec3_e746606e",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 90,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-15T00:48:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "50526f9f_3952479a",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b941ef30_409e15a8",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 132,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "Does InstanceKey actually hold refs to all of these? If not, a moveable string from the caller would likely result in an extra copy.\n\nGenerally speaking, I would say let\u0027s never have const std::string\u0026, either it\u0027s std::string or absl::string_view.",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1957e593_fc55333a",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 132,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-15T00:48:25Z",
      "side": 1,
      "message": "In these test methods, the strings are generally not movable when calling this method - we are calling them with static strings, where we would need to copy if they are non-refs. So this eliminates one copy\n\nIn general, I disagree about never having const std::string\u0026 - if we can\u0027t move the string, a const ref is better. For string_view, it\u0027s only better to copy than have a const ref because constructing a new string_view is actually cheaper than creating the ref",
      "parentUuid": "b941ef30_409e15a8",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e91a8150_553b778a",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 165,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "Why not just make a strict mock? This will already fail anyway since we expect it to be called only once, right?",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3546171_76417334",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 165,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-15T00:48:25Z",
      "side": 1,
      "message": "Updated to StrictMock\n\nI think leaving the Times(0) here will make the failure clearer - otherwise we will just get Called twice instead of once, and it won\u0027t say at what point it was called",
      "parentUuid": "e91a8150_553b778a",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8f34579_bc9cab9f",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 178,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "Consider making this a StrictMock\u003cMockCallback\u003e. Here and elsewhere in this file.",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea581372_1a421b91",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 178,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-15T00:48:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c8f34579_bc9cab9f",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9b9b39c_026e64e8",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 198,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "Wait, do we actually use this dns_data? It looks like you can delete it...",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4fdff148_1fc9a3b3",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 198,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-15T00:48:25Z",
      "side": 1,
      "message": "the dns_data variable is used to modify the data created inside querier as part of CreateDnsData(). The variable itself doesn\u0027t actually hold data, but is used to read + write data for the querier object\u0027s DnsData entity in the received_records_ map\n\nIt\u0027s essentially just a hack to get around DnsData entites inside received_records_ not being mockable",
      "parentUuid": "b9b9b39c_026e64e8",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da31a806_ed22ea4e",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 233,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "const?",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20356886_8c5042d3",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 233,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-15T00:48:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "da31a806_ed22ea4e",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3412db4_f5963479",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 263,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "Definitely a good candidate for StrictMock.",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c7fb327_f7e04567",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 263,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-15T00:48:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c3412db4_f5963479",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc3e25dc_749cc0da",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 279,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "kDomainName",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c9c2a25_b47a796d",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 279,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-15T00:48:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fc3e25dc_749cc0da",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ae47d17_2ee8a6f3",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 284,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "StrictMock here as well.",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1651a038_52b26efc",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 284,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-15T00:48:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5ae47d17_2ee8a6f3",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e245e16_94dd739f",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 327,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "Name is confusing: OldInvalidValidRecords?",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "621f0a60_a48606f2",
        "filename": "discovery/dnssd/impl/querier_impl_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 327,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-11-15T00:48:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9e245e16_94dd739f",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b7b992b_f2f60510",
        "filename": "discovery/dnssd/public/querier.h",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-11-14T21:36:37Z",
      "side": 1,
      "message": "Thanks for this change. Const ref on string_view is no good.",
      "revId": "d7586f14370a548f522b016f075a957f8e6a0237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}