{
  "comments": [
    {
      "key": {
        "uuid": "7d67b128_9e0f4da6",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 50,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "This could use a comment explaining what it is, along with comments on the members.  Like where are the indeces pointing?",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75aeddf4_4567f408",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 50,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7d67b128_9e0f4da6",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a2c1456_3dc03527",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 53,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "_index?",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c554033_e2548fd1",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 53,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1a2c1456_3dc03527",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de6a268c_0af42891",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "Would be nice to comment that this is for passing into ASN1_BIT_STRING_get_bit(key_usage, KeyUsageBits)",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64afd73e_9c26f0f9",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "de6a268c_0af42891",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1cdaf7bb_5c56533c",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 58,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "Some comment or reference to what these mean would be nice.",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f77e9da6_b2c56495",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 58,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1cdaf7bb_5c56533c",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd8032ae_35f6c7c6",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 62,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "Could we use type aliases to give these things better type names?  \n\nEVP_MD \u003d\u003e SslDigest\nEVP_PKEY \u003d\u003e SslPublicKey \nEVP_MD_CTX \u003d\u003e SslDigestContext\nX509 \u003d\u003e SslCertificate\nX509_NAME \u003d\u003e SslCertificateName\nASN1_GENERALIZEDTIME \u003d\u003e SslSerializedTime\nX509_EXTENSION \u003d\u003e SslCertificateExtension\nASN1_BIT_STRING \u003d\u003e SslCertificateBitString\nBASIC_CONSTRAINTS \u003d\u003e SslCertificateBasicConstraints\n\n\nAnd so on.  It would make things a lot easier to read.\n\nEven better would be if you could wrap the ones with getter functions to have methods, like ssl_cert.public_key() instead of X509_get_pubkey(ssl_cert).",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90c32829_239286c7",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 62,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-07-31T22:43:27Z",
      "side": 1,
      "message": "I think it would make it harder to mentally map it to boringssl to figure out what actually is happening when someone has to make changes",
      "parentUuid": "cd8032ae_35f6c7c6",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec1b901e_d10ddf0f",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 62,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "I agree with Max that it would just add to mental indirection.",
      "parentUuid": "90c32829_239286c7",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bb906fb6_4e2d4397",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 66,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "Shouldn\u0027t this info be propagated back through the callers of this function to the public methods so external callers will know?",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1e090cf_0bdbef51",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 66,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "What info?",
      "parentUuid": "bb906fb6_4e2d4397",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9afbd08_60459054",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 86,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "If we only need the public key, why not take that as an argument instead of the entire cert?",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0944c8cd_2060030a",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 86,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a9afbd08_60459054",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "94d107a4_62f43188",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 112,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "Lower down, I suggest a CreateDigest function.  That would be useful here as well.",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ff96b32_90a5b32a",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 112,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "They\u0027re different constants.",
      "parentUuid": "94d107a4_62f43188",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d691197b_2bf51382",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 126,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "I\u0027d feel more comfortable passing in a const ref to a std::vector with the start index and stop index.",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9cbc3451_a282fb91",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 126,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d691197b_2bf51382",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d60dee65_9e5f01f2",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 137,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "ParseAsn1GeneralizedTime?",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4001f9e9_777d9889",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 137,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d60dee65_9e5f01f2",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "46f80e91_3c4e14a9",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 159,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "A simple Asn1TimeDigit(time, index) helper method would make this a bit more readable.\n\nOr better yet an Asn1TimeDoubleDigit(time, index) would be even better.",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0145090b_c65fa808",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 159,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "46f80e91_3c4e14a9",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "13fab8f8_5e255621",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 170,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "An IsLeapYear and a DaysPerMonth helper function might be nice here.",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc7bc8dc_0c647a92",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 170,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "I think it\u0027s small enough that it\u0027s clearer inline.",
      "parentUuid": "13fab8f8_5e255621",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c60be514_53f18479",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 187,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "IsDateTimeBefore?\n\nOr just add operator\u003c to the struct?",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c679ee3_4499d6d3",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 187,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "IsDateTimeBefore",
      "parentUuid": "c60be514_53f18479",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c135e4e_62e4d148",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 273,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "Could much of the following big chunk of code be broken into a GetCertBasicConstraints function like the GetKeyUsage function above?",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbca8e90_5f46de42",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 273,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "GetKeyUsage is used twice.  This will be factored out in the follow-up to address remaining verification TODOs though.",
      "parentUuid": "7c135e4e_62e4d148",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb63d80f_96ae0237",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 288,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "Why are these not early returns?  All the remaining code checks that error \u003d\u003d CastCertError::kNone.  An early return would be much more readable, especially if the if/else were reversed.",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56fcf8c5_f2b27851",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 288,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "Already done.",
      "parentUuid": "fb63d80f_96ae0237",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c20d16aa_f2696689",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 308,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-07-29T20:05:05Z",
      "side": 1,
      "message": "Could you please do an early return on these?",
      "range": {
        "startLine": 303,
        "startChar": 1,
        "endLine": 308,
        "endChar": 3
      },
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b035b32_52c854a3",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 308,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-30T20:51:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c20d16aa_f2696689",
      "range": {
        "startLine": 303,
        "startChar": 1,
        "endLine": 308,
        "endChar": 3
      },
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f98e748_894baed8",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 308,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-07-30T21:39:57Z",
      "side": 1,
      "message": "I should have explained better, I meant negating the if condition to push the code to the left and reduce nesting.\n\nif (basic_constraints_index \u003d\u003d -1) {\n  return CastCertError::kErrCertsVerifyGeneric;\n}\n\nif (!basic_constraints || !basic_constraints-\u003eca) {\n  return CastCertError::kErrCertsVerifyGeneric;\n}",
      "parentUuid": "9b035b32_52c854a3",
      "range": {
        "startLine": 303,
        "startChar": 1,
        "endLine": 308,
        "endChar": 3
      },
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10f47f21_b085ca72",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 308,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T00:39:08Z",
      "side": 1,
      "message": "Ah, of course.  I think the former loop structure just confused me.",
      "parentUuid": "0f98e748_894baed8",
      "range": {
        "startLine": 303,
        "startChar": 1,
        "endLine": 308,
        "endChar": 3
      },
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5453da5a_7a948856",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 317,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "Would this be more clear as something like this?\n\nbool is_root \u003d (i \u003d\u003d step_index);\n// Root does not need to have cert time verified\nif (!is_root \u0026\u0026 !VerifyCertTime(issuer, time, \u0026error))) {\n}",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0813359_20f46fec",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 317,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5453da5a_7a948856",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa8e83b4_b3017598",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 320,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "Again, why not an early return (on all of these breaks)",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61fb89b0_25f74f81",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 320,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "Already done.",
      "parentUuid": "aa8e83b4_b3017598",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc6052aa_e05b8f31",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 344,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "But then it just breaks out of the loop anyway, right?  So what \"continue\" and not \"break\" (or return)?",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6d2d864_a808083a",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 344,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "\u0027break\u0027 is part of switch syntax so it doesn\u0027t have the same meaning here.  Already made this early return though.",
      "parentUuid": "bc6052aa_e05b8f31",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b8d1d5d_dab802b6",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 345,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-07-29T20:05:05Z",
      "side": 1,
      "message": "EVP_get_digestbynid",
      "range": {
        "startLine": 328,
        "startChar": 4,
        "endLine": 345,
        "endChar": 5
      },
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5065c69f_443ff6d4",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 345,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-30T20:51:23Z",
      "side": 1,
      "message": "We also need to ensure the hash function is \u003e\u003d sha1 though, so we still need to check these 5 cases.",
      "parentUuid": "3b8d1d5d_dab802b6",
      "range": {
        "startLine": 328,
        "startChar": 4,
        "endLine": 345,
        "endChar": 5
      },
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fbbb1ef_a36bebbf",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 345,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-07-30T21:39:57Z",
      "side": 1,
      "message": "I can\u0027t get rid of the feeling that there\u0027s a much easier way to do perform substantial parts of this entire process (not just this part) by calling some very high-level bssl functions.",
      "parentUuid": "5065c69f_443ff6d4",
      "range": {
        "startLine": 328,
        "startChar": 4,
        "endLine": 345,
        "endChar": 5
      },
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d4e3f6d_758a9601",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 345,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T00:39:08Z",
      "side": 1,
      "message": "Well, there may be but it\u0027s not completely straightforward.\n\nX509_verify_cert() will verify a complete chain.  However:\n 1. If we let it do the path-finding as well, I\u0027m not sure how we get the successful path back.  This might not be important except...\n 2. It doesn\u0027t seem to check the pathlenConstraint extension correctly (it seems to skip it on the root cert, which is exactly where we want it).\n 3. We also need to be able to override certificate expiration checking on the root (well, need may be a strong word since current certs are good til 2032 or later and hopefully something else is figured out by then) and that doesn\u0027t seem trivial with the particular callback interface openssl gives us.\n\nRight now I feel this route will still be easier, but I\u0027m happy to discuss/elaborate-on the X509_verify_cert further if anyone feels strongly.",
      "parentUuid": "5fbbb1ef_a36bebbf",
      "range": {
        "startLine": 328,
        "startChar": 4,
        "endLine": 345,
        "endChar": 5
      },
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f67d7605_b1324a7a",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 345,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "Could it make sense to have a CreateDigest method that we could have be like this:\n\nconst EVP_MD* digest \u003d CreateDigest(subject-\u003esig_alg-\u003ealgorithm)\n\n?",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09672113_28f53ac0",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 345,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "Since the two switches here use different constants, I\u0027m more inclined to leave as it is.",
      "parentUuid": "f67d7605_b1324a7a",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34e16afa_ada8f0f2",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 374,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "This impl is so complicated.  It seriously needs a comment explaining how it works, and perhaps some helper methods to pull out and simply this code.",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9bcc2e0_cb43991c",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 374,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "I added some more block-level comments on the high-level idea.",
      "parentUuid": "34e16afa_ada8f0f2",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c7d7b87_8dd0041e",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 397,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "does \"for (auto der_cert : der_certs)\" not work?",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af524c49_ef97e703",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 397,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "It could be it conflicts with the other suggestion I went with.",
      "parentUuid": "9c7d7b87_8dd0041e",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "93208e01_dab40219",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 406,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "Would it make more sense to have a ParseDer function that you just call in more than one place?\n\ntarget_cert \u003d ParseDer(der_certs[0]);\nif (!target_cert) {\n  return CastCertError::kErrCertsParse;\n}\nfor (size_t i \u003d 1; i \u003c certs.size(); ++i) {\n  intermediate_certs.emplace_back(ParseDer(der_certs[i]));\n  if (!intermediate_certs.back()) {\n    return CastCertError::kErrCertsParse;\n  }\n}",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d5b04c2_d634b770",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 406,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "93208e01_dab40219",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fad8d132_46a1e8ad",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 421,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-07-29T20:05:05Z",
      "side": 1,
      "message": "Wouldn\u0027t X509_verify work?",
      "range": {
        "startLine": 415,
        "startChar": 2,
        "endLine": 421,
        "endChar": 3
      },
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "448620f2_ceeaf0fc",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 421,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-30T20:51:23Z",
      "side": 1,
      "message": "It would only accomplish X509_ALGOR_cmp and VerifySignedData.  However, we already need the type-wrapping of VerifySignedData for CastVerificationContextImpl.",
      "parentUuid": "fad8d132_46a1e8ad",
      "range": {
        "startLine": 415,
        "startChar": 2,
        "endLine": 421,
        "endChar": 3
      },
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5f21237_ac42cc26",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 425,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "Why +2?  Could use a comment or named constant.",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb907839_9d5f9569",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 425,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "This vector isn\u0027t used as resizable, so instead we allocate the largest possible single path up front.  This would be a single trusted cert, all the intermediate certs used once, and the target cert.  Added comment.",
      "parentUuid": "c5f21237_ac42cc26",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f2288df_c008dee1",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 426,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "The path is in reverse order?  That could be worth documenting.  In fact, you might consider making CertPath data type to go along with your CertPathStep data type.",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70eccebf_5d29d7d8",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 426,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3f2288df_c008dee1",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7115a1e2_b51dd221",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 427,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "A comment explaining what \"hit_trust\" would be nice, or a name that is more descriptive.",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5a5f571_9be72776",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 427,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7115a1e2_b51dd221",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d549c3ea_0e2944e6",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 428,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "A comment explaining what \"step_index\" means would be nice.\n\nOr perhaps this would be better:\n\nCertPathStep\u0026 current_step \u003d path[path.size() - 1].",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8ba6a81_4348f9e7",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 428,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "How would you get |next_step| from only |current_step|?  Added comment to |step_index|.",
      "parentUuid": "d549c3ea_0e2944e6",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c64f0ad2_4e10ac09",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 433,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "If getting the issuer name from the path head is called the \"target\" issuer name, should we call the path head \"target\" instead?",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce1c2cc9_2bd2136f",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 433,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "I don\u0027t think so, because \"target\" usually refers to the absolute leaf in a certificate chain.  \"target issuer name\" is the \"issuer name\" for which we are looking right now.",
      "parentUuid": "c64f0ad2_4e10ac09",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ed4ced8_3b1bba69",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 434,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "This could use a comment explaining what it means.",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b12c00b4_9d641ab4",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 434,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3ed4ced8_3b1bba69",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "094ddb33_66ab6d3a",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 435,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "Does a nice C++11 for loop not work?",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fad559b1_7cd88995",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 435,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "No.  |i| is used directly to stop/resume this loop.",
      "parentUuid": "094ddb33_66ab6d3a",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6757d87f_07668bd7",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 436,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "Maybe \"trust_store_cert\" would be more clear.  Lots of things around here are called \"cert\"!",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d87190f9_c7812972",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 436,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6757d87f_07668bd7",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d827fc62_cd18a18e",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 439,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "And trusted_store_cert_name.",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc727ea4_80781066",
        "filename": "cast/common/certificate/cast_cert_validator.cc",
        "patchSetId": 5
      },
      "lineNbr": 439,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d827fc62_cd18a18e",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "873feb0c_53f74b07",
        "filename": "cast/common/certificate/cast_cert_validator.h",
        "patchSetId": 5
      },
      "lineNbr": 18,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "It might be helpful to readers to comment somewhere the definition of CRL.",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84472471_e59d5b43",
        "filename": "cast/common/certificate/cast_cert_validator.h",
        "patchSetId": 5
      },
      "lineNbr": 18,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "I think that\u0027ll be more appropriate in the coming implementation of revocation lists.",
      "parentUuid": "873feb0c_53f74b07",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f7d1d0b_62932dae",
        "filename": "cast/common/certificate/cast_cert_validator.h",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "kUnrestricted?",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "457f589c_9fc99422",
        "filename": "cast/common/certificate/cast_cert_validator.h",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9f7d1d0b_62932dae",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c836d6cb_f5546063",
        "filename": "cast/common/certificate/cast_cert_validator.h",
        "patchSetId": 5
      },
      "lineNbr": 49,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "DateTime?",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "199a09f6_50624161",
        "filename": "cast/common/certificate/cast_cert_validator.h",
        "patchSetId": 5
      },
      "lineNbr": 49,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c836d6cb_f5546063",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d81151c6_a2e05543",
        "filename": "cast/common/certificate/cast_cert_validator.h",
        "patchSetId": 5
      },
      "lineNbr": 112,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "I\u0027m confused because it\u0027s not a unix timestamp.  It\u0027s more like a DateTime struct.",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad6f8c10_f38791b8",
        "filename": "cast/common/certificate/cast_cert_validator.h",
        "patchSetId": 5
      },
      "lineNbr": 112,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "Already updated.",
      "parentUuid": "d81151c6_a2e05543",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39363217_cd3dcbfb",
        "filename": "cast/common/certificate/cast_cert_validator.h",
        "patchSetId": 5
      },
      "lineNbr": 133,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "der_certs?",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c4e27c8_c4a656af",
        "filename": "cast/common/certificate/cast_cert_validator.h",
        "patchSetId": 5
      },
      "lineNbr": 133,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "39363217_cd3dcbfb",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "592751fa_e75f920e",
        "filename": "cast/common/certificate/cast_cert_validator_internal.h",
        "patchSetId": 5
      },
      "lineNbr": 6,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-07-31T21:56:13Z",
      "side": 1,
      "message": "Do we know what the word \"internal\" means in this context?",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "196d2e3f_0fe5520b",
        "filename": "cast/common/certificate/cast_cert_validator_internal.h",
        "patchSetId": 5
      },
      "lineNbr": 6,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-31T23:42:06Z",
      "side": 1,
      "message": "I\u0027m not 100% sure I understand the question, but: if you\u0027re not in //cast/common/certificate, don\u0027t include this directly.",
      "parentUuid": "592751fa_e75f920e",
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a196889_cb5a3a0e",
        "filename": "cast/common/certificate/eureka_root_ca_der-inc.h",
        "patchSetId": 5
      },
      "lineNbr": 68,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-07-29T22:43:35Z",
      "side": 1,
      "message": "Is there a certificate rotation story for the Eureka Root CA? \n\nIf so: A Hard-coded value seems difficult to update when the Root CA is rotated. Can we read from the local machine\u0027s cert store (not sure if that\u0027s a thing in posix) or from a separate file we could update separately from the code?\n\nIf not: Do we have security sign off for never rotating this cert? My intuition / previous work with certs is telling me that never rotating a cert is insecure",
      "range": {
        "startLine": 68,
        "startChar": 20,
        "endLine": 68,
        "endChar": 36
      },
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27874f09_658d929f",
        "filename": "cast/common/certificate/eureka_root_ca_der-inc.h",
        "patchSetId": 5
      },
      "lineNbr": 68,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-30T20:51:23Z",
      "side": 1,
      "message": "AFAIK these two roots have been fixed since the beginning and there\u0027s no intent to change them.\n\nI will have to follow-up with Mark when he gets back to get the complete answer here.",
      "parentUuid": "9a196889_cb5a3a0e",
      "range": {
        "startLine": 68,
        "startChar": 20,
        "endLine": 68,
        "endChar": 36
      },
      "revId": "0467b6486501356cbfc00ef0efc89ca26d6dafc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}