{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2c4a0bb6_e137c001",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 3414704
      },
      "writtenOn": "2024-05-01T10:44:10Z",
      "side": 1,
      "message": "FYI: I attempted to write a test case for this using `quic::test::PacketSavingConnection`. However, this will require some restructuring to avoid the hard dependency of `QuicConnectionImpl` on `UdpSocket::Client`. As it is a larger change I would prefer to pick that up in a separate change.",
      "revId": "1753c06435876e00940085c82f39fe78c6257ee1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a4a7e25_dcf0a093",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2024-05-01T15:46:40Z",
      "side": 1,
      "message": "Thanks for considering test cases. `UdpSocket::Client` is pure virtual and you can use the gmock testing framework to mock it out.  However, you might need some refactoring to inject the mock socket into `QuicConnectionImpl`.",
      "parentUuid": "2c4a0bb6_e137c001",
      "revId": "1753c06435876e00940085c82f39fe78c6257ee1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd54253e_9a75cafc",
        "filename": "osp/impl/quic/open_screen_session_base.h",
        "patchSetId": 6
      },
      "lineNbr": 45,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2024-05-01T15:44:50Z",
      "side": 1,
      "message": "Super nit: End comments with a period for consistency.",
      "revId": "1753c06435876e00940085c82f39fe78c6257ee1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "070eac18_6c254aae",
        "filename": "osp/impl/quic/quic_connection_factory_server.cc",
        "patchSetId": 6
      },
      "lineNbr": 88,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2024-05-01T15:44:50Z",
      "side": 1,
      "message": "Style: It\u0027s common to use \u0027auto\u0027 to declare the lvalue holding the result of std::make_unique when the types are the same on the LHS and RHS",
      "revId": "1753c06435876e00940085c82f39fe78c6257ee1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb279abe_a97d7a1f",
        "filename": "osp/impl/quic/quic_constants.h",
        "patchSetId": 6
      },
      "lineNbr": 10,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2024-05-01T15:44:50Z",
      "side": 1,
      "message": "Do you mind adding a comment like:\n\n// ALPN required for QUIC connections made by OSP.\n// Spec: \u003curl\u003e",
      "revId": "1753c06435876e00940085c82f39fe78c6257ee1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "686f0b85_0f1cf531",
        "filename": "osp/impl/quic/quic_version_manager.h",
        "patchSetId": 6
      },
      "lineNbr": 17,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2024-05-01T15:44:50Z",
      "side": 1,
      "message": "Please also define or delete the move constructor and move copy operator.",
      "revId": "1753c06435876e00940085c82f39fe78c6257ee1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}