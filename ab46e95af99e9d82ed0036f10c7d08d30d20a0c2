{
  "comments": [
    {
      "key": {
        "uuid": "68117e48_d8d0bad8",
        "filename": "discovery/mdns/mdns_service_impl.cc",
        "patchSetId": 7
      },
      "lineNbr": 59,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-28T00:26:37Z",
      "side": 1,
      "message": "A network interface bound on v4 and v6 will never send queries on v6?\n\nThis is probably a reasonable default behavior.  It would be surprising if the set of nodes reachable by multicast over v4 was different from the set reachable over v6.\n\nCreating 2 sockets would just double the network traffic in most cases.\n\nEventually, we may want to give clients the choice to prefer using v4 or v6.",
      "revId": "ab46e95af99e9d82ed0036f10c7d08d30d20a0c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "074a7162_2774e397",
        "filename": "discovery/mdns/mdns_service_impl.cc",
        "patchSetId": 7
      },
      "lineNbr": 59,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-28T17:49:44Z",
      "side": 1,
      "message": "SGTM\n\nThe second socket in this case is to listen on a different set of address/port combinations - mDNS has both v6 and v4 ports allocated for incoming traffic.",
      "parentUuid": "68117e48_d8d0bad8",
      "revId": "ab46e95af99e9d82ed0036f10c7d08d30d20a0c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0db24c28_c7c9635d",
        "filename": "discovery/mdns/mdns_service_impl.cc",
        "patchSetId": 7
      },
      "lineNbr": 59,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-28T18:00:45Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "074a7162_2774e397",
      "revId": "ab46e95af99e9d82ed0036f10c7d08d30d20a0c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ec5a6beb_678b27fc",
        "filename": "discovery/mdns/mdns_service_impl.cc",
        "patchSetId": 7
      },
      "lineNbr": 77,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-28T00:26:37Z",
      "side": 1,
      "message": "If socket_v4_ is set, socket_v6_ will never get used.",
      "revId": "ab46e95af99e9d82ed0036f10c7d08d30d20a0c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "526fd15c_31131bbd",
        "filename": "discovery/mdns/mdns_service_impl.cc",
        "patchSetId": 7
      },
      "lineNbr": 77,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-28T17:49:44Z",
      "side": 1,
      "message": "That\u0027s only half true. v6_ will never be used for sending - it will still be used for receiving on the mDNS v6 addresses/ports",
      "parentUuid": "ec5a6beb_678b27fc",
      "revId": "ab46e95af99e9d82ed0036f10c7d08d30d20a0c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd770e6b_1a15f14f",
        "filename": "discovery/mdns/mdns_service_impl.cc",
        "patchSetId": 7
      },
      "lineNbr": 77,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-28T18:00:45Z",
      "side": 1,
      "message": "Got it, it wasn\u0027t obvious because reading was snuck into the .h.\n\nCan you update the comment at L72 to clarify that only one socket is used for sending and both are for receiving?",
      "parentUuid": "526fd15c_31131bbd",
      "revId": "ab46e95af99e9d82ed0036f10c7d08d30d20a0c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91d87ba2_c3820fa3",
        "filename": "discovery/mdns/mdns_service_impl.h",
        "patchSetId": 7
      },
      "lineNbr": 54,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-28T18:00:45Z",
      "side": 1,
      "message": "Nit: Non-trivial methods should be declared in the .cc",
      "revId": "ab46e95af99e9d82ed0036f10c7d08d30d20a0c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b75a8e72_c923b6bc",
        "filename": "platform/base/interface_info.h",
        "patchSetId": 7
      },
      "lineNbr": 64,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-28T00:26:37Z",
      "side": 1,
      "message": "Bike shed: HasIpV4Address()\n\nSince an interface can support IPv6 in theory, but may not currently have a V6 assigned address.",
      "revId": "ab46e95af99e9d82ed0036f10c7d08d30d20a0c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85e0369f_35107ea0",
        "filename": "platform/base/interface_info.h",
        "patchSetId": 7
      },
      "lineNbr": 64,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-28T17:49:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b75a8e72_c923b6bc",
      "revId": "ab46e95af99e9d82ed0036f10c7d08d30d20a0c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1301983e_1e0fa049",
        "filename": "platform/base/interface_info.h",
        "patchSetId": 7
      },
      "lineNbr": 76,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-28T00:26:37Z",
      "side": 1,
      "message": "I wonder if it\u0027s worth forcing small enums like these to be 32 bits wide.",
      "revId": "ab46e95af99e9d82ed0036f10c7d08d30d20a0c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9792985_042c946e",
        "filename": "platform/base/interface_info.h",
        "patchSetId": 7
      },
      "lineNbr": 76,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-28T17:49:44Z",
      "side": 1,
      "message": "Definitely couldn\u0027t hurt. Since this is a small enum, I\u0027ll go with an int8_t to make it even smaller",
      "parentUuid": "1301983e_1e0fa049",
      "revId": "ab46e95af99e9d82ed0036f10c7d08d30d20a0c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "858ae08a_dd257df9",
        "filename": "platform/base/interface_info.h",
        "patchSetId": 7
      },
      "lineNbr": 76,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-28T18:45:08Z",
      "side": 1,
      "message": "It looks like C++ mandates an integral type to hold all values.\n\nhttps://timsong-cpp.github.io/cppwp/n4140/dcl.enum#7\n\nThe exact width that\u0027s optimal depends on how the CPU handles aligned vs. unaligned data, so no need to force the compiler\u0027s hand.",
      "parentUuid": "d9792985_042c946e",
      "revId": "ab46e95af99e9d82ed0036f10c7d08d30d20a0c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}