{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "81d02bf3_88ca08b2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-04-06T20:43:46Z",
      "side": 1,
      "message": "+fdegans for FYI.\n",
      "revId": "6187df41231507e3544913322f029f5da24bf821",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1a1b157c_9dd8d9eb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2021-04-06T23:06:40Z",
      "side": 1,
      "message": "Also, the BuildBots might be broken because of the master -\u003e main branch change. So you might need to bypass them to get this change in",
      "revId": "6187df41231507e3544913322f029f5da24bf821",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c4d7b44_3eeb3584",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-04-06T23:24:22Z",
      "side": 1,
      "message": "Yeah, I\u0027m planning on doing that.",
      "parentUuid": "1a1b157c_9dd8d9eb",
      "revId": "6187df41231507e3544913322f029f5da24bf821",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8477bc60_4894fd95",
        "filename": "cast/protocol/castv2/streaming_schema.json",
        "patchSetId": 5
      },
      "lineNbr": 118,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2021-04-06T23:06:40Z",
      "side": 1,
      "message": "I might be missing context here\n\nIsn\u0027t this the data struct we are receiving off the wire - so changing it would break interoperability with existing Cast solutions?",
      "range": {
        "startLine": 118,
        "startChar": 9,
        "endLine": 118,
        "endChar": 22
      },
      "revId": "6187df41231507e3544913322f029f5da24bf821",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc91afd8_1608da1c",
        "filename": "cast/protocol/castv2/streaming_schema.json",
        "patchSetId": 5
      },
      "lineNbr": 118,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-04-06T23:24:22Z",
      "side": 1,
      "message": "Yes--except that Open Screen is the only implementer of the Constraints object so we can pretty much change it freely until it\u0027s implemented by Fuchsia or someone else.\n\nI will have to update Chrome\u0027s sender however.",
      "parentUuid": "8477bc60_4894fd95",
      "range": {
        "startLine": 118,
        "startChar": 9,
        "endLine": 118,
        "endChar": 22
      },
      "revId": "6187df41231507e3544913322f029f5da24bf821",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bfcb59b3_75684f6f",
        "filename": "cast/protocol/castv2/streaming_schema.json",
        "patchSetId": 5
      },
      "lineNbr": 118,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2021-04-07T00:17:41Z",
      "side": 1,
      "message": "Interesting, good to know",
      "parentUuid": "fc91afd8_1608da1c",
      "range": {
        "startLine": 118,
        "startChar": 9,
        "endLine": 118,
        "endChar": 22
      },
      "revId": "6187df41231507e3544913322f029f5da24bf821",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f055921e_7e304a28",
        "filename": "cast/protocol/castv2/streaming_schema.json",
        "patchSetId": 5
      },
      "lineNbr": 119,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2021-04-06T23:06:40Z",
      "side": 1,
      "message": "Is there a reason this can\u0027t also be \"maxResolution\"?",
      "range": {
        "startLine": 119,
        "startChar": 9,
        "endLine": 119,
        "endChar": 61
      },
      "revId": "6187df41231507e3544913322f029f5da24bf821",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bc7ed8fa_6431e798",
        "filename": "cast/protocol/castv2/streaming_schema.json",
        "patchSetId": 5
      },
      "lineNbr": 119,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-04-06T23:24:22Z",
      "side": 1,
      "message": "Yes, because we also want the frames per second.",
      "parentUuid": "f055921e_7e304a28",
      "range": {
        "startLine": 119,
        "startChar": 9,
        "endLine": 119,
        "endChar": 61
      },
      "revId": "6187df41231507e3544913322f029f5da24bf821",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ec0ac77_f607afe7",
        "filename": "cast/streaming/capture_configs.h",
        "patchSetId": 5
      },
      "lineNbr": 51,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2021-04-07T00:17:41Z",
      "side": 1,
      "message": "IMHO 2398/100 would be more readable / intuitive?",
      "range": {
        "startLine": 51,
        "startChar": 10,
        "endLine": 51,
        "endChar": 20
      },
      "revId": "6187df41231507e3544913322f029f5da24bf821",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a9f41d18_efe5eb77",
        "filename": "cast/streaming/capture_configs.h",
        "patchSetId": 5
      },
      "lineNbr": 51,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-04-07T07:30:07Z",
      "side": 1,
      "message": "Agreed, if this wasn\u0027t a special value for 24p:\n\nhttps://en.wikipedia.org/wiki/24p\n\n\"Remember that although computer editing systems may refer to \"24p\", usually the frame rate is 23.976 frame/s. To add to confusion, the popular editing program Final Cut Pro refers to 23.976 as \"23.98\" in menus and dialogs, even though it correctly works with the footage at the 23.976 frame rate. 23.976 is also not precise though, as the real frame rate is 24000/1001, so 23.98 is also a correct approximation.\"",
      "parentUuid": "8ec0ac77_f607afe7",
      "range": {
        "startLine": 51,
        "startChar": 10,
        "endLine": 51,
        "endChar": 20
      },
      "revId": "6187df41231507e3544913322f029f5da24bf821",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82639bfc_c17cd526",
        "filename": "cast/streaming/resolution.cc",
        "patchSetId": 5
      },
      "lineNbr": 75,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2021-04-07T00:17:41Z",
      "side": 1,
      "message": "This setup isn\u0027t logically consistent for boolean arithmetic - which IMHO makes it super hard to reason about\n\nIt\u0027s possible for (a \u003c b \u003d\u003d false), (b \u003c a \u003d\u003d false), and (a !\u003d b) all at the same time\n\nSo if a \u003c b \u003d\u003d false, it implies b \u003c\u003d a which isn\u0027t always true\ne.g.\na \u003d (1,2), b \u003d (2,1)",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 75,
        "endChar": 1
      },
      "revId": "6187df41231507e3544913322f029f5da24bf821",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2877a59f_8ffba6a8",
        "filename": "cast/streaming/resolution.cc",
        "patchSetId": 5
      },
      "lineNbr": 75,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-04-07T07:30:07Z",
      "side": 1,
      "message": "You are definitely right. I think operator\u003c is not a good candidate for this.",
      "parentUuid": "82639bfc_c17cd526",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 75,
        "endChar": 1
      },
      "revId": "6187df41231507e3544913322f029f5da24bf821",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "caf2278f_a42392eb",
        "filename": "cast/streaming/resolution.cc",
        "patchSetId": 5
      },
      "lineNbr": 127,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2021-04-07T00:17:41Z",
      "side": 1,
      "message": "As above",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 127,
        "endChar": 1
      },
      "revId": "6187df41231507e3544913322f029f5da24bf821",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b29bc55e_af3aa629",
        "filename": "cast/streaming/resolution.cc",
        "patchSetId": 5
      },
      "lineNbr": 127,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-04-07T07:30:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "caf2278f_a42392eb",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 127,
        "endChar": 1
      },
      "revId": "6187df41231507e3544913322f029f5da24bf821",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a1e887d_1d844d98",
        "filename": "util/simple_fraction.cc",
        "patchSetId": 5
      },
      "lineNbr": 49,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2021-04-07T00:19:54Z",
      "side": 1,
      "message": "Can you DCHECK denominator !\u003d 0?",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 49,
        "endChar": 55
      },
      "revId": "6187df41231507e3544913322f029f5da24bf821",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bab89b9b_3c74c7c0",
        "filename": "util/simple_fraction.cc",
        "patchSetId": 5
      },
      "lineNbr": 49,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-04-07T07:30:07Z",
      "side": 1,
      "message": "I don\u0027t actually think DCHECK is a good fit. SimpleFraction provides IsValid--since there are potential cases where we populate with untrusted data (e.g. from a receiver) and then check IsValid.",
      "parentUuid": "1a1e887d_1d844d98",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 49,
        "endChar": 55
      },
      "revId": "6187df41231507e3544913322f029f5da24bf821",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}