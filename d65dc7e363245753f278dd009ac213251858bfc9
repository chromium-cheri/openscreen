{
  "comments": [
    {
      "key": {
        "uuid": "7d48e707_ae388db0",
        "filename": "cast/common/public/service_info.h",
        "patchSetId": 6
      },
      "lineNbr": 116,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-03-10T20:32:54Z",
      "side": 1,
      "message": "Why this change? If there are no changes to the implementation, then there\u0027s no need to pass a non-const value here.\n\nQuestion applies to other changes that remove const from function signatures without changing the function.",
      "revId": "d65dc7e363245753f278dd009ac213251858bfc9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63eb9a46_baab324d",
        "filename": "cast/common/public/service_info.h",
        "patchSetId": 6
      },
      "lineNbr": 116,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-03-11T00:07:54Z",
      "side": 1,
      "message": "I think I got a bit too caught up in making everything a std::move operation. The calling method changed to use a moved object rather than a reference, so I made it move the object into here too\n\nOne option is to add non-const accessor methods to DnsSdInstanceRecord / DnsSdInstanceEndpoint so that the data can be moved out, rather than copied out, and improve these methods. WDYT?",
      "parentUuid": "7d48e707_ae388db0",
      "revId": "d65dc7e363245753f278dd009ac213251858bfc9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e0eea07_c9a80a18",
        "filename": "cast/common/public/service_info.h",
        "patchSetId": 6
      },
      "lineNbr": 116,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2020-03-20T20:19:29Z",
      "side": 1,
      "message": "As a rule of thumb, a method should accept a parameter by value in the following cases:\n1) it\u0027s a trivial or small type, e.g. int/double/string_view or a small struct/pair/tuple of trivial types.\n2) method knows it will make a copy of the argument for local modification anyway\n3) method plans to take ownership of the passed object and keep it (this way with pass-by-value the object can be moved into the method to store it in a member field, e.g. setter methods)\n\nOf course, in/out and out parameters are different.",
      "parentUuid": "63eb9a46_baab324d",
      "revId": "d65dc7e363245753f278dd009ac213251858bfc9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "268c6c17_29c72149",
        "filename": "discovery/dnssd/impl/instance_key.h",
        "patchSetId": 6
      },
      "lineNbr": 95,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-03-10T20:32:54Z",
      "side": 1,
      "message": "Complex operator implementations should be in the .cc",
      "revId": "d65dc7e363245753f278dd009ac213251858bfc9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc1784b6_4ce5fc21",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 47,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-03-10T20:32:54Z",
      "side": 1,
      "message": "Is there a reason to invoke |callback| asynchronously here?",
      "revId": "d65dc7e363245753f278dd009ac213251858bfc9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05a58341_2cab00ff",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 160,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-03-10T20:32:54Z",
      "side": 1,
      "message": "OSP_DVLOG",
      "revId": "d65dc7e363245753f278dd009ac213251858bfc9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "102a6c41_a22f9f92",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 173,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-03-10T20:32:54Z",
      "side": 1,
      "message": "OSP_DVLOG",
      "revId": "d65dc7e363245753f278dd009ac213251858bfc9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "034112d2_57527037",
        "filename": "discovery/dnssd/impl/service_key.h",
        "patchSetId": 6
      },
      "lineNbr": 94,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-03-10T20:32:54Z",
      "side": 1,
      "message": "Similar comment here",
      "revId": "d65dc7e363245753f278dd009ac213251858bfc9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}