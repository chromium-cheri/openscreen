{
  "comments": [
    {
      "key": {
        "uuid": "f5c4577c_2a2f2721",
        "filename": "util/url.cc",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1190572
      },
      "writtenOn": "2020-02-21T21:11:38Z",
      "side": 1,
      "message": "Is kFileSystemScheme supported?",
      "revId": "ec66cb6f672492fd1476a1426d2084902e5fd062",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04bf2c1e_d2987d23",
        "filename": "util/url.cc",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2020-04-03T09:11:58Z",
      "side": 1,
      "message": "It shouldn\u0027t be if file isn\u0027t, good point.",
      "parentUuid": "f5c4577c_2a2f2721",
      "revId": "ec66cb6f672492fd1476a1426d2084902e5fd062",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc3d04ca_8922c82a",
        "filename": "util/url.cc",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1190572
      },
      "writtenOn": "2020-02-21T21:11:38Z",
      "side": 1,
      "message": "kMailtoScheme is not included in |g_standard_schemes| in url_parse_internal.cc. Is that intentional?",
      "revId": "ec66cb6f672492fd1476a1426d2084902e5fd062",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49588870_6e8a155f",
        "filename": "util/url.cc",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2020-04-03T09:11:58Z",
      "side": 1,
      "message": "Yes, it\u0027s not part of the spec as a \"special\" scheme.  Neither is filesystem actually, on double checking, so I removed that.",
      "parentUuid": "bc3d04ca_8922c82a",
      "revId": "ec66cb6f672492fd1476a1426d2084902e5fd062",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1168cc07_eb639abe",
        "filename": "util/url.h",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1190572
      },
      "writtenOn": "2020-02-21T21:11:38Z",
      "side": 1,
      "message": "Nit: According to the style guide, I believe this is to be named Url. I don\u0027t feel strongly though\nhttps://google.github.io/styleguide/cppguide.html#General_Naming_Rules",
      "range": {
        "startLine": 17,
        "startChar": 6,
        "endLine": 17,
        "endChar": 9
      },
      "revId": "ec66cb6f672492fd1476a1426d2084902e5fd062",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "854fe70e_a22edac1",
        "filename": "util/url.h",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1190572
      },
      "writtenOn": "2020-02-21T21:11:38Z",
      "side": 1,
      "message": "Can this be a struct whose fields are all const?",
      "revId": "ec66cb6f672492fd1476a1426d2084902e5fd062",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "912faee9_71e54193",
        "filename": "util/url.h",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2020-04-03T09:11:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1168cc07_eb639abe",
      "range": {
        "startLine": 17,
        "startChar": 6,
        "endLine": 17,
        "endChar": 9
      },
      "revId": "ec66cb6f672492fd1476a1426d2084902e5fd062",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d212fcb7_3cacd884",
        "filename": "util/url.h",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2020-04-03T09:11:58Z",
      "side": 1,
      "message": "I\u0027d prefer to leave it as copy/move-able unless you feel strongly.",
      "parentUuid": "854fe70e_a22edac1",
      "revId": "ec66cb6f672492fd1476a1426d2084902e5fd062",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "768c5519_6820da21",
        "filename": "util/url.h",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1190572
      },
      "writtenOn": "2020-04-06T21:46:36Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d212fcb7_3cacd884",
      "revId": "ec66cb6f672492fd1476a1426d2084902e5fd062",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7f18e61_a9ea4d70",
        "filename": "util/url.h",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-02-21T22:36:45Z",
      "side": 1,
      "message": "explicit",
      "range": {
        "startLine": 19,
        "startChar": 2,
        "endLine": 19,
        "endChar": 5
      },
      "revId": "ec66cb6f672492fd1476a1426d2084902e5fd062",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb0d3994_370c84eb",
        "filename": "util/url.h",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2020-04-03T09:11:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f7f18e61_a9ea4d70",
      "range": {
        "startLine": 19,
        "startChar": 2,
        "endLine": 19,
        "endChar": 5
      },
      "revId": "ec66cb6f672492fd1476a1426d2084902e5fd062",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a9b5db0d_85986a43",
        "filename": "util/url.h",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-02-21T22:36:45Z",
      "side": 1,
      "message": "Given this assumption, WDYT about DCHECK\u0027ing is_valid in the other accessors?",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 28,
        "endChar": 45
      },
      "revId": "ec66cb6f672492fd1476a1426d2084902e5fd062",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc9ca6a1_414d04fa",
        "filename": "util/url.h",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2020-04-03T09:11:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a9b5db0d_85986a43",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 28,
        "endChar": 45
      },
      "revId": "ec66cb6f672492fd1476a1426d2084902e5fd062",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3c92793_753c613f",
        "filename": "util/url.h",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1190572
      },
      "writtenOn": "2020-02-21T21:11:38Z",
      "side": 1,
      "message": "I\u0027m curious as to why you went with has_foo() as opposed to making everything optional\u003cstring\u003e.",
      "revId": "ec66cb6f672492fd1476a1426d2084902e5fd062",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9e688f2_44aaa22c",
        "filename": "util/url.h",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-02-21T22:36:45Z",
      "side": 1,
      "message": "+1 for absl::optionals",
      "parentUuid": "e3c92793_753c613f",
      "revId": "ec66cb6f672492fd1476a1426d2084902e5fd062",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c29327cd_b777f3e4",
        "filename": "util/url.h",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2020-04-03T09:11:58Z",
      "side": 1,
      "message": "I think this may end up in the //cast API, where we\u0027re not allowed to use abseil ATM.",
      "parentUuid": "f9e688f2_44aaa22c",
      "revId": "ec66cb6f672492fd1476a1426d2084902e5fd062",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6dbf8efd_bc24301e",
        "filename": "util/url.h",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-04-03T15:41:01Z",
      "side": 1,
      "message": "Ack\n\nNot for this CL, but it might be worth writing our own simple optional implementation. Even a simple implementation like\n\n\u003e  template\u003ctypename T\u003e\n\u003e  class optional {\n\u003e    void set_value(T type);\n\u003e    T\u0026 value() const;\n\u003e    bool has_value() const;\n\u003e  }\n\nwould fix a problem that\u0027s come up in a lot of CLs",
      "parentUuid": "c29327cd_b777f3e4",
      "revId": "ec66cb6f672492fd1476a1426d2084902e5fd062",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a16c9ea6_b4b59f4f",
        "filename": "util/url.h",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-02-21T22:36:45Z",
      "side": 1,
      "message": "uint16_t?",
      "range": {
        "startLine": 52,
        "startChar": 2,
        "endLine": 52,
        "endChar": 9
      },
      "revId": "ec66cb6f672492fd1476a1426d2084902e5fd062",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c1709f2_8e564ac3",
        "filename": "util/url.h",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2020-04-03T09:11:58Z",
      "side": 1,
      "message": "The style guide wants unsigned only if you need wrapping behavior or to ease STL integration.",
      "parentUuid": "a16c9ea6_b4b59f4f",
      "range": {
        "startLine": 52,
        "startChar": 2,
        "endLine": 52,
        "endChar": 9
      },
      "revId": "ec66cb6f672492fd1476a1426d2084902e5fd062",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "828315c7_676a8623",
        "filename": "util/url.h",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-04-03T15:41:01Z",
      "side": 1,
      "message": "Ack\n\nWe should probably decide on a standard for our library. There are a lot of places where uint16_t is used for a port number, and probably others where an int / int32 / etc is used",
      "parentUuid": "2c1709f2_8e564ac3",
      "range": {
        "startLine": 52,
        "startChar": 2,
        "endLine": 52,
        "endChar": 9
      },
      "revId": "ec66cb6f672492fd1476a1426d2084902e5fd062",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}