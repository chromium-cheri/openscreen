{
  "comments": [
    {
      "key": {
        "uuid": "00ddf6a8_235b7e1a",
        "filename": "discovery/mdns/mdns_probe_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-14T01:36:40Z",
      "side": 1,
      "message": "Drop std::move; I don\u0027t see any overload of append that takes a non-const argument.\n\nhttps://en.cppreference.com/w/cpp/string/basic_string/append",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66499844_83c21c86",
        "filename": "discovery/mdns/mdns_probe_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-14T22:06:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "00ddf6a8_235b7e1a",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4250bc8f_223ff6f0",
        "filename": "discovery/mdns/mdns_probe_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 142,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-14T01:36:40Z",
      "side": 1,
      "message": "The logic below seems to have a second case where a tiebreaker probe is used if we see a probe identical to our own (?).  I checked this with a logic chart.\n\nI would have written this section in multiple statements with comments for the different cases (even at the expense of an extra line or two of code):\n\n// If this host finds that ...\nif (probe_record \u003e *lowest_record_it) break;\n\n// If the probe record is identical to our own data then skip it.\nif (message_authority_records.size() \u003d\u003d 1 \u0026\u0026 probe_record \u003d\u003d *lowest_record_it) break;\n\n// Need to tiebreak.\nit-\u003eprobe-\u003ePostpone(kSimultaneousProbeDelay);\n\nPlease double check my logic!",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "714ce7f7_f13d1c38",
        "filename": "discovery/mdns/mdns_probe_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 142,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-14T22:06:24Z",
      "side": 1,
      "message": "Done. It\u0027s hard to get away from code golf :)",
      "parentUuid": "4250bc8f_223ff6f0",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "46076c7a_6d260b9a",
        "filename": "discovery/mdns/mdns_probe_manager.h",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-14T01:36:40Z",
      "side": 1,
      "message": "... contains a query for that domain ... ?",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "508d46ce_a3844321",
        "filename": "discovery/mdns/mdns_probe_manager.h",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-14T22:06:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "46076c7a_6d260b9a",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8c925417_6784a118",
        "filename": "discovery/mdns/mdns_probe_manager.h",
        "patchSetId": 4
      },
      "lineNbr": 107,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-14T01:36:40Z",
      "side": 1,
      "message": "Maybe clarify that the |probe| doesn\u0027t get deleted when the probe completes, but gets moved into completed_probes_.",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6deb831c_26bc31cc",
        "filename": "discovery/mdns/mdns_probe_manager.h",
        "patchSetId": 4
      },
      "lineNbr": 107,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-14T22:06:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8c925417_6784a118",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "28660f4e_7fb97051",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 1,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-14T01:36:40Z",
      "side": 1,
      "message": "2020 :-)",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48f26a66_96c6015c",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 1,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-14T22:06:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "28660f4e_7fb97051",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4128908c_4e152082",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 52,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-14T01:36:40Z",
      "side": 1,
      "message": "These names should already be accessible without qualification because of inheritance (unless I\u0027m missing something)",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec5b64a1_94709c43",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 52,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-14T22:06:24Z",
      "side": 1,
      "message": "The methods are accessible to this class (because it\u0027s a friend of the base class), but I need them to be public so that the Unit Tests can access them. They are private in MdnsProbeManagerImpl",
      "parentUuid": "4128908c_4e152082",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3277847d_9e3ea7e1",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 52,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-15T20:50:08Z",
      "side": 1,
      "message": "Ah, ok.  In Chrome code, the unit test classes are made a friend of the class under test to get private names.  But I actually like this way better, because it means the class under test doesn\u0027t need to know the class names of its tests.",
      "parentUuid": "ec5b64a1_94709c43",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0777f69_328401f7",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 62,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-14T01:36:40Z",
      "side": 1,
      "message": "Nit: Maybe GetOngoingMockProbe since this exists to downcast the probe object into a mock implementation.",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac531e38_8a1237e4",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 62,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-14T22:06:24Z",
      "side": 1,
      "message": "Done. Went with GetOngoingMockProbeByTarget based on below comment as well.",
      "parentUuid": "b0777f69_328401f7",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4635f8e4_229a3df0",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 63,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-14T01:36:40Z",
      "side": 1,
      "message": "Can you use FindOngoingProbe from the base class?",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a3bcc08_ba182d41",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 63,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-14T22:06:24Z",
      "side": 1,
      "message": "This is a bit different because it\u0027s searching by the probe\u0027s target name instead of the originally requested name. updating method name to specify this.",
      "parentUuid": "4635f8e4_229a3df0",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad920856_e8455284",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-14T01:36:40Z",
      "side": 1,
      "message": "GetMockCompletedProbe",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42f24934_0c6332f5",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-14T22:06:24Z",
      "side": 1,
      "message": "Done. Going with GetCompletedMockProbe for consistency with above",
      "parentUuid": "ad920856_e8455284",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a9853244_d3cb54be",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-14T01:36:40Z",
      "side": 1,
      "message": "Is this lookup already implemented in the base class?",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31eec688_3784c429",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-14T22:06:24Z",
      "side": 1,
      "message": "Done. Good catch. I wrote these tests before refactoring the base class to pull those checks out, so I missed this one",
      "parentUuid": "a9853244_d3cb54be",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c607963_716e57b3",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 86,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-14T01:36:40Z",
      "side": 1,
      "message": "GetMockProbe",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d80b9431_8633c8fe",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 86,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-14T22:06:24Z",
      "side": 1,
      "message": "Done. Method didn\u0027t end up getting used so I removed it.",
      "parentUuid": "1c607963_716e57b3",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "243b2127_0e1f7f71",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 158,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-14T01:36:40Z",
      "side": 1,
      "message": "I thought this meant that there was a time aspect, but I think it\u0027s just a different address.\n\nMaybe name them address_a_ and address_b_?",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5cfd1d54_ef78e39c",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 158,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-14T22:06:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "243b2127_0e1f7f71",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1697903_759b79aa",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 161,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-14T01:36:40Z",
      "side": 1,
      "message": "Maybe address_c_ - I didn\u0027t see any tests that cared about v4/v6?",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60721786_327ddd68",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 161,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-14T22:06:24Z",
      "side": 1,
      "message": "Done\n\nThey don\u0027t explicitly care, but DnsType::kA and DnsType::kAAAA are different so they would resolve differently in the tie-breaking scenario. Adding comment to this effect",
      "parentUuid": "d1697903_759b79aa",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b3d0602c_86c26ac5",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 168,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-14T01:36:40Z",
      "side": 1,
      "message": "It\u0027s good to be explicit with all expectations, but sometimes there\u0027s repetition that can be factored out.\n\nConsider writing some helper expectations like:\n\nExpectProbeOngoing(name)\nExpectProbeWillSucceed(name)\nExpectProbeSuceeded(name)\n\netc.",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "895c2d2d_9ab2d0ad",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 168,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-14T22:06:24Z",
      "side": 1,
      "message": "Updated to:\nExpectProbeOngoing()\nExpectProbeSucceeded()\nExpectProbeStopped()\n\nI find these 3 to help remove duplicate lines, but hiding anything more behind methods tends to hide the meaning of the tests",
      "parentUuid": "b3d0602c_86c26ac5",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4e0fd74_bbb129f0",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 168,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-15T20:50:08Z",
      "side": 1,
      "message": "This looks much better, thanks!",
      "parentUuid": "895c2d2d_9ab2d0ad",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "81b04e2c_236bfd96",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 175,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-14T01:36:40Z",
      "side": 1,
      "message": "Maybe:\n\nExpectProbeWillSuceed(name)\nmanager_.OngoingProbeSucceeded(name)*\nExpectProbeSucceeded(name)\n\n* calls OnProbeSuccess and clears expectations.",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7aa4fa64_5f73af98",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 175,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-14T22:06:24Z",
      "side": 1,
      "message": "Closing as duplicate with above",
      "parentUuid": "81b04e2c_236bfd96",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8cefb537_468ddb25",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 215,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-14T01:36:40Z",
      "side": 1,
      "message": "OnUnownedDomain",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea2bc178_f9bb16c4",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 215,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-14T22:06:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8cefb537_468ddb25",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "483e376b_bbb4962e",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 229,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-14T01:36:40Z",
      "side": 1,
      "message": "I think this test code is repeated from previous cases?  Can you add a method to the test fixture set up the probe manager with a successfully completed probe?",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b0623eb_c51bf1e3",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 229,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-14T22:06:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "483e376b_bbb4962e",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19580075_8765c27f",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 250,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-14T01:36:40Z",
      "side": 1,
      "message": "Can you explain this test in more detail?  Is the query crafted so that manager_ wins the tiebreak here but loses in L254?",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02822dc3_fb9a25df",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 250,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-14T22:06:24Z",
      "side": 1,
      "message": "That\u0027s correct\n\nHere, endpoint_v4 \u003e endpoint_v4_earlier by comparison of their IP Address properties (implicitly compared when comparing their RData). endpoint_v4 \u003c endpoint_v6 because DnsType::kA \u003d 1 and DnsType::kAAAA \u003d 28 (and DnsType is checked before RData)\n\nAdding comments to this effect",
      "parentUuid": "19580075_8765c27f",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3af492a5_39f8ffa7",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 261,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-14T01:36:40Z",
      "side": 1,
      "message": "I think these are evident since manager_ has yet to start any probes...",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5a8311a_be831038",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 261,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-14T22:06:24Z",
      "side": 1,
      "message": "Done. Good point. Moved this logic to the MdnsProbeManagerTests ctor - Seems useful to verify these expectations, but no need to complicate the test cases by including them",
      "parentUuid": "3af492a5_39f8ffa7",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9fe5e593_decb1528",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 269,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-14T01:36:40Z",
      "side": 1,
      "message": "This test looks similar to StartProbeBeginsProbeWhenNoneExistsOnly except that it\u0027s probing with 2 names.  Maybe combine the two tests?",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "517d5e47_634e8700",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 269,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-14T22:06:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9fe5e593_decb1528",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba0a553d_6679dee5",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 285,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-14T01:36:40Z",
      "side": 1,
      "message": "Is it necessary to try to start a second probe to test this?",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44c4dd51_2f4f72da",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 285,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-14T22:06:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba0a553d_6679dee5",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c0377754_7d2ced68",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 298,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-14T01:36:40Z",
      "side": 1,
      "message": "See comment above",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d6d1e71_ec18ae8c",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 298,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-14T22:06:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c0377754_7d2ced68",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5acc09d_85124d8c",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 307,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-14T01:36:40Z",
      "side": 1,
      "message": "It\u0027s weird that the test is starting the initial probe with a name generated for retries.",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71ddb939_3d712278",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 307,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-14T22:06:24Z",
      "side": 1,
      "message": "Adding comment to explain",
      "parentUuid": "a5acc09d_85124d8c",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ce13478_539c7fc2",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 346,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-01-14T01:36:40Z",
      "side": 1,
      "message": "I\u0027d like to make sure the simultaneous tiebreaker cases are well covered by unit tests as the logic seems tricky.  How hard would that be?",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92f66f35_7d65d682",
        "filename": "discovery/mdns/mdns_probe_manager_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 346,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-01-14T22:06:24Z",
      "side": 1,
      "message": "I\u0027ve got tests for the single-record query cases already (see TiebreakProbeQueryWorksForAllReceivedRecords) - this should be clearer now that I\u0027ve added comments there.\nAdding tests for the multi-record query cases",
      "parentUuid": "5ce13478_539c7fc2",
      "revId": "1a3a614d7dbc9ccb460f0e2d9c1908a710140d5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}