{
  "comments": [
    {
      "key": {
        "uuid": "6d4a0ff6_df812a56",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-02-24T17:28:09Z",
      "side": 1,
      "message": "So, if the query is already running, StartQuery isn\u0027t a no-op like one might expected, but instead updates callbacks with new records?\n\nThis seems like a separate function, or at least, StartOrUpdateQuery?\n\nAlso, consider naming the overloads differently--InstanceKey is-a ServiceKey, so I found the overloads confusing until digging into the details.\n\nMaybe\n\nStartOrUpdateInstanceQuery\nStartTopLevelQuery",
      "revId": "bf916646339675eea669eb3d60fdfe3ce6c595bb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9851196_85866155",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2020-02-24T22:25:50Z",
      "side": 1,
      "message": "From the perspective of the caller StartQuery for an existing query does exactly what the caller would expect - the callback is called when a record for the query becomes known.",
      "parentUuid": "6d4a0ff6_df812a56",
      "revId": "bf916646339675eea669eb3d60fdfe3ce6c595bb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc6910a6_cddc5ef6",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-02-27T18:43:32Z",
      "side": 1,
      "message": "+1 on Max\u0027s comment\n\nIf StartQuery is called with a different callback than the initial one, the new callback would want to know about any existing data already found",
      "parentUuid": "d9851196_85866155",
      "revId": "bf916646339675eea669eb3d60fdfe3ce6c595bb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "93f9ca43_6a4d821f",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2020-02-24T22:25:50Z",
      "side": 1,
      "message": "Um, I don\u0027t see when find possibly returns end() here.\nit-\u003efirst is already a key in received_records_ so .find will always find this item. And it\u0027s not an unordered_multimap, so there\u0027s only one item matching the key as well.\n\nShould work like this:\nfor (auto\u0026 kvp : received_records_) {\n  if (kvp.first \u003d\u003d key) {\n    ErrorOr\u003cDnsSdInstanceRecord\u003e record \u003d kvp.second.CreateRecord();\n    if (record.is_value()) {\n      callback-\u003eOnInstanceCreated(record.value());\n    }\n  }\n}",
      "range": {
        "startLine": 44,
        "startChar": 8,
        "endLine": 47,
        "endChar": 9
      },
      "revId": "bf916646339675eea669eb3d60fdfe3ce6c595bb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "352d8502_2da2229a",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-02-27T18:43:32Z",
      "side": 1,
      "message": "Good catch - I\u0027ve spent 5 minutes starting at this and I can\u0027t figure out what I was trying to do here either\n\nDone",
      "parentUuid": "93f9ca43_6a4d821f",
      "range": {
        "startLine": 44,
        "startChar": 8,
        "endLine": 47,
        "endChar": 9
      },
      "revId": "bf916646339675eea669eb3d60fdfe3ce6c595bb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2c60b663_a86208b9",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 99,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2020-02-24T22:25:50Z",
      "side": 1,
      "message": "Maybe like this?\nfor (InstanceKey\u0026 ik : keys_to_remove) {\n    StopDnsQuery(std::move(ik), false);\n}",
      "range": {
        "startLine": 97,
        "startChar": 2,
        "endLine": 99,
        "endChar": 3
      },
      "revId": "bf916646339675eea669eb3d60fdfe3ce6c595bb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce9bb384_941dd777",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 99,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-02-27T18:43:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2c60b663_a86208b9",
      "range": {
        "startLine": 97,
        "startChar": 2,
        "endLine": 99,
        "endChar": 3
      },
      "revId": "bf916646339675eea669eb3d60fdfe3ce6c595bb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e976183_9f046076",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 123,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2020-02-24T22:25:50Z",
      "side": 1,
      "message": "Just InstanceKey(record) here and below instead of a local variable + move?",
      "range": {
        "startLine": 123,
        "startChar": 20,
        "endLine": 123,
        "endChar": 34
      },
      "revId": "bf916646339675eea669eb3d60fdfe3ce6c595bb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7f788e6_bbfa62e1",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 123,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-02-27T18:43:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1e976183_9f046076",
      "range": {
        "startLine": 123,
        "startChar": 20,
        "endLine": 123,
        "endChar": 34
      },
      "revId": "bf916646339675eea669eb3d60fdfe3ce6c595bb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c2dbe079_012b184e",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 231,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2020-02-24T22:25:50Z",
      "side": 1,
      "message": "Would it make sense to put this at the beginning of the method to prevent any unnecessary callbacks from mDNS? Or doesn\u0027t it matter with our threading model?",
      "range": {
        "startLine": 229,
        "startChar": 0,
        "endLine": 231,
        "endChar": 78
      },
      "revId": "bf916646339675eea669eb3d60fdfe3ce6c595bb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e35e140b_380f1f3e",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 231,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-02-27T18:43:32Z",
      "side": 1,
      "message": "With the threading model, it shouldn\u0027t matter - these will all be called before any further queries can be processed or sent out\n\nOpen to moving it if you find that more readable though. WDYT?",
      "parentUuid": "c2dbe079_012b184e",
      "range": {
        "startLine": 229,
        "startChar": 0,
        "endLine": 231,
        "endChar": 78
      },
      "revId": "bf916646339675eea669eb3d60fdfe3ce6c595bb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18bfb77a_9f319f0e",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 231,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-02-27T21:29:32Z",
      "side": 1,
      "message": "Will address this as a follow-up CL if you\u0027d like it moved. Merging this CL in so I can merge E2E test #3 in and unblock #4",
      "parentUuid": "e35e140b_380f1f3e",
      "range": {
        "startLine": 229,
        "startChar": 0,
        "endLine": 231,
        "endChar": 78
      },
      "revId": "bf916646339675eea669eb3d60fdfe3ce6c595bb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c512bc90_8b8936e2",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 231,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2020-02-28T00:47:48Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "18bfb77a_9f319f0e",
      "range": {
        "startLine": 229,
        "startChar": 0,
        "endLine": 231,
        "endChar": 78
      },
      "revId": "bf916646339675eea669eb3d60fdfe3ce6c595bb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f91ad1b_cad10e06",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 247,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-02-24T17:28:09Z",
      "side": 1,
      "message": "Nit: pseudo code comments get out of date easily.\n\nMaybe: const bool key_is_service_from_query \u003d (key \u003d\u003d pair.first);\nif (key_is_service_from_query) {",
      "revId": "bf916646339675eea669eb3d60fdfe3ce6c595bb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0107e848_07a7e05a",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 247,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-02-27T18:43:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5f91ad1b_cad10e06",
      "revId": "bf916646339675eea669eb3d60fdfe3ce6c595bb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1df28b84_3afca91f",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 254,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2020-02-24T22:25:50Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 252,
        "startChar": 2,
        "endLine": 254,
        "endChar": 3
      },
      "revId": "bf916646339675eea669eb3d60fdfe3ce6c595bb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc799d1e_95501eaf",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 254,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-02-27T18:43:32Z",
      "side": 1,
      "message": "With the threading model, it shouldn\u0027t matter - these will all be called before any further queries can be processed or sent out\n\nThese calls are intentionally at the end here, in case the caller wants to restart the mdns query in their OnInstanceDeleted() callback (Though I can\u0027t imagine why that would ever happen). If done in the opposite order, it\u0027s possible to end up in a weird state in this edge case (The query to the mDNS layer would start a second query before the old one stopped, so there would be no chance for \u0027All queries of this type have stopped\u0027 logic to run, if we add it per a TODO in the mDNS layer)",
      "parentUuid": "1df28b84_3afca91f",
      "range": {
        "startLine": 252,
        "startChar": 2,
        "endLine": 254,
        "endChar": 3
      },
      "revId": "bf916646339675eea669eb3d60fdfe3ce6c595bb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "859dbdd2_31c6c765",
        "filename": "discovery/dnssd/impl/querier_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 254,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2020-02-28T00:47:48Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "dc799d1e_95501eaf",
      "range": {
        "startLine": 252,
        "startChar": 2,
        "endLine": 254,
        "endChar": 3
      },
      "revId": "bf916646339675eea669eb3d60fdfe3ce6c595bb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}