{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9df812b7_58ebf7dc",
        "filename": "cast/protocol/BUILD.gn",
        "patchSetId": 20
      },
      "lineNbr": 34,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2020-12-02T17:01:44Z",
      "side": 1,
      "message": "It looks like there is no runtime dependency on these json files. If that\u0027s correct, this isn\u0027t needed here: The target on L12-13 mentions these files in sources[] for the \"input files\" dependency.",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 34,
        "endChar": 3
      },
      "revId": "65ce7d0b12b490b9bc7305214fadedd0b3ede60d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c9a788f2_b10c9e0c",
        "filename": "cast/protocol/BUILD.gn",
        "patchSetId": 20
      },
      "lineNbr": 34,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-12-02T19:21:53Z",
      "side": 1,
      "message": "Totally right, thanks!",
      "parentUuid": "9df812b7_58ebf7dc",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 34,
        "endChar": 3
      },
      "revId": "65ce7d0b12b490b9bc7305214fadedd0b3ede60d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00aca287_326be96a",
        "filename": "cast/protocol/castv2/validation.cc",
        "patchSetId": 20
      },
      "lineNbr": 62,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2020-12-02T17:01:44Z",
      "side": 1,
      "message": "Suggest making this just:\n\n  static Json::Value root \u003d json::Parse(kStreamingSchema).value();\n\nReasons:\n\n1. ErrorOr\u003c\u003e::value() already has an assert statement.\n2. The assertion is only evaluated once (static initialization time), rather than on every call to this method (with the OSP_CHECK).\n\n...and same in ValidateReceiverMessage()...",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 62,
        "endChar": 29
      },
      "revId": "65ce7d0b12b490b9bc7305214fadedd0b3ede60d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fececcf3_85f15cc0",
        "filename": "cast/protocol/castv2/validation.cc",
        "patchSetId": 20
      },
      "lineNbr": 62,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-12-02T19:21:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "00aca287_326be96a",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 62,
        "endChar": 29
      },
      "revId": "65ce7d0b12b490b9bc7305214fadedd0b3ede60d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "342caac5_eed803e5",
        "filename": "cast/protocol/castv2/validation_unittest.cc",
        "patchSetId": 20
      },
      "lineNbr": 139,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-12-02T19:55:49Z",
      "side": 1,
      "message": "This might be a good fit for a value-parameterized test, so that each string gets its own test case.  But it\u0027s really just a lot of syntactic sugar to get individual pass/fail reporting for each case.  Looking at the extra syntax, I\u0027m not sure it\u0027s worth it, but if you\u0027re excited by this go for it.\n\nhttps://github.com/google/googletest/blob/master/googletest/docs/advanced.md#value-parameterized-tests",
      "revId": "65ce7d0b12b490b9bc7305214fadedd0b3ede60d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc707128_1faebab9",
        "filename": "util/std_util.h",
        "patchSetId": 20
      },
      "lineNbr": 51,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2020-12-02T17:01:44Z",
      "side": 1,
      "message": "IMHO, this feels like too much to inline. I suggest splitting into declaration (here) + definition (in the .cc file).",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 51,
        "endChar": 1
      },
      "revId": "65ce7d0b12b490b9bc7305214fadedd0b3ede60d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c5614c25_beeee1fe",
        "filename": "util/std_util.h",
        "patchSetId": 20
      },
      "lineNbr": 51,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-12-02T19:21:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dc707128_1faebab9",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 51,
        "endChar": 1
      },
      "revId": "65ce7d0b12b490b9bc7305214fadedd0b3ede60d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}