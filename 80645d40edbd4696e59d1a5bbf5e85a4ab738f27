{
  "comments": [
    {
      "key": {
        "uuid": "81713030_bbc8ab66",
        "filename": "discovery/mdns/mdns_reader.cc",
        "patchSetId": 3
      },
      "lineNbr": 138,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2020-04-16T02:28:55Z",
      "side": 1,
      "message": "Here and elsewhere can we actually check (and even early exit on) record_length, then just make these MaxWireSize() checks before return a DCHECK?  The only situation I can think of where we might disagree about wire size is when compression for domain names is possible, and I\u0027m not sure which way the policy should fall there.",
      "revId": "80645d40edbd4696e59d1a5bbf5e85a4ab738f27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7100ab9e_4a802210",
        "filename": "discovery/mdns/mdns_reader.cc",
        "patchSetId": 3
      },
      "lineNbr": 138,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-04-22T16:14:13Z",
      "side": 1,
      "message": "\u003e Here and elsewhere can we actually check (and even early exit on) record_length\n\nDone\n\n\u003e just make these MaxWireSize() checks before return a DCHECK\n\nThis can\u0027t be DCHECK\u0027d - it potentially lets user input crash the receiver (And fuzz tests would eventually catch it)\nIMHO we really only need to check one of the two though (But I agree it isn\u0027t clear which should be checked)\n\nWDYT?",
      "parentUuid": "81713030_bbc8ab66",
      "revId": "80645d40edbd4696e59d1a5bbf5e85a4ab738f27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91187b56_e3774544",
        "filename": "discovery/mdns/mdns_reader.cc",
        "patchSetId": 3
      },
      "lineNbr": 138,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2020-04-22T17:54:34Z",
      "side": 1,
      "message": "\u003e This can\u0027t be DCHECK\u0027d - it potentially lets user input crash the receiver...\n\nI still think domain name compression is the only place these can diverge, and that wouldn\u0027t result in a crash.  In any case, this is fine.",
      "parentUuid": "7100ab9e_4a802210",
      "revId": "80645d40edbd4696e59d1a5bbf5e85a4ab738f27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d2e61c55_adce7c1d",
        "filename": "discovery/mdns/mdns_reader.cc",
        "patchSetId": 3
      },
      "lineNbr": 200,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-04-22T16:14:13Z",
      "side": 1,
      "message": "Removed these DCHECKs - this is stated as a requirement in the config file, so IMHO it makes more sense to assume the user followed it, than to check on every call. WDYT?",
      "range": {
        "startLine": 198,
        "startChar": 0,
        "endLine": 200,
        "endChar": 64
      },
      "revId": "80645d40edbd4696e59d1a5bbf5e85a4ab738f27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ee85f52_a38f2a57",
        "filename": "discovery/mdns/mdns_reader.cc",
        "patchSetId": 3
      },
      "lineNbr": 200,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2020-04-22T17:54:34Z",
      "side": 1,
      "message": "If you made MaxWireSize() static for records that don\u0027t vary in size, you could do these DCHECKs in the MdnsReader ctor, but I don\u0027t feel strongly because that config is kind of silly.",
      "parentUuid": "d2e61c55_adce7c1d",
      "range": {
        "startLine": 198,
        "startChar": 0,
        "endLine": 200,
        "endChar": 64
      },
      "revId": "80645d40edbd4696e59d1a5bbf5e85a4ab738f27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a92f598_767cf4fd",
        "filename": "discovery/mdns/mdns_reader.cc",
        "patchSetId": 3
      },
      "lineNbr": 200,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-04-22T18:08:45Z",
      "side": 1,
      "message": "\u003e If you made MaxWireSize() static for records that don\u0027t vary in size, you could do these DCHECKs in the MdnsReader ctor\n\nMakes sense, but outside the scope of this CL. Adding a TODO\n\n\u003e that config is kind of silly\n\n+1. My main reasoning for adding that config is for low-memory devices. The CastV2 TXT record size is bounded (per the spec), so this config value can be set to a lower value, lowering the maximum size of the caches in MdnsQuerier + MdnsResponder",
      "parentUuid": "2ee85f52_a38f2a57",
      "range": {
        "startLine": 198,
        "startChar": 0,
        "endLine": 200,
        "endChar": 64
      },
      "revId": "80645d40edbd4696e59d1a5bbf5e85a4ab738f27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f6a478b_724f5732",
        "filename": "discovery/mdns/mdns_receiver.h",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2020-04-16T02:28:55Z",
      "side": 1,
      "message": "explicit",
      "revId": "80645d40edbd4696e59d1a5bbf5e85a4ab738f27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46140c34_2d102d2c",
        "filename": "discovery/mdns/mdns_receiver.h",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2020-04-22T16:14:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7f6a478b_724f5732",
      "revId": "80645d40edbd4696e59d1a5bbf5e85a4ab738f27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}