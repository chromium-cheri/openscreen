{
  "comments": [
    {
      "key": {
        "uuid": "a1df9036_d26de472",
        "filename": "DEPS",
        "patchSetId": 1
      },
      "lineNbr": 124,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-07-15T21:17:56Z",
      "side": 1,
      "message": "I vote for not checking in commented out code.",
      "revId": "2f4d560c918a80062c573fd0dbf46a705767133a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84e1040e_0ada2337",
        "filename": "DEPS",
        "patchSetId": 1
      },
      "lineNbr": 124,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-17T04:51:48Z",
      "side": 1,
      "message": "Good catch, didn\u0027t mean to include this.",
      "parentUuid": "a1df9036_d26de472",
      "revId": "2f4d560c918a80062c573fd0dbf46a705767133a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55c244b1_cf323653",
        "filename": "cast/common/certificate/proto/revocation.proto",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-07-15T21:17:56Z",
      "side": 1,
      "message": "I know we go back and forth on copyrights, but shouldn\u0027t this be 2019 since it\u0027s technically a new file? Or No?",
      "revId": "2f4d560c918a80062c573fd0dbf46a705767133a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4c31aca_658d55d9",
        "filename": "cast/common/certificate/proto/revocation.proto",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-17T04:51:48Z",
      "side": 1,
      "message": "Done as 2019.",
      "parentUuid": "55c244b1_cf323653",
      "revId": "2f4d560c918a80062c573fd0dbf46a705767133a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1133e42_cbdafbd8",
        "filename": "cast/common/certificate/proto/revocation.proto",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-07-16T00:08:45Z",
      "side": 1,
      "message": "Do we have any better mechanism for maintaining sync than manually copying any time either file gets changed?",
      "range": {
        "startLine": 7,
        "startChar": 3,
        "endLine": 7,
        "endChar": 47
      },
      "revId": "2f4d560c918a80062c573fd0dbf46a705767133a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e23d490_9b8986da",
        "filename": "cast/common/certificate/proto/revocation.proto",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-17T04:51:48Z",
      "side": 1,
      "message": "No, although there haven\u0027t been any real semantic changes since 2016 and we shouldn\u0027t really expect any.",
      "parentUuid": "f1133e42_cbdafbd8",
      "range": {
        "startLine": 7,
        "startChar": 3,
        "endLine": 7,
        "endChar": 47
      },
      "revId": "2f4d560c918a80062c573fd0dbf46a705767133a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d66f968c_e4ef7589",
        "filename": "cast/common/certificate/proto/test_suite.proto",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-07-15T21:17:56Z",
      "side": 1,
      "message": "Nit: spacing in VerificationResult should match spacing in DeviceCertTest. I would vote for empty lines between enum values, but I realize this is a contentious topic.",
      "revId": "2f4d560c918a80062c573fd0dbf46a705767133a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5185b51_94d349f9",
        "filename": "cast/common/certificate/proto/test_suite.proto",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-07-16T00:08:45Z",
      "side": 1,
      "message": "+1 on empty lines if we have comments describing them following the line - it will make clearer which enum value the comment goes with",
      "parentUuid": "d66f968c_e4ef7589",
      "revId": "2f4d560c918a80062c573fd0dbf46a705767133a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ccf8f63c_6eb6602d",
        "filename": "cast/common/certificate/proto/test_suite.proto",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-17T04:51:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d5185b51_94d349f9",
      "revId": "2f4d560c918a80062c573fd0dbf46a705767133a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a025a965_ccad519e",
        "filename": "third_party/protobuf/protoc_wrapper.py",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-07-15T21:17:56Z",
      "side": 1,
      "message": "Nit: sort args alphabetically?",
      "revId": "2f4d560c918a80062c573fd0dbf46a705767133a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8033c69b_2894d289",
        "filename": "third_party/protobuf/protoc_wrapper.py",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-17T04:51:48Z",
      "side": 1,
      "message": "This was copied from Chromium and I feel the first set of args are grouped sensibly.  I\u0027ll sort this last set though.",
      "parentUuid": "a025a965_ccad519e",
      "revId": "2f4d560c918a80062c573fd0dbf46a705767133a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4fe530d0_b1af36af",
        "filename": "third_party/zlib/BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-07-15T21:17:56Z",
      "side": 1,
      "message": "Add comment on why we need this? Will we always need it, or is it a compiler version thing?",
      "revId": "2f4d560c918a80062c573fd0dbf46a705767133a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05d12a8e_7017d0fa",
        "filename": "third_party/zlib/BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2019-07-17T04:51:48Z",
      "side": 1,
      "message": "It\u0027s a Mac or possibly a non-linux think.  fseeko is a 64-bit version of fseek that zlib uses if available.",
      "parentUuid": "4fe530d0_b1af36af",
      "revId": "2f4d560c918a80062c573fd0dbf46a705767133a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}