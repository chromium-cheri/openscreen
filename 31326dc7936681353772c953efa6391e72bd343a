{
  "comments": [
    {
      "key": {
        "uuid": "75343d34_50e5a088",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 1,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-05-31T21:19:10Z",
      "side": 1,
      "message": "Nit: Markdown top level header is #",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fae46613_9c579a07",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 1,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "75343d34_50e5a088",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2edc7099_9f7d070b",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 19,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-05-31T21:19:10Z",
      "side": 1,
      "message": "It\u0027s unfortunate that users have to include two files.  Let\u0027s fix that.  What is the circular dependency issue?  Can it be resolved through forward declarations?",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77a6189d_1bc18455",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 19,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "Discussed offline and resolved. Only the platform/api/trace_logging.h needs to be included\n\nUpdated comment to make this clearer",
      "parentUuid": "2edc7099_9f7d070b",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7613eab_2c2cf9cf",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-05-31T21:19:10Z",
      "side": 1,
      "message": "Headers in platform/api shouldn\u0027t have implementations.  That allows embedders to substitute their own.  Also if there is a single implementation across all platforms, then tracing isn\u0027t really a platform feature and belongs in osp_base/.",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3406f4b7_d1a1774a",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "Discussed offline. These will stay in platform but will be moved to a new \u0027internal/ folder there.",
      "parentUuid": "b7613eab_2c2cf9cf",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01b233f6_265c33ba",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 29,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-05-31T21:19:10Z",
      "side": 1,
      "message": "Please wrap text at 80 columns consistently.\n\nAlso, super nit: use upper/lower case consistently for \"Trace ID\"",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c596739_fbd67662",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 29,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "01b233f6_265c33ba",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "828f15e5_d9b7f02f",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-05-31T21:19:10Z",
      "side": 1,
      "message": "Please keep case consistent for terms used in this doc",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70a49bce_a36b5283",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "Done. Updated all to \"Trace ID\"",
      "parentUuid": "828f15e5_d9b7f02f",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87b6e39a_d0f3c190",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-05-31T21:19:10Z",
      "side": 1,
      "message": "Missing period",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7839fe6d_2041c59a",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "87b6e39a_d0f3c190",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "583551e3_699183df",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-05-31T21:19:10Z",
      "side": 1,
      "message": "Trace ID instead of TraceID here and below",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2d2f4f4_0226d1e3",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "583551e3_699183df",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0492b854_476b8b6c",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-05-31T21:19:10Z",
      "side": 1,
      "message": "lower case for traced",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf4c87f8_81b05621",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0492b854_476b8b6c",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e5d9e39_ad7ea043",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 52,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-05-31T21:19:10Z",
      "side": 1,
      "message": "Gittiles markdown hopefully supports code block quotes; wrap this block in ``` to activate that",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68e46347_54c4e4cd",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 52,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9e5d9e39_ad7ea043",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1683f67e_0419f882",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 63,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-05-31T21:19:10Z",
      "side": 1,
      "message": "Please use a markdown table. See README.md for an example of that.",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52979ef5_ad1866d2",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 63,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1683f67e_0419f882",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eeaec9ef_1e14db5a",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 73,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-05-31T21:19:10Z",
      "side": 1,
      "message": "Just use lower case for normal words throughout.  These aren\u0027t special terms.",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a6dce4b_8b7e5869",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 73,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eeaec9ef_1e14db5a",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5716030_75e1095a",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-05-31T21:19:10Z",
      "side": 1,
      "message": "s/non-success/error/",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b74ad56e_daa2f47f",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c5716030_75e1095a",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9383949_c7150e07",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-05-31T21:19:10Z",
      "side": 1,
      "message": "Is setting a result required for all async traces?",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf023421_3e412868",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "It is required, but could easily be set to be Error::Code::kNone\n\nIf this is an issue though, I can make that a default value so it\u0027s valid for the user to not set a result",
      "parentUuid": "f9383949_c7150e07",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33fc9dbe_c82c2d17",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-05-30T01:57:59Z",
      "side": 1,
      "message": "Tracing",
      "range": {
        "startLine": 83,
        "startChar": 3,
        "endLine": 83,
        "endChar": 11
      },
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40f27e7b_a948d885",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "33fc9dbe_c82c2d17",
      "range": {
        "startLine": 83,
        "startChar": 3,
        "endLine": 83,
        "endChar": 11
      },
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24d10349_857f4e5c",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 84,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-05-31T21:19:10Z",
      "side": 1,
      "message": "Use a markdown header (###) here",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be37af19_3d95f8fc",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 84,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "24d10349_857f4e5c",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "137e2ac1_67df994a",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-05-31T21:19:10Z",
      "side": 1,
      "message": "Can you use a definition list here? Otherwise this isn\u0027t going to get formatted in a readable way.\n\nYou might need to use HTML markup depending on the capabilities of the Gitiles web server.\n\n\u003cdl\u003e\n  \u003cdt\u003e`TRACE_SCOPED(category, name)`\u003c/dt\u003e\n  \u003cdd\u003eIf logging is enabled for the provided category, this function will trace the\n    current function until the current scope ends with name as provided.\u003c/dd\u003e\n\n...",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0438b751_329003ea",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "Based on the document you linked: \"Most HTML tags are not supported. HTML will be dropped on the floor by the parser with no warnings, and no output from that section of the document.\"\nIt seems that \u003cdl /\u003e is not one of the allowed tags, unfortunately\n\nThese actually seem to format very readably in the document, though - since all of the titles are formatted as code, we get the macros in a different color than their definitions",
      "parentUuid": "137e2ac1_67df994a",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5fae5dbc_ede97a0c",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 94,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-05-31T21:19:10Z",
      "side": 1,
      "message": "How does the caller get the parentId and rootId?  Shouldn\u0027t the tracing framework be able to determine that from the context or the state of traceId?",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5aa73333_eda38fe5",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 94,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "Updated comments to state this is handled automatically by the above call\n\nThis call is only used if the caller has that information already and wants to provide it, such as when crossing thread or network boundaries.",
      "parentUuid": "5fae5dbc_ede97a0c",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f5994ba2_519640e7",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 100,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-05-31T21:19:10Z",
      "side": 1,
      "message": "traceIdHierarchy isn\u0027t explained anywhere in the introduction.",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d634f40_f6b751e5",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 100,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "Updated. Now explained on line #45.",
      "parentUuid": "f5994ba2_519640e7",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "80eb6f29_d616189b",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 157,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-05-31T21:19:10Z",
      "side": 1,
      "message": "Can you comment on how to compile out these functions?  What is the default for release/debug builds and is there a GN argument to override that default?",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20622bc6_2232bfc1",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 157,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "Added details about how they can be compiled out\n\nFor the moment, I have it enabled for debug builds and disabled for release builds, and I had planned to revisit it once this CL was in or at least a couple more iterations had passed. I like the idea of adding a build flag though, and that feels like the right approach for StandAlone - is there any documentation on how this can be done?",
      "parentUuid": "80eb6f29_d616189b",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "494ae94c_51eebd71",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 162,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-05-31T21:19:10Z",
      "side": 1,
      "message": "Use markdown lists:\n\n1. Create a TraceLoggingPlatform",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3727e31_51e17548",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 162,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "494ae94c_51eebd71",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b521b7d5_29c7b2e2",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 167,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-05-31T21:19:10Z",
      "side": 1,
      "message": "s/define/defined/",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce1c6151_b81f1a37",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 167,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b521b7d5_29c7b2e2",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5621dd5c_45c9b7d6",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 168,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-05-31T21:19:10Z",
      "side": 1,
      "message": "`bool IsLoggingEnabled(TraceCategory category);`",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91e36ee3_079217e1",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 168,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5621dd5c_45c9b7d6",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5b4e18d_27f04823",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 173,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-05-31T21:19:10Z",
      "side": 1,
      "message": "If we are setting an implementation using dependency injection, versus implementing a set of declarations, the pattern to do that is through the embedder public API not the platform API.  The public API has a concept of passing pointers to embedder-owned implementations into the library, while the platform API is intended to be relatively stateless without a lifecycle.\n\nI would have to think about extending dependency injection into the platform API.",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b61907d0_15f86c7f",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 173,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "Discussed offline. For now we will proceed this route, and re-examining this for our full platform layer should come at a later date",
      "parentUuid": "a5b4e18d_27f04823",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a645348a_3ec97536",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 175,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-05-31T21:19:10Z",
      "side": 1,
      "message": "Who shuts down the service?",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52b997d7_bcd4ebde",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 175,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "Shutdown here refers to when static variables are deleted, as the TraceLoggingPlatform is deleted as part of it\u0027s owning object\u0027s destructor",
      "parentUuid": "a645348a_3ec97536",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f8f621b_52f16796",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 180,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-05-31T21:19:10Z",
      "side": 1,
      "message": "Thanks for writing detailed documentation!",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0139f79_f0bb2a77",
        "filename": "docs/trace_logging.md",
        "patchSetId": 4
      },
      "lineNbr": 180,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "No problem :) Adding it was a great idea",
      "parentUuid": "0f8f621b_52f16796",
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7378595f_742610cb",
        "filename": "osp_base/error.cc",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-05-29T19:22:50Z",
      "side": 1,
      "message": "It would be nice to have a way to enforce that new values added to the enum are added to this operator\u0027s implementation.\n\nMaybe something like static_assert(Error::Code::kMaxValue \u003d\u003d kHardcodedMaxValue, \"A new member was added to Error::Code, please update this function\");\n\nGiven that there\u0027s not even a default case, a new value would be an empty string.",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 33,
        "endChar": 69
      },
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a088bfe_c7162e92",
        "filename": "osp_base/error.cc",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-05-30T01:57:59Z",
      "side": 1,
      "message": "IIRC, we\u0027ve turned on compiler warnings for missing cases in switch statements.",
      "parentUuid": "7378595f_742610cb",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 33,
        "endChar": 69
      },
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1dee4e60_94adbf39",
        "filename": "osp_base/error.cc",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "Actually with the current setup (since Error::Code is an enum class), any missing switch statements trigger an error not just a warning:\n\n../../osp_base/error.cc:34:11: error: enumeration value \u0027kPresentationAlreadyStarted\u0027 not handled in switch [-Werror,-Wswitch]\n  switch (code) {\n          ^\n../../osp_base/error.cc:110:1: error: control may reach end of non-void function [-Werror,-Wreturn-type]",
      "parentUuid": "7a088bfe_c7162e92",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 33,
        "endChar": 69
      },
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7157a3bb_25b3d7b7",
        "filename": "osp_base/error.h",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-05-29T19:22:50Z",
      "side": 1,
      "message": "I think if you move this operator\u003c\u003c down next to operator\u003c\u003c for Error::Code, you won\u0027t need the forward declaration. Also, it\u0027s a bit weird to see the operator\u003c\u003c declared before the class itself.",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 22,
        "endChar": 0
      },
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca620379_ad017e80",
        "filename": "osp_base/error.h",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "This was originally needed for the std::string() conversion operator below. I removed that since it was only used in one place so now not an issue",
      "parentUuid": "7157a3bb_25b3d7b7",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 22,
        "endChar": 0
      },
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e8bf020d_02bc9280",
        "filename": "osp_base/error.h",
        "patchSetId": 4
      },
      "lineNbr": 101,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-05-29T19:22:50Z",
      "side": 1,
      "message": "Please move implementation to .cc, it\u0027s not a trivial implementation anymore and stringstream is not a trivial class.",
      "range": {
        "startLine": 97,
        "startChar": 2,
        "endLine": 101,
        "endChar": 3
      },
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd07ec44_cfbb320f",
        "filename": "osp_base/error.h",
        "patchSetId": 4
      },
      "lineNbr": 101,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "Removed entirely since it\u0027s only used in one place",
      "parentUuid": "e8bf020d_02bc9280",
      "range": {
        "startLine": 97,
        "startChar": 2,
        "endLine": 101,
        "endChar": 3
      },
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f8deadd_74fc6be2",
        "filename": "osp_base/error.h",
        "patchSetId": 4
      },
      "lineNbr": 175,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-05-29T19:22:50Z",
      "side": 1,
      "message": "From the declaration of this operator I expected that it puts value() into the stream on success.",
      "range": {
        "startLine": 175,
        "startChar": 64,
        "endLine": 175,
        "endChar": 82
      },
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0d9a8e6_848dafb6",
        "filename": "osp_base/error.h",
        "patchSetId": 4
      },
      "lineNbr": 175,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-05-30T01:57:59Z",
      "side": 1,
      "message": "nit: Add parens around each \"out \u003c\u003c something\" to help readability.",
      "range": {
        "startLine": 175,
        "startChar": 0,
        "endLine": 175,
        "endChar": 83
      },
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3980cb33_6d1b758f",
        "filename": "osp_base/error.h",
        "patchSetId": 4
      },
      "lineNbr": 175,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "The reason I didn\u0027t do this was that value may or may not support \u0027\u003c\u003c\u0027 - I could add support for this in valid cases with SFINAE, but that seemed to be a lot of added complexity. Thoughts?",
      "parentUuid": "3f8deadd_74fc6be2",
      "range": {
        "startLine": 175,
        "startChar": 64,
        "endLine": 175,
        "endChar": 82
      },
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "151c404b_9bdbb093",
        "filename": "osp_base/error.h",
        "patchSetId": 4
      },
      "lineNbr": 175,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e0d9a8e6_848dafb6",
      "range": {
        "startLine": 175,
        "startChar": 0,
        "endLine": 175,
        "endChar": 83
      },
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0758635d_cb15ad78",
        "filename": "platform/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1336186
      },
      "writtenOn": "2019-05-29T19:22:50Z",
      "side": 1,
      "message": "There\u0027s a lette missing",
      "range": {
        "startLine": 21,
        "startChar": 9,
        "endLine": 21,
        "endChar": 30
      },
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e174ae18_d5be964e",
        "filename": "platform/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "Good catch! I\u0027m surprised that compilation was working given this issue",
      "parentUuid": "0758635d_cb15ad78",
      "range": {
        "startLine": 21,
        "startChar": 9,
        "endLine": 21,
        "endChar": 30
      },
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b56743d9_2417adf2",
        "filename": "platform/api/time.h",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-05-30T01:57:59Z",
      "side": 1,
      "message": "It\u0027s µs, not ms. Also, since this is a time_point and not a duration, the units should be something that describes the difference.\n\nChromium uses something like \"bogoticks,\" IIRC.",
      "range": {
        "startLine": 47,
        "startChar": 42,
        "endLine": 47,
        "endChar": 44
      },
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ebd1cc8_98dd4cb4",
        "filename": "platform/api/time.h",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "Updated to use \"bogoticks\" instead of microseconds\n\nI don\u0027t fully understand the need for a different unit though - in regular english, when talking about \"that was a one hour long meeting\" is no different from \"that meeting starts in one hour\". I feel making up a new unit would only be confusing",
      "parentUuid": "b56743d9_2417adf2",
      "range": {
        "startLine": 47,
        "startChar": 42,
        "endLine": 47,
        "endChar": 44
      },
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be19da74_69ccf6f6",
        "filename": "platform/api/trace_logging_types.h",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-05-30T01:57:59Z",
      "side": 1,
      "message": "nit: I think this can be \"constexpr static\".",
      "range": {
        "startLine": 25,
        "startChar": 2,
        "endLine": 25,
        "endChar": 8
      },
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "714de813_c90f4386",
        "filename": "platform/api/trace_logging_types.h",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "be19da74_69ccf6f6",
      "range": {
        "startLine": 25,
        "startChar": 2,
        "endLine": 25,
        "endChar": 8
      },
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a06ba374_fe665650",
        "filename": "platform/base/task_runner_impl.h",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-05-30T01:57:59Z",
      "side": 1,
      "message": "Can this be in the initializer list too?\n\n(and below, in ImmediateTask?)",
      "range": {
        "startLine": 81,
        "startChar": 6,
        "endLine": 81,
        "endChar": 34
      },
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e33f180f_058880eb",
        "filename": "platform/base/task_runner_impl.h",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a06ba374_fe665650",
      "range": {
        "startLine": 81,
        "startChar": 6,
        "endLine": 81,
        "endChar": 34
      },
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f2d075e6_260cab1b",
        "filename": "platform/base/trace_logging_platform.cc",
        "patchSetId": 4
      },
      "lineNbr": 20,
      "author": {
        "id": 1002076
      },
      "writtenOn": "2019-05-30T01:57:59Z",
      "side": 1,
      "message": "This can be a TODO, but we should probably provide some way to turn tracing on for the standalone implementation (e.g., parsing command-line args?), and regardless of whether it\u0027s a DEBUG build or not.",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 20,
        "endChar": 8
      },
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97dddb0d_3ab643c0",
        "filename": "platform/base/trace_logging_platform.cc",
        "patchSetId": 4
      },
      "lineNbr": 20,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2019-06-04T00:41:37Z",
      "side": 1,
      "message": "Mark asked a similar question on the readme file, so I am going to close this comment for now. Planning to add a compilation flag to account for this, pending his response",
      "parentUuid": "f2d075e6_260cab1b",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 20,
        "endChar": 8
      },
      "revId": "31326dc7936681353772c953efa6391e72bd343a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}