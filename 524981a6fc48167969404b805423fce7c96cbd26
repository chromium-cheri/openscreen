{
  "comments": [
    {
      "key": {
        "uuid": "07a721ba_ea5184ca",
        "filename": "cast/api/DEPS",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-10-03T16:04:19Z",
      "side": 1,
      "message": "What is cast/api an API for?  The sender, the receiver, or both?  Is it for the V2 protocol, streaming, or both?\n\nWe have cast/sender/public and cast/receiver/public folders already for client-facing libcast code.",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3cea73be_7ec460ef",
        "filename": "cast/api/DEPS",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-10-03T17:59:41Z",
      "side": 1,
      "message": "Hmmm. I think these can fit nicely into the public folders.",
      "parentUuid": "07a721ba_ea5184ca",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "287e7380_cac7b01a",
        "filename": "cast/api/frame_agent_config.h",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-10-03T16:04:19Z",
      "side": 1,
      "message": "Extra newline here and elsewhere",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1529d0b5_28ced529",
        "filename": "cast/api/frame_agent_config.h",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-10-03T17:59:41Z",
      "side": 1,
      "message": "That\u0027s a new one for me.",
      "parentUuid": "287e7380_cac7b01a",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c04aeeae_26bfe163",
        "filename": "cast/api/frame_agent_config.h",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-10-03T16:04:19Z",
      "side": 1,
      "message": "Please remove unnecessary #includes here and in the rest of the patch.",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3a03ccc_5b4621d5",
        "filename": "cast/api/frame_agent_config.h",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-10-03T17:59:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c04aeeae_26bfe163",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4c2aa5c5_9b3b94bd",
        "filename": "cast/api/frame_agent_config.h",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-10-03T16:04:19Z",
      "side": 1,
      "message": "\"Agent\" is a term used for OSP.  Can we just say \"for Cast Streaming senders and receivers\"?",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e737e30_8adcf849",
        "filename": "cast/api/frame_agent_config.h",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-10-03T17:59:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4c2aa5c5_9b3b94bd",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "78ac00f8_7ce32631",
        "filename": "cast/api/frame_agent_config.h",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-10-03T16:04:19Z",
      "side": 1,
      "message": "To be pedantic, #include \u003ccstdint\u003e when using the fixed width types.",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d5f8b27_10ca9ded",
        "filename": "cast/api/frame_agent_config.h",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-10-03T17:59:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "78ac00f8_7ce32631",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a483cf4a_9755afb1",
        "filename": "cast/api/frame_agent_config.h",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-10-03T16:04:19Z",
      "side": 1,
      "message": "If this is for Cast, it shouldn\u0027t be in the openscreen:: namespace.",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b58dbcbc_4d4c6b9b",
        "filename": "cast/api/frame_agent_config.h",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-10-03T17:59:41Z",
      "side": 1,
      "message": "Agreed. Yuri is going to fix that and move it in a different patch.",
      "parentUuid": "a483cf4a_9755afb1",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5285a19b_304a9fa6",
        "filename": "cast/api/frame_agent_config.h",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-10-03T16:04:19Z",
      "side": 1,
      "message": "uint32_t?",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9756dd6f_3d637a7a",
        "filename": "cast/api/frame_agent_config.h",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-10-03T17:59:41Z",
      "side": 1,
      "message": "See other comment about unsigned types. I think we should use int based on the style guide.",
      "parentUuid": "5285a19b_304a9fa6",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7bb71b84_44d830ef",
        "filename": "cast/api/frame_agent_config.h",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-10-03T16:04:19Z",
      "side": 1,
      "message": "Ditto",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7230c476_2e1fba04",
        "filename": "cast/api/frame_agent_config.h",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-10-03T17:59:41Z",
      "side": 1,
      "message": "See other comment about unsigned types. I think we should use int based on the style guide.",
      "parentUuid": "7bb71b84_44d830ef",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57a989e5_6c1f88eb",
        "filename": "cast/api/frame_agent_config.h",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-10-03T16:04:19Z",
      "side": 1,
      "message": "I guess non-integer values are okay here?",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ca52140_3281391a",
        "filename": "cast/api/frame_agent_config.h",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-10-03T17:59:41Z",
      "side": 1,
      "message": "Yeah. TV for example is typically 29.97 fps.",
      "parentUuid": "57a989e5_6c1f88eb",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7e125ea8_f5937054",
        "filename": "cast/api/frame_agent_config.h",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-10-03T16:04:19Z",
      "side": 1,
      "message": "These are binary values - can we use a binary type like std::vector\u003cuint8_t\u003e?\nOr are they character-encoded in some way?",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "887c8d20_518663b6",
        "filename": "cast/api/frame_agent_config.h",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-10-03T17:59:41Z",
      "side": 1,
      "message": "I don\u0027t see why not. I\u0027ll update to a binary type.",
      "parentUuid": "7e125ea8_f5937054",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f05594fa_808bc9b1",
        "filename": "cast/api/frame_sender_config.h",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-10-03T16:04:19Z",
      "side": 1,
      "message": "Maybe it\u0027s easier to understand min_playout_limit / max_playout_limit vs. playout_limits.first / playout_limits.second. But I don\u0027t have strong feelings about this - it really depends on how code is using this.",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f1e4587_22a7da06",
        "filename": "cast/api/frame_sender_config.h",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-10-03T17:59:41Z",
      "side": 1,
      "message": "I\u0027ll leave for now, and when I have a patch up using it revisit it.",
      "parentUuid": "f05594fa_808bc9b1",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4416a9c8_29b4d6fd",
        "filename": "cast/api/frame_sender_config.h",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-10-03T16:04:19Z",
      "side": 1,
      "message": "uint32_t?",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd53949b_21d8986a",
        "filename": "cast/api/frame_sender_config.h",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-10-03T17:59:41Z",
      "side": 1,
      "message": "From reading the style guide, seems like int is the correct type since I don\u0027t have specific requirements:\n\n\"\u003ccstdint\u003e defines types like int16_t, uint32_t, int64_t, etc. You should always use those in preference to short, unsigned long long and the like, when you need a guarantee on the size of an integer. Of the C integer types, only int should be used. When appropriate, you are welcome to use standard types like size_t and ptrdiff_t.\n\nWe use int very often, for integers we know are not going to be too big, e.g., loop counters. Use plain old int for such things. You should assume that an int is at least 32 bits, but don\u0027t assume that it has more than 32 bits. If you need a 64-bit integer type, use int64_t or uint64_t.\n\nFor integers we know can be \"big\", use int64_t.\n\nYou should not use the unsigned integer types such as uint32_t, unless there is a valid reason such as representing a bit pattern rather than a number, or you need defined overflow modulo 2^N. In particular, do not use unsigned types to say a number will never be negative. Instead, use assertions for this.\"\n\nhttps://google.github.io/styleguide/cppguide.html",
      "parentUuid": "4416a9c8_29b4d6fd",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "00b57525_264551e3",
        "filename": "cast/api/frame_sender_config.h",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-10-03T16:04:19Z",
      "side": 1,
      "message": "initial_bitrate?",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "329b1275_1867c7d2",
        "filename": "cast/api/frame_sender_config.h",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-10-03T17:59:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "00b57525_264551e3",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e9d3d25_54c569ab",
        "filename": "cast/api/frame_sender_config.h",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-10-03T16:04:19Z",
      "side": 1,
      "message": "Rewrap comment",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16f27859_5aacc614",
        "filename": "cast/api/frame_sender_config.h",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-10-03T17:59:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6e9d3d25_54c569ab",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c9242c3a_55dcb1a3",
        "filename": "cast/api/frame_sender_config.h",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-10-03T16:04:19Z",
      "side": 1,
      "message": "Cast streaming certainly does not support arbitrary codecs.",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38f94834_4d208c86",
        "filename": "cast/api/frame_sender_config.h",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-10-03T17:59:41Z",
      "side": 1,
      "message": "Updated comment. I think the goal for this code is that we will be able to use it in the future on platforms that have custom codecs. We can hash this out in my design document.",
      "parentUuid": "c9242c3a_55dcb1a3",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e4f0ef3_b2cbce59",
        "filename": "cast/api/video_codec_params.h",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-10-03T16:04:19Z",
      "side": 1,
      "message": "Are these unsigned values?",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c9b0ff4_c3630a04",
        "filename": "cast/api/video_codec_params.h",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-10-03T17:59:41Z",
      "side": 1,
      "message": "Yes.",
      "parentUuid": "9e4f0ef3_b2cbce59",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "41ce3208_ed106906",
        "filename": "cast/api/video_codec_params.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-10-03T16:04:19Z",
      "side": 1,
      "message": "Since this is optional, do you need a special \"0\" value?",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6dbe6cb5_7d7f0aba",
        "filename": "cast/api/video_codec_params.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-10-03T17:59:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "41ce3208_ed106906",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b135f05f_63d1cb0a",
        "filename": "cast/api/video_codec_params.h",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2019-10-03T16:04:19Z",
      "side": 1,
      "message": "What does a missing value mean?",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c04637a4_1a767ecf",
        "filename": "cast/api/video_codec_params.h",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2019-10-03T17:59:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b135f05f_63d1cb0a",
      "revId": "524981a6fc48167969404b805423fce7c96cbd26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}