{
  "comments": [
    {
      "key": {
        "uuid": "13b5b3c7_08dfe58f",
        "filename": "tools/cddl/parse.cc",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-03-11T20:46:04Z",
      "side": 1,
      "message": "new_view\nis_changed",
      "revId": "a22ec69c92b707d483c06f1332afe26ae6c59afa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b86e43e_26ce54dc",
        "filename": "tools/cddl/parse.cc",
        "patchSetId": 2
      },
      "lineNbr": 567,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-03-11T20:46:04Z",
      "side": 1,
      "message": "skip_comments",
      "range": {
        "startLine": 566,
        "startChar": 50,
        "endLine": 567,
        "endChar": 0
      },
      "revId": "a22ec69c92b707d483c06f1332afe26ae6c59afa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa01a4e8_1579c455",
        "filename": "tools/cddl/parse.cc",
        "patchSetId": 2
      },
      "lineNbr": 574,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-03-11T20:46:04Z",
      "side": 1,
      "message": "Why not just have SkipWhitespace take a bool with skip_comments passed in?  Or make a function that is SkipWhitespaceAndMaybeComments() to avoid having this same if/else sometimes?",
      "revId": "a22ec69c92b707d483c06f1332afe26ae6c59afa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de4b7541_acf3400e",
        "filename": "tools/cddl/parse.cc",
        "patchSetId": 2
      },
      "lineNbr": 687,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-03-11T20:46:04Z",
      "side": 1,
      "message": "Maybe I\u0027m missing something, but this seems backwards.  Shouldn\u0027t this be\n\nmember_key_num-\u003etext_from_comment \u003d member_key-\u003etext\n\n?",
      "revId": "a22ec69c92b707d483c06f1332afe26ae6c59afa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2dd2b970_39af9b31",
        "filename": "tools/cddl/sema.cc",
        "patchSetId": 2
      },
      "lineNbr": 231,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-03-11T20:46:04Z",
      "side": 1,
      "message": "I don\u0027t understand.  The name in the comment is the \"public name\" (or just \"name\").  The name not in the comment is the \"wire name\" (or serialization name, or serialization key).",
      "range": {
        "startLine": 231,
        "startChar": 0,
        "endLine": 231,
        "endChar": 52
      },
      "revId": "a22ec69c92b707d483c06f1332afe26ae6c59afa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36d24b75_fd066e42",
        "filename": "tools/cddl/sema.h",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-03-11T20:46:04Z",
      "side": 1,
      "message": "No \"_\" on the suffix of these arguments.  I\u0027d prefer using \"this.x \u003d x\" below.",
      "revId": "a22ec69c92b707d483c06f1332afe26ae6c59afa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32bb6129_2ff1fe8c",
        "filename": "tools/cddl/sema.h",
        "patchSetId": 2
      },
      "lineNbr": 141,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-03-11T20:46:04Z",
      "side": 1,
      "message": "I\u0027d just call this name.",
      "revId": "a22ec69c92b707d483c06f1332afe26ae6c59afa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42fe3ec6_56e997dd",
        "filename": "tools/cddl/sema.h",
        "patchSetId": 2
      },
      "lineNbr": 144,
      "author": {
        "id": 1125619
      },
      "writtenOn": "2019-03-11T20:46:04Z",
      "side": 1,
      "message": "And call this serialized_name or serialization_string_key.  There isn\u0027t always a \"wire\".\n\nAnd we should make it clear the serialized name is optional, with either optional\u003cstd::string\u003e or opt_serialized_name.  And make it clear it\u0027s not set when a number is used in the serialization.",
      "revId": "a22ec69c92b707d483c06f1332afe26ae6c59afa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}