{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "db335a64_cc1acceb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2021-09-17T16:10:31Z",
      "side": 1,
      "message": "Gentle ping",
      "revId": "d7d6acebd94f6e39e4a251253b7fa101b7ef02d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "927c1aa0_a2d68360",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2021-09-17T16:42:24Z",
      "side": 1,
      "message": "The code LGTM\n\nBut I question if adding a level of indirection would make the code more confusing for devs outside of our team? The name is clear enough I don\u0027t have a strong opinion either way though",
      "revId": "d7d6acebd94f6e39e4a251253b7fa101b7ef02d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "55d9eb72_b641d9c3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2021-09-17T16:51:14Z",
      "side": 1,
      "message": "Fair concern.  This is patterned after base::Contains in Chromium, which I didn\u0027t have any particular problem picking up on the first time I saw it.\n\nWe could put the STL utility functions into a namespace, so this would become stl_util::Contains().  That would avoid any potential name collisions with other Contains() functions/methods, at the cost of some extra typing, and an annoying mechanical change to update the existing functions.",
      "parentUuid": "927c1aa0_a2d68360",
      "revId": "d7d6acebd94f6e39e4a251253b7fa101b7ef02d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "04a58b52_e064ab4a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2021-09-17T17:19:51Z",
      "side": 1,
      "message": "s/stl_util::/std_util::/ above to match the file name.",
      "parentUuid": "55d9eb72_b641d9c3",
      "revId": "d7d6acebd94f6e39e4a251253b7fa101b7ef02d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5d63decc_c426f6f5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1330244
      },
      "writtenOn": "2021-09-17T17:41:46Z",
      "side": 1,
      "message": "\u003e I didn\u0027t have any particular problem picking up on the first time I saw it.\n\u003e We could put the STL utility functions into a namespace, so this would become stl_util::Contains()\n\nContains without the namespace does seem clear enough to me. Just wanted to call it out to be sure you\u0027d agree - openscreen + chromium feel \"normal\" enough to me at this point that I can\u0027t really judge what would be actually helpful vs making the code harder to read\n\n\u003e That would avoid any potential name collisions with other Contains() functions/methods\n\nIf this is a concern, would it be worth updating to just be openscreen::Contains in code instead? IMO this is overkill at the moment and can be done if we need it later on, but I\u0027m not against it",
      "parentUuid": "04a58b52_e064ab4a",
      "revId": "d7d6acebd94f6e39e4a251253b7fa101b7ef02d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf1c5506_f6a386db",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2021-09-17T18:17:09Z",
      "side": 1,
      "message": "I think I\u0027d rather add specific namespace(s) for utility functions.  I\u0027m not sure what a clear rule would be for using the openscreen:: namespace, and it would be hard to keep consistency over time.\n\nAt any rate, not planning on making any changes now.   If there are name collisions or other readability issues that come up, we can revisit.",
      "parentUuid": "5d63decc_c426f6f5",
      "revId": "d7d6acebd94f6e39e4a251253b7fa101b7ef02d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7cfef7b0_18eca019",
        "filename": "util/std_util.h",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 1215804
      },
      "writtenOn": "2021-09-21T18:43:34Z",
      "side": 1,
      "message": "nit: C.begin() in the comment here and below.",
      "range": {
        "startLine": 93,
        "startChar": 5,
        "endLine": 93,
        "endChar": 10
      },
      "revId": "d7d6acebd94f6e39e4a251253b7fa101b7ef02d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}