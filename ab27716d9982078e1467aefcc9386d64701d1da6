{
  "comments": [
    {
      "key": {
        "uuid": "9f9f8486_ecc05f3d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 14
      },
      "lineNbr": 7,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "I like to put the module I\u0027m patching in brackets, like:\n\n[Cast Streaming] Implement sender session class",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ba5c6d2_96f807c6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 14
      },
      "lineNbr": 7,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9f9f8486_ecc05f3d",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "597b7049_e01cfb06",
        "filename": "/COMMIT_MSG",
        "patchSetId": 14
      },
      "lineNbr": 10,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "Maybe add a sentence about what the SenderSession class does, which is helpful as documentation.",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45329eb2_0c2971f0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 14
      },
      "lineNbr": 10,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "597b7049_e01cfb06",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "414d3fae_3c8b3388",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-04T18:22:22Z",
      "side": 1,
      "message": "I think I\u0027ll let miu@ do the initial review on this.  Let me know if you need me to look at it in the meantime.",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73a3f36f_455133e8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "Overall no major issues, style / tactical / organizational stuff.  Didn\u0027t review tests in detail yet.\n\nI\u0027m not sure how we\u0027re choosing to document the streaming module or how to use it.  Since there\u0027s no clear public/private distinction in this module, I\u0027m not sure what parts clients are expected to call/use and which are implementation details.  The standalone sender will point to some of the necessary APIs, but I\u0027d like to hear thoughts on how we can provide reference documentation on the sender APIs so clients know what they are allowed to tweak.\n\nOne area that I struggled with on this CL is the proliferation \"config\" structs.  Some seem to be temporary for holding state during negotiation, some seem to be for defining a specific stream and some seem to hold the current configuration of the sender object.  Clarification on the roles each of them play would be helpful, then we can see if there is an opportunity to simplify.\n",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc804282_da237b24",
        "filename": "cast/streaming/message_fields.h",
        "patchSetId": 14
      },
      "lineNbr": 17,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "Declarations at namespace scope automatically have static storage duration, so the \"static\" keyword is redundant.",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73910ba3_57f505cb",
        "filename": "cast/streaming/message_fields.h",
        "patchSetId": 14
      },
      "lineNbr": 17,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dc804282_da237b24",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "77983251_58db0de5",
        "filename": "cast/streaming/receiver_session.h",
        "patchSetId": 14
      },
      "lineNbr": 13,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "This is something we should definitely take care of as we don\u0027t want to force abseil on clients.\n\nIs there a Buganizer bug for it yet?  If not, do you mind creating one and linking it here?",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "583db888_f4f07514",
        "filename": "cast/streaming/receiver_session.h",
        "patchSetId": 14
      },
      "lineNbr": 13,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "My plan is to do it soon, just didn\u0027t want it in this patch since I need to coordinate this with fuchsia folks. \n\nI already have an issue, I\u0027ll link it here:\n\nhttps://b.corp.google.com/issues/166640702",
      "parentUuid": "77983251_58db0de5",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3bb680b3_b07dfc66",
        "filename": "cast/streaming/receiver_session.h",
        "patchSetId": 14
      },
      "lineNbr": 137,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "1. Can you use TODO(issuetracker.google.com/XXX)?\n2. I\u0027m not sure TODO provides enough context for someone else to fix.  Can you elaborate?",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50a0e7c9_6d392c62",
        "filename": "cast/streaming/receiver_session.h",
        "patchSetId": 14
      },
      "lineNbr": 137,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "https://b.corp.google.com/issues/168238707",
      "parentUuid": "3bb680b3_b07dfc66",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae1a5cd7_b6fb52dd",
        "filename": "cast/streaming/receiver_session.h",
        "patchSetId": 14
      },
      "lineNbr": 138,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "Why this change?  The struct isn\u0027t just JSON.\n\nIt may also break clients.",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be6c6f5f_49610c90",
        "filename": "cast/streaming/receiver_session.h",
        "patchSetId": 14
      },
      "lineNbr": 138,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "It\u0027s not a necessary change now due to some refactoring, so I\u0027ll remove it.",
      "parentUuid": "ae1a5cd7_b6fb52dd",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "00d257f9_aa39db8f",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 37,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "Will other code need to know this namespace? If so, let\u0027s put it in constants.h.",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93585814_fc1377a2",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 37,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Not currently. I\u0027ll move if needed.",
      "parentUuid": "00d257f9_aa39db8f",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1bd8332_7bba27b4",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 44,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "I think these two numeric constants belong in constants.h",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26069db3_5cfdb9b1",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 44,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e1bd8332_7bba27b4",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6483eedc_bcda6559",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 49,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "Is the reason for this behavior documented (bug link)?",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a38bcd87_ed518c17",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 49,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "I\u0027m not sure, I\u0027ll check with Yuri.",
      "parentUuid": "6483eedc_bcda6559",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce70fdd4_5013374b",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 49,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-12T00:55:56Z",
      "side": 1,
      "message": "I haven\u0027t been able to find a bug, basing this on comments from xjz@:\n\nhttps://chromium-review.googlesource.com/c/chromium/src/+/1017235/",
      "parentUuid": "a38bcd87_ed518c17",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d33db648_b664cafc",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 49,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-14T19:18:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ce70fdd4_5013374b",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed0d7ff9_83d588f7",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 51,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "What is this value?  Does the receiver actually care what it is?",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ba5a378_fed0c9b0",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 51,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Some receivers do, others don\u0027t. It\u0027s mostly redundant information with the codec.",
      "parentUuid": "ed0d7ff9_83d588f7",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6713e90e_f4e290cf",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 51,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T23:18:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5ba5a378_fed0c9b0",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db6948a7_a5276a89",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 53,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "The GetPayloadType functions might fit better in rtp_defines.h",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "efbaf039_599e9598",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 53,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "db6948a7_a5276a89",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f9293fe_f387c6f8",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 57,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "CreateAudioStream?",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d51597c0_6d86d998",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 57,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Left as CreateStream for use with template method below.",
      "parentUuid": "0f9293fe_f387c6f8",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9e21ab9_86ff1502",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 60,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "I wonder if we should replace the Error\u0026 return value with Error\u0026\u0026.",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2eebf2b_a4730f2c",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 60,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "I\u0027m open, we have had a lot of back and forth on that and I don\u0027t feel strongly.",
      "parentUuid": "f9e21ab9_86ff1502",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3444361c_b7420584",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 79,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "Do we need both Resolution and DisplayResolution as distinct types?",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ae797fd_01be960d",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 79,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Yes, because Resolution is part of the offer/answer messages which we don\u0027t want to expose to the embedder.",
      "parentUuid": "3444361c_b7420584",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aed5f4e_28984f99",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 82,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "CreateVideoStream?",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22611e03_c69b22ed",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 82,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Same as above.",
      "parentUuid": "1aed5f4e_28984f99",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d5c5b107_4db5dc50",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 100,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "How does the caller set an alternative target delay?",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "444561ea_16bbafaf",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 100,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Added to configs.",
      "parentUuid": "d5c5b107_4db5dc50",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8b70973_c07214fb",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 118,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "Are you sure S is always going to be moved when the vector is copied or resized?\n\nI remember there is something subtle about noexcept ctors in these cases.\n\nThat\u0027s why I slightly prefer to pass in a pointer to an output vector that you can emplace_back directly.",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07be95d3_22bc5155",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 118,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a8b70973_c07214fb",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f946787_ae4e025d",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 124,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "Can you use a descriptive variable name here?",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88fdcb16_b353b5c5",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 124,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0f946787_ae4e025d",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04a8406d_821d9de3",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 125,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "You are basically asserting that CreateStream will never return an error.  Suggest:\n\n1. Handling the error case through an error reporting API (SenderSession::OnError?)\n2. Moving the DCHECK into CreateStream() and having it just return S.",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c3cffd0_f6964273",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 125,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "04a8406d_821d9de3",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc9dd74a_0b27d27e",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 144,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "1. RAND_pseudo_bytes is deprecated.\nhttps://www.openssl.org/docs/man1.1.1/man3/RAND_pseudo_bytes.html\n\n2. RAND_bytes uses the device\u0027s entropy pool, which ideally should be preserved for when we really need cryptographically strong random values.\n\n3. What is this used for? Can we use a counter instead?\n\n4. To be pedantic, you could say sizeof\u003cint16_t\u003e instead of 2.  I don\u0027t remember if int16 is guaranteed to be 2 bytes.",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77f631ed_3649bffd",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 144,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Have an open discussion with @btolsch, we need to sort out how sender-ids work and where they come from.",
      "parentUuid": "dc9dd74a_0b27d27e",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40e9121f_245d2bad",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 144,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T23:18:19Z",
      "side": 1,
      "message": "I think the sender_id should be passed in, since it\u0027s really a feature of cast messaging.",
      "parentUuid": "77f631ed_3649bffd",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25a9b7fe_d1b1d2fb",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 154,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "I prefer to keep constants that govern the behavior of the overall module together in constants.h or a similar file.",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5024fd4_6961c529",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 154,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "25a9b7fe_d1b1d2fb",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd5fbfb3_4548351a",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 201,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "Is the same number used for all messages? I would expect this to increment in OnMessage/SendMessage if they are intended to sequence message handling.  Maybe check the spec document to see if it has any details.",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7db5b7c0_be714ced",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 201,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Incrementing in SendMessage. The messages from the receiver are currently all responses so use the same sequence number.",
      "parentUuid": "cd5fbfb3_4548351a",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "78ad7046_a20a1b34",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 218,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "s/jsonified/json_offer/",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67c21a70_89787ee2",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 218,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "78ad7046_a20a1b34",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ea6c953_14a93408",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 224,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "ISTM that the offer should be passed in the ctor to Negotation.",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2be65ad9_8a4cf2df",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 224,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0ea6c953_14a93408",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eda7847a_e7de1c78",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 227,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "Same with audio_configs and video_configs.",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f98c22a8_096716f3",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 227,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eda7847a_e7de1c78",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7fd713d3_55529138",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 251,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "Where is sender_id and message_namespace verified?",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "055044fd_479135d6",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 251,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Not currently verified at all. I\u0027ll check with brandon to figure wout what the responsibilities for verification in the sender session should be.",
      "parentUuid": "7fd713d3_55529138",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c919ec31_b2452fbb",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 251,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T23:18:19Z",
      "side": 1,
      "message": "I\u0027ve added validation, it may be duplicate from higher up in the cast socket messaging.",
      "parentUuid": "055044fd_479135d6",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "beaf90f8_5e41f597",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 279,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "How similar is the code here to the receiver session?\n\nWould like to see a function that does these validations with an expected sender/namespace/sequence/key and returns the parsed body.",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b573b632_6790c880",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 279,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "It\u0027s pretty similar. I have a buganizer bug to combine them.",
      "parentUuid": "beaf90f8_5e41f597",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "efcd82fd_392c34a6",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 302,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "Is there a way to bubble up a more specific error here (i.e. what part of the answer failed to validate)?",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d61f106_73fa7545",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 302,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Not currently. The problem is that doing so in C++ without macros has a tendency to create a crapload of boilerplate code and make the parsing more complicated. I have thought about doing so a couple more times since then, may be worth following up separately from this patch.",
      "parentUuid": "efcd82fd_392c34a6",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88ba6cc3_133ffb81",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 320,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "The whitespace here looks a little funny.",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5cb91e87_c50f4578",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 320,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Agreed. It\u0027s a little better now after doing refactoring.",
      "parentUuid": "88ba6cc3_133ffb81",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "69adcb58_22da5d98",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 336,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "What is the type of answer.udp_port?",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef4dffd8_aa80b89a",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 336,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "int",
      "parentUuid": "69adcb58_22da5d98",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "38ec3de7_bfcd8f04",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 345,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "Use find() to return an iterator pointing to the value you want.",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe728e09_fba2722d",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 345,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "N/A after moving to vector.",
      "parentUuid": "38ec3de7_bfcd8f04",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "079f307e_876059f1",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 353,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "This object takes ownership of current_audio_sender_, but then passes it into ConfiguredSender...",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6523c5ff_0d403e25",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 353,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Cleaned up so hopefully more obvious. ConfiguredSenders just has a raw pointer and doesn\u0027t manage lifetime.",
      "parentUuid": "079f307e_876059f1",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "960b15d3_697e80f0",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 354,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "std::make_unique?",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "252a8f07_7225da7f",
        "filename": "cast/streaming/sender_session.cc",
        "patchSetId": 14
      },
      "lineNbr": 354,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "960b15d3_697e80f0",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "13057cb6_6e45ebe2",
        "filename": "cast/streaming/sender_session.h",
        "patchSetId": 14
      },
      "lineNbr": 27,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "capture_recommendations::Recommendations is a little redundant for my taste, but I don\u0027t feel strongly about it, and it\u0027s not worth trying changing an API that already has callers downstream.",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e59c4e75_3d3fd8c3",
        "filename": "cast/streaming/sender_session.h",
        "patchSetId": 14
      },
      "lineNbr": 27,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Fair enough. I\u0027m always happy to change in a followup patch.",
      "parentUuid": "13057cb6_6e45ebe2",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd14df68_e254a97e",
        "filename": "cast/streaming/sender_session.h",
        "patchSetId": 14
      },
      "lineNbr": 44,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "What are the possible values of C?\n\nIt would be simpler to have AudioConfig*/VideoConfig* in ConfiguredSenders, which handles all the cases mentioned below.",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc3a180c_cd3e5b4d",
        "filename": "cast/streaming/sender_session.h",
        "patchSetId": 14
      },
      "lineNbr": 44,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bd14df68_e254a97e",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a05e010a_89faa1be",
        "filename": "cast/streaming/sender_session.h",
        "patchSetId": 14
      },
      "lineNbr": 49,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "Slightly prefer declaring ConfiguredSenders/ConfiguredSender in the cast namespace.\n\nThey don\u0027t look to me like an implementation detail of SenderSession: they are passed out of its API, and also include config objects defined elsehwere.",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c190978_a9e4dc2e",
        "filename": "cast/streaming/sender_session.h",
        "patchSetId": 14
      },
      "lineNbr": 49,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a05e010a_89faa1be",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ef8d9cdf_142304c8",
        "filename": "cast/streaming/sender_session.h",
        "patchSetId": 14
      },
      "lineNbr": 60,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "handling the negotiation.   When the negotiation is complete,",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82003c06_71e00b49",
        "filename": "cast/streaming/sender_session.h",
        "patchSetId": 14
      },
      "lineNbr": 60,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ef8d9cdf_142304c8",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "532ea211_8df2e200",
        "filename": "cast/streaming/sender_session.h",
        "patchSetId": 14
      },
      "lineNbr": 67,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "...used by the sender to provide an optimal video stream for the receiver.",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f7a4fcd_3d76bc28",
        "filename": "cast/streaming/sender_session.h",
        "patchSetId": 14
      },
      "lineNbr": 67,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "532ea211_8df2e200",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e8fc1ec_b60193df",
        "filename": "cast/streaming/sender_session.h",
        "patchSetId": 14
      },
      "lineNbr": 71,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "|session| could own the last negotiated |senders|, instead of relying on the caller to keep track of them.   (Or the caller could make a copy if it needs to.)",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7b2cd41_54ea73c9",
        "filename": "cast/streaming/sender_session.h",
        "patchSetId": 14
      },
      "lineNbr": 71,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0e8fc1ec_b60193df",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e48a73e4_8d43afaa",
        "filename": "cast/streaming/sender_session.h",
        "patchSetId": 14
      },
      "lineNbr": 74,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "Can you be a bit more specific?  Will negotiation restart, or does the caller have to call Negotiate() again?",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05c1be29_84ab27bd",
        "filename": "cast/streaming/sender_session.h",
        "patchSetId": 14
      },
      "lineNbr": 74,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e48a73e4_8d43afaa",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "248f51a1_dc0c48c7",
        "filename": "cast/streaming/sender_session.h",
        "patchSetId": 14
      },
      "lineNbr": 81,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "Please document lifetime assumptions about passed-in pointers.",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8eed7452_5b1ca7de",
        "filename": "cast/streaming/sender_session.h",
        "patchSetId": 14
      },
      "lineNbr": 81,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "248f51a1_dc0c48c7",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0d44e5e_492fd1ac",
        "filename": "cast/streaming/sender_session.h",
        "patchSetId": 14
      },
      "lineNbr": 86,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "Banning move *and* copy is pretty restrictive.  Can it be made move-only, or are there members that can\u0027t be moved?",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1e01277_3e2f850f",
        "filename": "cast/streaming/sender_session.h",
        "patchSetId": 14
      },
      "lineNbr": 86,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "No, I really wanted move but the SenderPacketRouter cannot be moved.",
      "parentUuid": "d0d44e5e_492fd1ac",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "743b6e44_dc3e3a8c",
        "filename": "cast/streaming/sender_session.h",
        "patchSetId": 14
      },
      "lineNbr": 93,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "Clients may want a callback in ::Client telling them when session re-negotiation has started so they can clean up anything that was based on the previous ConfiguredSenders.\n\nCan always be added later, of course, if there\u0027s no code that would use it now.",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f633ef53_dc89deb0",
        "filename": "cast/streaming/sender_session.h",
        "patchSetId": 14
      },
      "lineNbr": 93,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Yeah that make sense. For now we are assuming the caller has to do any renegotiations, obviously this won\u0027t always be true and we may be able to renegotiate without any help.",
      "parentUuid": "743b6e44_dc3e3a8c",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "33563a5d_22e5ee9e",
        "filename": "cast/streaming/sender_session.h",
        "patchSetId": 14
      },
      "lineNbr": 100,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "It looks like MessagePort is a string-based API, while the code that actually does negotation produces/consumes JSON.  \n\nA MessagePort wrapper that does the conversion to/from Cast messages (including JSON parse/serialize) might be useful?",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b122b59_a410b4b0",
        "filename": "cast/streaming/sender_session.h",
        "patchSetId": 14
      },
      "lineNbr": 100,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Yeah, that\u0027s what the TODO I have is for.",
      "parentUuid": "33563a5d_22e5ee9e",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0222a072_af3d0af4",
        "filename": "cast/streaming/sender_session.h",
        "patchSetId": 14
      },
      "lineNbr": 104,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "This looks similar to Message in ReceiverSession.",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f90e4fe_f05e50e5",
        "filename": "cast/streaming/sender_session.h",
        "patchSetId": 14
      },
      "lineNbr": 104,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Yup, that\u0027s the vague TODO I had, cleaned up the TODO in buganizer.",
      "parentUuid": "0222a072_af3d0af4",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "58153fa5_17a55a5d",
        "filename": "cast/streaming/sender_session.h",
        "patchSetId": 14
      },
      "lineNbr": 105,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "The default ctor for std::string already creates an empty string.",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1faacc55_93b9cfb8",
        "filename": "cast/streaming/sender_session.h",
        "patchSetId": 14
      },
      "lineNbr": 105,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "58153fa5_17a55a5d",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab27cb9f_ffe594c4",
        "filename": "cast/streaming/sender_session.h",
        "patchSetId": 14
      },
      "lineNbr": 119,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "How many stream IDs will there be?  unordered_map is hash-based and adds overhead.",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bcf5476_b3b6a35c",
        "filename": "cast/streaming/sender_session.h",
        "patchSetId": 14
      },
      "lineNbr": 119,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Likely 1-4. I\u0027ll switch to a vector.",
      "parentUuid": "ab27cb9f_ffe594c4",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d2eedbd3_493faff7",
        "filename": "cast/streaming/sender_session.h",
        "patchSetId": 14
      },
      "lineNbr": 126,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "Where is SpawnSenders() declared?",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff2c3508_aefbc7b6",
        "filename": "cast/streaming/sender_session.h",
        "patchSetId": 14
      },
      "lineNbr": 126,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Directly below this.",
      "parentUuid": "d2eedbd3_493faff7",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32c3499c_412655c3",
        "filename": "cast/streaming/sender_session.h",
        "patchSetId": 14
      },
      "lineNbr": 127,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "1. Returning a std::pair is a little awkward for callers.  Should SessionConfig just be part fo the Sender?\n\n2. I\u0027m having a hard time wrapping my head around the various config objects that hold session metadata: AudioConfig, VideoConfig, SessionConfig and Stream.  How do they relate to one another?",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f474ce1b_348209fb",
        "filename": "cast/streaming/sender_session.h",
        "patchSetId": 14
      },
      "lineNbr": 127,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Made session config part of the sender, simplifies things a lot.\n\nI\u0027ll rename audio and video configs.",
      "parentUuid": "32c3499c_412655c3",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7a69431_cf4822de",
        "filename": "cast/streaming/session_base.h",
        "patchSetId": 14
      },
      "lineNbr": 14,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "Let\u0027s put these into constants.h or their own header.",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e42ac8d4_335612bb",
        "filename": "cast/streaming/session_base.h",
        "patchSetId": 14
      },
      "lineNbr": 14,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7a69431_cf4822de",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "adc39ec1_bdd40c9e",
        "filename": "cast/streaming/session_base.h",
        "patchSetId": 14
      },
      "lineNbr": 15,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "Receivers must implement all.  Senders must implement at least one of each for audio and video.",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2dfa2274_9c416777",
        "filename": "cast/streaming/session_base.h",
        "patchSetId": 14
      },
      "lineNbr": 15,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "adc39ec1_bdd40c9e",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ee8e184_d3a94a86",
        "filename": "cast/streaming/session_base.h",
        "patchSetId": 14
      },
      "lineNbr": 23,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "s/libcast/Cast Streaming/",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f49a7b1_f4c002e8",
        "filename": "cast/streaming/session_base.h",
        "patchSetId": 14
      },
      "lineNbr": 23,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1ee8e184_d3a94a86",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f32c9518_f51ce055",
        "filename": "cast/streaming/session_base.h",
        "patchSetId": 14
      },
      "lineNbr": 28,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "Provide a default.",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eac7236d_49af6db9",
        "filename": "cast/streaming/session_base.h",
        "patchSetId": 14
      },
      "lineNbr": 28,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f32c9518_f51ce055",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01869964_dd038200",
        "filename": "cast/streaming/session_base.h",
        "patchSetId": 14
      },
      "lineNbr": 55,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "Ditto.",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0eccd4a2_aed1d1c5",
        "filename": "cast/streaming/session_base.h",
        "patchSetId": 14
      },
      "lineNbr": 55,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "01869964_dd038200",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b031e061_7f20ce62",
        "filename": "cast/streaming/session_base.h",
        "patchSetId": 14
      },
      "lineNbr": 59,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "Typo in this",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "824ff28b_052e2ec9",
        "filename": "cast/streaming/session_base.h",
        "patchSetId": 14
      },
      "lineNbr": 59,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b031e061_7f20ce62",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "58fe4fe2_2b5cb08c",
        "filename": "cast/streaming/session_base.h",
        "patchSetId": 14
      },
      "lineNbr": 64,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "Is there any reference defining the syntax of this field?  Please link/reference it.  Otherwise this will be a total mystery to library users.\n\nSame applies to profile, level.  At least for profile, there are some RFCs providing a reference, but I don\u0027t know if these fields follow that or if the protocol authors came up with something completely proprietary.",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da0dfccf_6641a627",
        "filename": "cast/streaming/session_base.h",
        "patchSetId": 14
      },
      "lineNbr": 64,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "IMO the mirroring control protocol is a mess.\n\nhttps://docs.google.com/document/d/1zpDjzNrUPAAUV4HwIv-Zztp_4fJgyw-h4v7qc6t_5zI/edit#heading\u003dh.m828ewl2oktc\n\nI\u0027ll check with Yuri and leave this open.",
      "parentUuid": "58fe4fe2_2b5cb08c",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aafb13ba_f2231172",
        "filename": "cast/streaming/session_base.h",
        "patchSetId": 14
      },
      "lineNbr": 64,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-12T00:55:56Z",
      "side": 1,
      "message": "Alright, these fields aren\u0027t currently used with the Chrome sender, so I\u0027m just going to omit them from the API for now. If we end up wanting to add them, they should probably be enums.",
      "parentUuid": "da0dfccf_6641a627",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cdf267f6_577f9ae7",
        "filename": "cast/streaming/session_test_support.h",
        "patchSetId": 14
      },
      "lineNbr": 5,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-09-09T23:49:37Z",
      "side": 1,
      "message": "Can we just call this testing/simple_message_port.h?",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4d8f9f2_ed4e5d95",
        "filename": "cast/streaming/session_test_support.h",
        "patchSetId": 14
      },
      "lineNbr": 5,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-09-11T20:37:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cdf267f6_577f9ae7",
      "revId": "ab27716d9982078e1467aefcc9386d64701d1da6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}