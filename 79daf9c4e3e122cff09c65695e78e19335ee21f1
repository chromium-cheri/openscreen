{
  "comments": [
    {
      "key": {
        "uuid": "a078e3c6_76d7fa5a",
        "filename": "cast/standalone_receiver/cast_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 31,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-03-31T00:03:45Z",
      "side": 1,
      "message": "Which certificate is this for?  If it\u0027s the TLS self-signed cert, that has a maximum lifetime of 4 days (enforced by the sender).  See cast_auth_util.cc:34 in Chrome.",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9bf43de_8a3faddf",
        "filename": "cast/standalone_receiver/cast_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 31,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-03-31T01:41:52Z",
      "side": 1,
      "message": "It is. I\u0027ll update.",
      "parentUuid": "a078e3c6_76d7fa5a",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ec825e1c_c2e1b356",
        "filename": "cast/standalone_receiver/cast_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 33,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-03-31T00:03:45Z",
      "side": 1,
      "message": "Can you elaborate what key is stored in this file?  Is this just a self-signed key for TLS?",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17238752_81a78836",
        "filename": "cast/standalone_receiver/cast_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 33,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-03-31T01:41:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ec825e1c_c2e1b356",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18dc89c7_f2e739b5",
        "filename": "cast/standalone_receiver/cast_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-03-31T00:03:45Z",
      "side": 1,
      "message": "Nit: I would just drop the part after \"source control\" as common implementations the keys are not accessible to source code at all (i.e. they are in a TEE).",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "925502e8_0dd5ac57",
        "filename": "cast/standalone_receiver/cast_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-03-31T01:41:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "18dc89c7_f2e739b5",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfd6c155_7521d735",
        "filename": "cast/standalone_receiver/cast_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 38,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-03-31T00:03:45Z",
      "side": 1,
      "message": "See comments in earlier patchset about the perils of hard coding paths in source code.",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ea78962_6d62e6de",
        "filename": "cast/standalone_receiver/cast_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 41,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-03-31T00:03:45Z",
      "side": 1,
      "message": "If you are converting to std::string inside anyway, maybe just pass as const std::string\u0026",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db1e07df_dc99cd23",
        "filename": "cast/standalone_receiver/cast_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 50,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-03-31T00:03:45Z",
      "side": 1,
      "message": "This is allocating space for the entire file on the stack, which is probably fine if the file is small.  Usually I\u0027ve seen code like this give the caller the choice to stack or heap allocate by passing an output param.",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b72160c8_2992c1da",
        "filename": "cast/standalone_receiver/cast_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 61,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-03-31T00:03:45Z",
      "side": 1,
      "message": "How about adding e.g. std::string IPEndpoint::ToString()? Just because that makes it more obvious how to do a string conversion, and makes the code here much easier to read.",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f339d205_e7add98b",
        "filename": "cast/standalone_receiver/cast_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 61,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-03-31T01:41:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b72160c8_2992c1da",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a1616c5_2938d244",
        "filename": "cast/standalone_receiver/cast_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 68,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-03-31T00:03:45Z",
      "side": 1,
      "message": "- Use an explicit type here for readabilty.\n- Prefer to name this private_key, and the variable above private_key_data or some such.",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07913c0e_f657080c",
        "filename": "cast/standalone_receiver/cast_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 68,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-03-31T01:41:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6a1616c5_2938d244",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6543b7d9_17f2256b",
        "filename": "cast/standalone_receiver/cast_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 71,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-03-31T00:03:45Z",
      "side": 1,
      "message": "If we are reading a hard coded private key for a standalone demo, it might be simpler just to CHECK-fail on error versus handling code for all of the invalid-key cases.  I don\u0027t feel strongly though as the total code size isn\u0027t that different.\n\nMaybe if we had an OSP_CHECK_RESULT macro that would let you write:\n\nFoo foo \u003d OSP_CHECK_RESULT(SomeFunction())\n\nWhere SomeFunction returns ErrorOr\u003cFoo\u003e, and the macro would CHECK-fail if it returns an error.",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27fd2067_b1e7ab18",
        "filename": "cast/standalone_receiver/cast_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 74,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-03-31T00:03:45Z",
      "side": 1,
      "message": "Ditto about not using auto here.",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "efcc9c6f_d665a48c",
        "filename": "cast/standalone_receiver/cast_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 74,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-03-31T01:41:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "27fd2067_b1e7ab18",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d95d009_1da716a8",
        "filename": "cast/standalone_receiver/cast_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 75,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-03-31T00:03:45Z",
      "side": 1,
      "message": "Where is this declared?  \"CreateCertificate\" is a little generic as Cast deals with certificates of multiple types.",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3832f414_c609c953",
        "filename": "cast/standalone_receiver/cast_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 75,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-03-31T01:41:52Z",
      "side": 1,
      "message": "Certificate utils. Renamed to CreateSelfSignedX509Certificate.",
      "parentUuid": "2d95d009_1da716a8",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b29d8b1_3d8f1228",
        "filename": "cast/standalone_receiver/cast_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 80,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-03-31T00:03:45Z",
      "side": 1,
      "message": "Ditto",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd9df237_a7de43ad",
        "filename": "cast/standalone_receiver/cast_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 80,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-03-31T01:41:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2b29d8b1_3d8f1228",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c2172f52_a56a1e73",
        "filename": "cast/standalone_receiver/cast_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 85,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-03-31T00:03:45Z",
      "side": 1,
      "message": "What public key is sent by TLS if not the public key for private_key?",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd41bb0f_1dfcbc8c",
        "filename": "cast/standalone_receiver/cast_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 85,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-03-31T01:41:52Z",
      "side": 1,
      "message": "I think just the generated certificate is sent.",
      "parentUuid": "c2172f52_a56a1e73",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ed169ef_9cc9f8d7",
        "filename": "cast/standalone_receiver/cast_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 99,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-03-31T00:03:45Z",
      "side": 1,
      "message": "Nit: I am okay with a ternary expression here.",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a22f577f_56d3f5ff",
        "filename": "cast/standalone_receiver/cast_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 99,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-03-31T01:41:52Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "6ed169ef_9cc9f8d7",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8079eae_38ff75ea",
        "filename": "cast/standalone_receiver/cast_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 117,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-03-31T00:03:45Z",
      "side": 1,
      "message": "+1",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec182a52_1e72fcbc",
        "filename": "cast/standalone_receiver/cast_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 124,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-03-31T00:03:45Z",
      "side": 1,
      "message": "Nit: TLS",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34cee5ad_894e255a",
        "filename": "cast/standalone_receiver/cast_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 124,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-03-31T01:41:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ec182a52_1e72fcbc",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a13f2ca_933fa375",
        "filename": "cast/standalone_receiver/cast_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 131,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-03-31T00:03:45Z",
      "side": 1,
      "message": "Is this being run in a thread other than the current thread?  If so do you need to move the factory construction into the task?",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44ee6a1d_960f8c8c",
        "filename": "cast/standalone_receiver/cast_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 131,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-03-31T01:41:52Z",
      "side": 1,
      "message": "Listening needs to happen on the task runner. Probably? I\u0027ll do it.",
      "parentUuid": "8a13f2ca_933fa375",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "80586302_2d45b9f0",
        "filename": "cast/standalone_receiver/cast_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 149,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-03-31T00:03:45Z",
      "side": 1,
      "message": "OSP_DCHECK(factory)",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d2b1ec9_1593e816",
        "filename": "cast/standalone_receiver/cast_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 149,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-03-31T01:41:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "80586302_2d45b9f0",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ed04063_7175bdaf",
        "filename": "cast/standalone_receiver/cast_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 169,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-03-31T00:03:45Z",
      "side": 1,
      "message": "Can you be more specific?  Where is OnNegotiated actually handled?",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8de15b51_785bafc8",
        "filename": "cast/standalone_receiver/cast_agent.cc",
        "patchSetId": 5
      },
      "lineNbr": 169,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-03-31T01:41:52Z",
      "side": 1,
      "message": "Expanded. It isn\u0027t handled.",
      "parentUuid": "1ed04063_7175bdaf",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "656dc015_dac00296",
        "filename": "cast/standalone_receiver/cast_socket_message_port.cc",
        "patchSetId": 5
      },
      "lineNbr": 16,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-03-31T00:03:45Z",
      "side": 1,
      "message": "But you\u0027re assigning it to nullptr?  Did you mean to write CHECK(client_ \u003d\u003d this)?",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30a736eb_a6e80488",
        "filename": "cast/standalone_receiver/cast_socket_message_port.cc",
        "patchSetId": 5
      },
      "lineNbr": 16,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-03-31T01:41:52Z",
      "side": 1,
      "message": "Ahh, the confusion here is that there are two clients: castsocket\u0027s client and castsocketmessageport\u0027s client. We reset castsocketmessageport\u0027s client and leave castsocket\u0027s client alone.",
      "parentUuid": "656dc015_dac00296",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a014213_62287eb6",
        "filename": "cast/standalone_receiver/cast_socket_message_port.cc",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-03-31T00:03:45Z",
      "side": 1,
      "message": "Now I\u0027m a little confused by the comment above.",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01e1405d_5187b376",
        "filename": "cast/standalone_receiver/cast_socket_message_port.cc",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-03-31T01:41:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4a014213_62287eb6",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "379092aa_3858ce97",
        "filename": "cast/standalone_receiver/cast_socket_message_port.cc",
        "patchSetId": 5
      },
      "lineNbr": 53,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-03-31T00:03:45Z",
      "side": 1,
      "message": "I like this nice clean implementation :-)",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34c0df10_bfea5bf8",
        "filename": "cast/standalone_receiver/cast_socket_message_port.cc",
        "patchSetId": 5
      },
      "lineNbr": 53,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-03-31T01:41:52Z",
      "side": 1,
      "message": "Thanks! I\u0027ve been trying to limit the amount of code for this patch, I really want the cast agent to be as simple as possible.",
      "parentUuid": "379092aa_3858ce97",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4cda307_f29c5cf0",
        "filename": "cast/streaming/receiver_session.h",
        "patchSetId": 5
      },
      "lineNbr": 106,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-03-31T00:03:45Z",
      "side": 1,
      "message": "I kind of prefer having ReceiverSession own the MessagePort.\n\nIt might be okay to think of a MessagePort as a wrapper around the underlying communication mechanism (has-a vs. is-a).  That way a caller can own a MessagePort and doesn\u0027t have to worry about its lifetime.   The MessagePort becomes closed when the transport goes away (the MP would have to observe the CastSocket to know when to close itself).\n\nIs that a big change from current behavior? Would it simplify the client-handling code in CastMessagePort?",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c9653b7_520be0ea",
        "filename": "cast/streaming/receiver_session.h",
        "patchSetId": 5
      },
      "lineNbr": 106,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2020-03-31T01:41:52Z",
      "side": 1,
      "message": "I feel similarly, but the wrinkle in the plan is the ReceiverSocketFactory, which demands that a valid CastSocket::Client be provided upon construction. Since the RecieverSocketFactory predates the ReceiverSession it\u0027s not feasible really to have the ReceiverSession own the MessagePort, unless we have a separate CastSocket::Client that queues messages and then replays them to the MessagePort once we construct one.\n\nI don\u0027t really like the approach I ended up with that makes, but it\u0027s the simplest solution with the current lifetime and subscription models that we have.",
      "parentUuid": "b4cda307_f29c5cf0",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e643071_cbd9ec50",
        "filename": "cast/streaming/receiver_session.h",
        "patchSetId": 5
      },
      "lineNbr": 106,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2020-04-01T19:58:22Z",
      "side": 1,
      "message": "Ok, I think the MessagePort design needs to be rethought a bit, as it\u0027s reasonable for the CastSocket to outlive a MessagePort, and the code that is actually using the MessagePort to control lifetime.  Do you mind filing a Pri-3 issue in the tracker?",
      "parentUuid": "0c9653b7_520be0ea",
      "revId": "79daf9c4e3e122cff09c65695e78e19335ee21f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}