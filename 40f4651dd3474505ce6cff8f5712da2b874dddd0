{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a32eaef9_d821ae2d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-06-24T17:13:47Z",
      "side": 1,
      "message": "If we like this approach, I need to add more tests before a full review.\n\nI have been looking into media codec parameters, and it seems like there are quite a variety of them. In order to not completely change the way the ReceiverSession API works, I think that the embedder needs to pass ALL supported codec permutations (or libcast needs to understand and parse codec parameter fields). \n\nDefinitely intrigued by both of your thoughts, chkuo@ and mfoltz@. Would love to close out this bug/KR this quarter with a satisfactory resolution. chkuo@, do you think nest devices can adequately provide all supported codec parameter strings--and how many is that likely to be on a given device? Enough for a std::unordered_set?",
      "revId": "40f4651dd3474505ce6cff8f5712da2b874dddd0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ed2f6987_7588b2ee",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2021-06-24T19:24:32Z",
      "side": 1,
      "message": "Can you provide a link to a design doc for this change or some sort of explainer?  The linked bug doesn\u0027t have much detail and is marked WontFix.",
      "revId": "40f4651dd3474505ce6cff8f5712da2b874dddd0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "40f4a5c9_ee34667d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-06-24T21:47:35Z",
      "side": 1,
      "message": "This is from chkuo\u0027s document:\n\nhttps://docs.google.com/document/d/1nNnDR65d-dUU1nDIoSNF3D5Fp9hJXdWvU3SKLgwNMT4\n\nAnd it\u0027s a draft field in the control protocol:\n\nhttps://docs.google.com/document/d/185CrNrHl9Vy3QqpVEg58HbhR7Rsw5Z1XPP-ixp0rgIQ",
      "parentUuid": "ed2f6987_7588b2ee",
      "revId": "40f4651dd3474505ce6cff8f5712da2b874dddd0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1825d197_f87fbf39",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2021-06-25T18:46:51Z",
      "side": 1,
      "message": "Thanks, I left some comments in the doc.  There are some outstanding questions about the overall plan here and I think we should try to resolve as many of those as we can before landing.",
      "revId": "40f4651dd3474505ce6cff8f5712da2b874dddd0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe0401e4_25b03f78",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1323871
      },
      "writtenOn": "2021-06-28T17:10:18Z",
      "side": 1,
      "message": "100 percent agree. I wanted to put up a propositional patch so we can see what it looks like in practice and see if it\u0027s what we want or if we even want to deliver this. I don\u0027t anticipate this landing as-is or right now.",
      "parentUuid": "1825d197_f87fbf39",
      "revId": "40f4651dd3474505ce6cff8f5712da2b874dddd0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a01b59b2_caf2214f",
        "filename": "cast/streaming/receiver_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1319019
      },
      "writtenOn": "2021-06-25T18:22:39Z",
      "side": 1,
      "message": "Is there a way to query whether the codec parameter is supported or not instead of doing string matching? I think using string matching isn\u0027t the best way to check the codec support.\n\nFor example, the higher level profile could be also used to support the lower level profile. Unless, |preferred_codec_parameters| is guaranteed to provide all supported codec parameter strings.",
      "revId": "40f4651dd3474505ce6cff8f5712da2b874dddd0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}